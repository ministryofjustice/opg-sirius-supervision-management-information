{
  "version": 3,
  "sources": ["../../../node_modules/govuk-frontend/src/govuk/common/index.mjs", "../../../node_modules/govuk-frontend/src/govuk/errors/index.mjs", "../../../node_modules/govuk-frontend/src/govuk/component.mjs", "../../../node_modules/govuk-frontend/src/govuk/common/configuration.mjs", "../../../node_modules/govuk-frontend/src/govuk/i18n.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/accordion/accordion.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/button/button.mjs", "../../../node_modules/govuk-frontend/src/govuk/common/closest-attribute-value.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/character-count/character-count.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/checkboxes/checkboxes.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/error-summary/error-summary.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/exit-this-page/exit-this-page.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/file-upload/file-upload.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/header/header.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/notification-banner/notification-banner.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/password-input/password-input.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/radios/radios.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/service-navigation/service-navigation.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/skip-link/skip-link.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/tabs/tabs.mjs", "../../../node_modules/govuk-frontend/src/govuk/init.mjs", "../../../node_modules/opg-sirius-header/sirius-header.js", "../../../node_modules/htmx.org/dist/htmx.esm.js", "../../assets/main.js"],
  "sourcesContent": ["/**\n * Common helpers which do not require polyfill.\n *\n * IMPORTANT: If a helper require a polyfill, please isolate it in its own module\n * so that the polyfill can be properly tree-shaken and does not burden\n * the components that do not need that helper\n */\n\n/**\n * Get GOV.UK Frontend breakpoint value from CSS custom property\n *\n * @private\n * @param {string} name - Breakpoint name\n * @returns {{ property: string, value?: string }} Breakpoint object\n */\nexport function getBreakpoint(name) {\n  const property = `--govuk-breakpoint-${name}`\n\n  // Get value from `<html>` with breakpoints on CSS :root\n  const value = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(property)\n\n  return {\n    property,\n    value: value || undefined\n  }\n}\n\n/**\n * Move focus to element\n *\n * Sets tabindex to -1 to make the element programmatically focusable,\n * but removes it on blur as the element doesn't need to be focused again.\n *\n * @private\n * @template {HTMLElement} FocusElement\n * @param {FocusElement} $element - HTML element\n * @param {object} [options] - Handler options\n * @param {function(this: FocusElement): void} [options.onBeforeFocus] - Callback before focus\n * @param {function(this: FocusElement): void} [options.onBlur] - Callback on blur\n */\nexport function setFocus($element, options = {}) {\n  const isFocusable = $element.getAttribute('tabindex')\n\n  if (!isFocusable) {\n    $element.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Handle element focus\n   */\n  function onFocus() {\n    $element.addEventListener('blur', onBlur, { once: true })\n  }\n\n  /**\n   * Handle element blur\n   */\n  function onBlur() {\n    options.onBlur?.call($element)\n\n    if (!isFocusable) {\n      $element.removeAttribute('tabindex')\n    }\n  }\n\n  // Add listener to reset element on blur, after focus\n  $element.addEventListener('focus', onFocus, { once: true })\n\n  // Focus element\n  options.onBeforeFocus?.call($element)\n  $element.focus()\n}\n\n/**\n * Checks if component is already initialised\n *\n * @internal\n * @param {Element} $root - HTML element to be checked\n * @param {string} moduleName - name of component module\n * @returns {boolean} Whether component is already initialised\n */\nexport function isInitialised($root, moduleName) {\n  return (\n    $root instanceof HTMLElement &&\n    $root.hasAttribute(`data-${moduleName}-init`)\n  )\n}\n\n/**\n * Checks if GOV.UK Frontend is supported on this page\n *\n * Some browsers will load and run our JavaScript but GOV.UK Frontend\n * won't be supported.\n *\n * @param {HTMLElement | null} [$scope] - (internal) `<body>` HTML element checked for browser support\n * @returns {boolean} Whether GOV.UK Frontend is supported on this page\n */\nexport function isSupported($scope = document.body) {\n  if (!$scope) {\n    return false\n  }\n\n  return $scope.classList.contains('govuk-frontend-supported')\n}\n\n/**\n * Check for an array\n *\n * @internal\n * @param {unknown} option - Option to check\n * @returns {boolean} Whether the option is an array\n */\nfunction isArray(option) {\n  return Array.isArray(option)\n}\n\n/**\n * Check for an object\n *\n * @internal\n * @template {Partial<Record<keyof ObjectType, unknown>>} ObjectType\n * @param {unknown | ObjectType} option - Option to check\n * @returns {option is ObjectType} Whether the option is an object\n */\nexport function isObject(option) {\n  return !!option && typeof option === 'object' && !isArray(option)\n}\n\n/**\n * Check for valid scope\n *\n * @internal\n * @template {Element | Document} ScopeType\n * @param {unknown | ScopeType} $scope - Scope of the document to search within\n * @returns {$scope is ScopeType} Whether the scope can be queried\n */\nexport function isScope($scope) {\n  return !!$scope && ($scope instanceof Element || $scope instanceof Document)\n}\n\n/**\n * Format error message\n *\n * @internal\n * @param {ComponentWithModuleName} Component - Component that threw the error\n * @param {string} message - Error message\n * @returns {string} - Formatted error message\n */\nexport function formatErrorMessage(Component, message) {\n  return `${Component.moduleName}: ${message}`\n}\n\n/* eslint-disable jsdoc/valid-types --\n * `{new(...args: any[] ): object}` is not recognised as valid\n * https://github.com/gajus/eslint-plugin-jsdoc/issues/145#issuecomment-1308722878\n * https://github.com/jsdoc-type-pratt-parser/jsdoc-type-pratt-parser/issues/131\n **/\n\n/**\n * @typedef ComponentWithModuleName\n * @property {string} moduleName - Name of the component\n */\n\n/* eslint-enable jsdoc/valid-types */\n", "import { formatErrorMessage, isObject } from '../common/index.mjs'\n\n/**\n * GOV.UK Frontend error\n *\n * A base class for `Error`s thrown by GOV.UK Frontend.\n *\n * It is meant to be extended into specific types of errors\n * to be thrown by our code.\n *\n * @example\n * ```js\n * class MissingRootError extends GOVUKFrontendError {\n *   // Setting an explicit name is important as extending the class will not\n *   // set a new `name` on the subclass. The `name` property is important\n *   // to ensure intelligible error names even if the class name gets\n *   // mangled by a minifier\n *   name = \"MissingRootError\"\n * }\n * ```\n * @virtual\n */\nexport class GOVUKFrontendError extends Error {\n  name = 'GOVUKFrontendError'\n}\n\n/**\n * Indicates that GOV.UK Frontend is not supported\n */\nexport class SupportError extends GOVUKFrontendError {\n  name = 'SupportError'\n\n  /**\n   * Checks if GOV.UK Frontend is supported on this page\n   *\n   * @param {HTMLElement | null} [$scope] - HTML element `<body>` checked for browser support\n   */\n  constructor($scope = document.body) {\n    const supportMessage =\n      'noModule' in HTMLScriptElement.prototype\n        ? 'GOV.UK Frontend initialised without `<body class=\"govuk-frontend-supported\">` from template `<script>` snippet'\n        : 'GOV.UK Frontend is not supported in this browser'\n\n    super(\n      $scope\n        ? supportMessage\n        : 'GOV.UK Frontend initialised without `<script type=\"module\">`'\n    )\n  }\n}\n\n/**\n * Indicates that a component has received an illegal configuration\n */\nexport class ConfigError extends GOVUKFrontendError {\n  name = 'ConfigError'\n}\n\n/**\n * Indicates an issue with an element (possibly `null` or `undefined`)\n */\nexport class ElementError extends GOVUKFrontendError {\n  name = 'ElementError'\n\n  /**\n   * @internal\n   * @overload\n   * @param {string} message - Element error message\n   */\n\n  /**\n   * @internal\n   * @overload\n   * @param {ElementErrorOptions} options - Element error options\n   */\n\n  /**\n   * @internal\n   * @param {string | ElementErrorOptions} messageOrOptions - Element error message or options\n   */\n  constructor(messageOrOptions) {\n    let message = typeof messageOrOptions === 'string' ? messageOrOptions : ''\n\n    // Build message from options\n    if (isObject(messageOrOptions)) {\n      const { component, identifier, element, expectedType } = messageOrOptions\n\n      message = identifier\n\n      // Append reason\n      message += element\n        ? ` is not of type ${expectedType ?? 'HTMLElement'}`\n        : ' not found'\n\n      // Prepend with module name (optional)\n      if (component) {\n        message = formatErrorMessage(component, message)\n      }\n    }\n\n    super(message)\n  }\n}\n\n/**\n * Indicates that a component is already initialised\n */\nexport class InitError extends GOVUKFrontendError {\n  name = 'InitError'\n\n  /**\n   * @internal\n   * @param {ComponentWithModuleName | string} componentOrMessage - name of the component module\n   */\n  constructor(componentOrMessage) {\n    const message =\n      typeof componentOrMessage === 'string'\n        ? componentOrMessage\n        : formatErrorMessage(\n            componentOrMessage,\n            `Root element (\\`$root\\`) already initialised`\n          )\n\n    super(message)\n  }\n}\n\n/**\n * Element error options\n *\n * @internal\n * @typedef {object} ElementErrorOptions\n * @property {Element | Document | null} [element] - The element in error (optional)\n * @property {ComponentWithModuleName} [component] - Component throwing the error (optional)\n * @property {string} identifier - An identifier that'll let the user understand which element has an error. This is whatever makes the most sense\n * @property {string} [expectedType] - The type that was expected for the identifier (optional)\n */\n\n/**\n * @import { ComponentWithModuleName } from '../common/index.mjs'\n */\n", "import { isInitialised, isSupported } from './common/index.mjs'\nimport { ElementError, InitError, SupportError } from './errors/index.mjs'\n\n/**\n * Base Component class\n *\n * Centralises the behaviours shared by our components\n *\n * @virtual\n * @template {Element} [RootElementType=HTMLElement]\n */\nexport class Component {\n  /**\n   * @type {typeof Element}\n   */\n  static elementType = HTMLElement\n\n  // allows Typescript user to work around the lack of types\n  // in GOVUKFrontend package, Typescript is not aware of $root\n  // in components that extend GOVUKFrontendComponent\n  /**\n   * Returns the root element of the component\n   *\n   * @protected\n   * @returns {RootElementType} - the root element of component\n   */\n  get $root() {\n    return this._$root\n  }\n\n  /**\n   * @protected\n   * @type {RootElementType}\n   */\n  _$root\n\n  /**\n   * Constructs a new component, validating that GOV.UK Frontend is supported\n   *\n   * @internal\n   * @param {Element | null} [$root] - HTML element to use for component\n   */\n  constructor($root) {\n    const childConstructor = /** @type {ChildClassConstructor} */ (\n      this.constructor\n    )\n\n    // TypeScript does not enforce that inheriting classes will define a `moduleName`\n    // (even if we add a `@virtual` `static moduleName` property to this class).\n    // While we trust users to do this correctly, we do a little check to provide them\n    // a helpful error message.\n    //\n    // After this, we'll be sure that `childConstructor` has a `moduleName`\n    // as expected of the `ChildClassConstructor` we've cast `this.constructor` to.\n    if (typeof childConstructor.moduleName !== 'string') {\n      throw new InitError(`\\`moduleName\\` not defined in component`)\n    }\n\n    if (!($root instanceof childConstructor.elementType)) {\n      throw new ElementError({\n        element: $root,\n        component: childConstructor,\n        identifier: 'Root element (`$root`)',\n        expectedType: childConstructor.elementType.name\n      })\n    } else {\n      this._$root = /** @type {RootElementType} */ ($root)\n    }\n\n    childConstructor.checkSupport()\n\n    this.checkInitialised()\n\n    const moduleName = childConstructor.moduleName\n\n    this.$root.setAttribute(`data-${moduleName}-init`, '')\n  }\n\n  /**\n   * Validates whether component is already initialised\n   *\n   * @private\n   * @throws {InitError} when component is already initialised\n   */\n  checkInitialised() {\n    const constructor = /** @type {ChildClassConstructor} */ (this.constructor)\n    const moduleName = constructor.moduleName\n\n    if (moduleName && isInitialised(this.$root, moduleName)) {\n      throw new InitError(constructor)\n    }\n  }\n\n  /**\n   * Validates whether components are supported\n   *\n   * @throws {SupportError} when the components are not supported\n   */\n  static checkSupport() {\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n  }\n}\n\n/**\n * @typedef ChildClass\n * @property {string} moduleName - The module name that'll be looked for in the DOM when initialising the component\n */\n\n/**\n * @typedef {typeof Component & ChildClass} ChildClassConstructor\n */\n", "import { Component } from '../component.mjs'\nimport { ConfigError } from '../errors/index.mjs'\n\nimport { isObject, isScope, formatErrorMessage } from './index.mjs'\n\nexport const configOverride = Symbol.for('configOverride')\n\n/**\n * Base Component class\n *\n * Centralises the behaviours shared by our components\n *\n * @virtual\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} [ConfigurationType=ObjectNested]\n * @template {Element & { dataset: DOMStringMap }} [RootElementType=HTMLElement]\n * @augments Component<RootElementType>\n */\nexport class ConfigurableComponent extends Component {\n  /**\n   * configOverride\n   *\n   * Function which defines configuration overrides to prioritize\n   * properties from the root element's dataset.\n   *\n   * It should take a subset of configuration as input and return\n   * a new configuration object with properties that should be\n   * overridden based on the root element's dataset. A Symbol\n   * is used for indexing to prevent conflicts.\n   *\n   * @internal\n   * @virtual\n   * @param {Partial<ConfigurationType>} [param] - Configuration object\n   * @returns {Partial<ConfigurationType>} return - Configuration object\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [configOverride](param) {\n    return {}\n  }\n\n  /**\n   * Returns the root element of the component\n   *\n   * @protected\n   * @returns {ConfigurationType} - the root element of component\n   */\n  get config() {\n    return this._config\n  }\n\n  /**\n   *\n   * @type {ConfigurationType}\n   */\n  _config\n\n  /**\n   * Constructs a new component, validating that GOV.UK Frontend is supported\n   *\n   * @internal\n   * @param {Element | null} [$root] - HTML element to use for component\n   * @param {ConfigurationType} [config] - HTML element to use for component\n   */\n  constructor($root, config) {\n    super($root)\n\n    const childConstructor =\n      /** @type {ChildClassConstructor<ConfigurationType>} */ (this.constructor)\n\n    if (!isObject(childConstructor.defaults)) {\n      throw new ConfigError(\n        formatErrorMessage(\n          childConstructor,\n          'Config passed as parameter into constructor but no defaults defined'\n        )\n      )\n    }\n\n    const datasetConfig = /** @type {ConfigurationType} */ (\n      normaliseDataset(childConstructor, this._$root.dataset)\n    )\n\n    this._config = /** @type {ConfigurationType} */ (\n      mergeConfigs(\n        childConstructor.defaults,\n        config ?? {},\n        this[configOverride](datasetConfig),\n        datasetConfig\n      )\n    )\n  }\n}\n\n/**\n * Normalise string\n *\n * 'If it looks like a duck, and it quacks like a duck…' 🦆\n *\n * If the passed value looks like a boolean or a number, convert it to a boolean\n * or number.\n *\n * Designed to be used to convert config passed via data attributes (which are\n * always strings) into something sensible.\n *\n * @internal\n * @param {DOMStringMap[string]} value - The value to normalise\n * @param {SchemaProperty} [property] - Component schema property\n * @returns {string | boolean | number | undefined} Normalised data\n */\nexport function normaliseString(value, property) {\n  const trimmedValue = value ? value.trim() : ''\n\n  let output\n  let outputType = property?.type\n\n  // No schema type set? Determine automatically\n  if (!outputType) {\n    if (['true', 'false'].includes(trimmedValue)) {\n      outputType = 'boolean'\n    }\n\n    // Empty / whitespace-only strings are considered finite so we need to check\n    // the length of the trimmed string as well\n    if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n      outputType = 'number'\n    }\n  }\n\n  switch (outputType) {\n    case 'boolean':\n      output = trimmedValue === 'true'\n      break\n\n    case 'number':\n      output = Number(trimmedValue)\n      break\n\n    default:\n      output = value\n  }\n\n  return output\n}\n\n/**\n * Normalise dataset\n *\n * Loop over an object and normalise each value using {@link normaliseString},\n * optionally expanding nested `i18n.field`\n *\n * @internal\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @template {[keyof ConfigurationType, SchemaProperty | undefined][]} SchemaEntryType\n * @param {{ schema?: Schema<ConfigurationType>, moduleName: string }} Component - Component class\n * @param {DOMStringMap} dataset - HTML element dataset\n * @returns {ObjectNested} Normalised dataset\n */\nexport function normaliseDataset(Component, dataset) {\n  if (!isObject(Component.schema)) {\n    throw new ConfigError(\n      formatErrorMessage(\n        Component,\n        'Config passed as parameter into constructor but no schema defined'\n      )\n    )\n  }\n\n  const out = /** @type {ObjectNested} */ ({})\n  const entries = /** @type {SchemaEntryType} */ (\n    Object.entries(Component.schema.properties)\n  )\n\n  // Normalise top-level dataset ('data-*') values using schema types\n  for (const entry of entries) {\n    const [namespace, property] = entry\n\n    // Cast the `namespace` to string so it can be used to access the dataset\n    const field = namespace.toString()\n\n    if (field in dataset) {\n      out[field] = normaliseString(dataset[field], property)\n    }\n\n    /**\n     * Extract and normalise nested object values automatically using\n     * {@link normaliseString} but only schema object types are allowed\n     */\n    if (property?.type === 'object') {\n      out[field] = extractConfigByNamespace(\n        Component.schema,\n        dataset,\n        namespace\n      )\n    }\n  }\n\n  return out\n}\n\n/**\n * Normalise options passed to `initAll` or `createAll`\n *\n * @internal\n * @template {CompatibleClass} ComponentClass\n * @param {Config | CreateAllOptions<ComponentClass> | OnErrorCallback<ComponentClass> | Element | Document | null} [scopeOrOptions] - Scope of the document to search within, initialisation options or error callback function\n * @returns {CreateAllOptions<ComponentClass>} Normalised options\n */\nexport function normaliseOptions(scopeOrOptions) {\n  let /** @type {Element | Document | null} */ $scope = document\n  let /** @type {OnErrorCallback<ComponentClass> | undefined} */ onError\n\n  // Handle options object\n  if (isObject(scopeOrOptions)) {\n    const options = scopeOrOptions\n\n    // Scope must be valid or null\n    if (isScope(options.scope) || options.scope === null) {\n      $scope = options.scope\n    }\n\n    // Error handler must be a function\n    if (typeof options.onError === 'function') {\n      onError = options.onError\n    }\n  }\n\n  if (isScope(scopeOrOptions)) {\n    $scope = scopeOrOptions\n  } else if (scopeOrOptions === null) {\n    $scope = null\n  } else if (typeof scopeOrOptions === 'function') {\n    onError = scopeOrOptions\n  }\n\n  return {\n    scope: $scope,\n    onError\n  }\n}\n\n/**\n * Config merging function\n *\n * Takes any number of objects and combines them together, with\n * greatest priority on the LAST item passed in.\n *\n * @internal\n * @param {...{ [key: string]: unknown }} configObjects - Config objects to merge\n * @returns {{ [key: string]: unknown }} A merged config object\n */\nexport function mergeConfigs(...configObjects) {\n  // Start with an empty object as our base\n  /** @type {{ [key: string]: unknown }} */\n  const formattedConfigObject = {}\n\n  // Loop through each of the passed objects\n  for (const configObject of configObjects) {\n    for (const key of Object.keys(configObject)) {\n      const option = formattedConfigObject[key]\n      const override = configObject[key]\n\n      // Push their keys one-by-one into formattedConfigObject. Any duplicate\n      // keys with object values will be merged, otherwise the new value will\n      // override the existing value.\n      if (isObject(option) && isObject(override)) {\n        formattedConfigObject[key] = mergeConfigs(option, override)\n      } else {\n        // Apply override\n        formattedConfigObject[key] = override\n      }\n    }\n  }\n\n  return formattedConfigObject\n}\n\n/**\n * Validate component config by schema\n *\n * Follows limited examples in JSON schema for wider support in future\n *\n * {@link https://ajv.js.org/json-schema.html#compound-keywords}\n * {@link https://ajv.js.org/packages/ajv-errors.html#single-message}\n *\n * @internal\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @param {Schema<ConfigurationType>} schema - The schema of a component\n * @param {ConfigurationType} config - Component config\n * @returns {string[]} List of validation errors\n */\nexport function validateConfig(schema, config) {\n  const validationErrors = []\n\n  // Check errors for each schema\n  for (const [name, conditions] of Object.entries(schema)) {\n    const errors = []\n\n    // Check errors for each schema condition\n    if (Array.isArray(conditions)) {\n      for (const { required, errorMessage } of conditions) {\n        if (!required.every((key) => !!config[key])) {\n          errors.push(errorMessage) // Missing config key value\n        }\n      }\n\n      // Check one condition passes or add errors\n      if (name === 'anyOf' && !(conditions.length - errors.length >= 1)) {\n        validationErrors.push(...errors)\n      }\n    }\n  }\n\n  return validationErrors\n}\n\n/**\n * Extracts keys starting with a particular namespace from dataset ('data-*')\n * object, removing the namespace in the process, normalising all values\n *\n * @internal\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @param {Schema<ConfigurationType>} schema - The schema of a component\n * @param {DOMStringMap} dataset - The object to extract key-value pairs from\n * @param {keyof ConfigurationType} namespace - The namespace to filter keys with\n * @returns {ObjectNested | undefined} Nested object with dot-separated key namespace removed\n */\nexport function extractConfigByNamespace(schema, dataset, namespace) {\n  const property = schema.properties[namespace]\n\n  // Only extract configs for object schema properties\n  if (property?.type !== 'object') {\n    return\n  }\n\n  // Add default empty config\n  const newObject = /** @type {Record<typeof namespace, ObjectNested>} */ ({\n    [namespace]: {}\n  })\n\n  for (const [key, value] of Object.entries(dataset)) {\n    /** @type {ObjectNested | ObjectNested[NestedKey]} */\n    let current = newObject\n\n    // Split the key into parts, using . as our namespace separator\n    const keyParts = key.split('.')\n\n    /**\n     * Create new level per part\n     *\n     * e.g. 'i18n.textareaDescription.other' becomes\n     * `{ i18n: { textareaDescription: { other } } }`\n     */\n    for (const [index, name] of keyParts.entries()) {\n      if (isObject(current)) {\n        // Drop down to nested object until the last part\n        if (index < keyParts.length - 1) {\n          // New nested object (optionally) replaces existing value\n          if (!isObject(current[name])) {\n            current[name] = {}\n          }\n\n          // Drop down into new or existing nested object\n          current = current[name]\n        } else if (key !== namespace) {\n          // Normalised value (optionally) replaces existing value\n          current[name] = normaliseString(value)\n        }\n      }\n    }\n  }\n\n  return newObject[namespace]\n}\n\n/**\n * @internal\n * @typedef {keyof ObjectNested} NestedKey\n * @typedef {{ [key: string]: string | boolean | number | ObjectNested | undefined }} ObjectNested\n */\n\n/**\n * Schema for component config\n *\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @typedef {object} Schema\n * @property {Record<keyof ConfigurationType, SchemaProperty | undefined>} properties - Schema properties\n * @property {SchemaCondition<ConfigurationType>[]} [anyOf] - List of schema conditions\n */\n\n/**\n * Schema property for component config\n *\n * @typedef {object} SchemaProperty\n * @property {'string' | 'boolean' | 'number' | 'object'} type - Property type\n */\n\n/**\n * Schema condition for component config\n *\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @typedef {object} SchemaCondition\n * @property {(keyof ConfigurationType)[]} required - List of required config fields\n * @property {string} errorMessage - Error message when required config fields not provided\n */\n\n/**\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} [ConfigurationType=ObjectNested]\n * @typedef ChildClass\n * @property {string} moduleName - The module name that'll be looked for in the DOM when initialising the component\n * @property {Schema<ConfigurationType>} [schema] - The schema of the component configuration\n * @property {ConfigurationType} [defaults] - The default values of the configuration of the component\n */\n\n/**\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} [ConfigurationType=ObjectNested]\n * @typedef {typeof Component & ChildClass<ConfigurationType>} ChildClassConstructor<ConfigurationType>\n */\n\n/**\n * @import { CompatibleClass, Config, CreateAllOptions, OnErrorCallback } from '../init.mjs'\n */\n", "import { isObject } from './common/index.mjs'\n\n/**\n * Internal support for selecting messages to render, with placeholder\n * interpolation and locale-aware number formatting and pluralisation\n *\n * @internal\n */\nexport class I18n {\n  translations\n  locale\n\n  /**\n   * @internal\n   * @param {{ [key: string]: string | TranslationPluralForms }} translations - Key-value pairs of the translation strings to use.\n   * @param {object} [config] - Configuration options for the function.\n   * @param {string | null} [config.locale] - An overriding locale for the PluralRules functionality.\n   */\n  constructor(translations = {}, config = {}) {\n    // Make list of translations available throughout function\n    this.translations = translations\n\n    // The locale to use for PluralRules and NumberFormat\n    this.locale = config.locale ?? (document.documentElement.lang || 'en')\n  }\n\n  /**\n   * The most used function - takes the key for a given piece of UI text and\n   * returns the appropriate string.\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {{ [key: string]: unknown }} [options] - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The appropriate translation string.\n   * @throws {Error} Lookup key required\n   * @throws {Error} Options required for `${}` placeholders\n   */\n  t(lookupKey, options) {\n    if (!lookupKey) {\n      // Print a console error if no lookup key has been provided\n      throw new Error('i18n: lookup key missing')\n    }\n\n    // Fetch the translation for that lookup key\n    let translation = this.translations[lookupKey]\n\n    // If the `count` option is set, determine which plural suffix is needed and\n    // change the lookupKey to match. We check to see if it's numeric instead of\n    // falsy, as this could legitimately be 0.\n    if (typeof options?.count === 'number' && isObject(translation)) {\n      const translationPluralForm =\n        translation[this.getPluralSuffix(lookupKey, options.count)]\n\n      // Update translation with plural suffix\n      if (translationPluralForm) {\n        translation = translationPluralForm\n      }\n    }\n\n    if (typeof translation === 'string') {\n      // Check for ${} placeholders in the translation string\n      // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n      if (translation.match(/%{(.\\S+)}/)) {\n        if (!options) {\n          throw new Error(\n            'i18n: cannot replace placeholders in string if no option data provided'\n          )\n        }\n\n        return this.replacePlaceholders(translation, options)\n      }\n\n      return translation\n    }\n\n    // If the key wasn't found in our translations object,\n    // return the lookup key itself as the fallback\n    return lookupKey\n  }\n\n  /**\n   * Takes a translation string with placeholders, and replaces the placeholders\n   * with the provided data\n   *\n   * @internal\n   * @param {string} translationString - The translation string\n   * @param {{ [key: string]: unknown }} options - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The translation string to output, with $\\{\\} placeholders replaced\n   */\n  replacePlaceholders(translationString, options) {\n    const formatter = Intl.NumberFormat.supportedLocalesOf(this.locale).length\n      ? new Intl.NumberFormat(this.locale)\n      : undefined\n\n    return translationString.replace(\n      /%{(.\\S+)}/g,\n\n      /**\n       * Replace translation string placeholders\n       *\n       * @internal\n       * @param {string} placeholderWithBraces - Placeholder with braces\n       * @param {string} placeholderKey - Placeholder key\n       * @returns {string} Placeholder value\n       */\n      function (placeholderWithBraces, placeholderKey) {\n        if (Object.prototype.hasOwnProperty.call(options, placeholderKey)) {\n          const placeholderValue = options[placeholderKey]\n\n          // If a user has passed `false` as the value for the placeholder\n          // treat it as though the value should not be displayed\n          if (\n            placeholderValue === false ||\n            (typeof placeholderValue !== 'number' &&\n              typeof placeholderValue !== 'string')\n          ) {\n            return ''\n          }\n\n          // If the placeholder's value is a number, localise the number formatting\n          if (typeof placeholderValue === 'number') {\n            return formatter\n              ? formatter.format(placeholderValue)\n              : `${placeholderValue}`\n          }\n\n          return placeholderValue\n        }\n\n        throw new Error(\n          `i18n: no data found to replace ${placeholderWithBraces} placeholder in string`\n        )\n      }\n    )\n  }\n\n  /**\n   * Check to see if the browser supports Intl.PluralRules\n   *\n   * It requires all conditions to be met in order to be supported:\n   * - The implementation of Intl supports PluralRules (NOT true in Safari 10–12)\n   * - The browser/OS has plural rules for the current locale (browser dependent)\n   *\n   * {@link https://browsersl.ist/#q=supports+es6-module+and+not+supports+intl-pluralrules}\n   *\n   * @internal\n   * @returns {boolean} Returns true if all conditions are met. Returns false otherwise.\n   */\n  hasIntlPluralRulesSupport() {\n    return Boolean(\n      'PluralRules' in window.Intl &&\n        Intl.PluralRules.supportedLocalesOf(this.locale).length\n    )\n  }\n\n  /**\n   * Get the appropriate suffix for the plural form.\n   *\n   * Uses Intl.PluralRules (or our own fallback implementation) to get the\n   * 'preferred' form to use for the given count.\n   *\n   * Checks that a translation has been provided for that plural form – if it\n   * hasn't, it'll fall back to the 'other' plural form (unless that doesn't exist\n   * either, in which case an error will be thrown)\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The suffix associated with the correct pluralisation for this locale.\n   * @throws {Error} Plural form `.other` required when preferred plural form is missing\n   */\n  getPluralSuffix(lookupKey, count) {\n    // Validate that the number is actually a number.\n    //\n    // Number(count) will turn anything that can't be converted to a Number type\n    // into 'NaN'. isFinite filters out NaN, as it isn't a finite number.\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-conversion\n    count = Number(count)\n    if (!isFinite(count)) {\n      return 'other'\n    }\n\n    // Fetch the translation for that lookup key\n    const translation = this.translations[lookupKey]\n\n    // Check to verify that all the requirements for Intl.PluralRules are met.\n    // If so, we can use that instead of our custom implementation. Otherwise,\n    // use the hardcoded fallback.\n    const preferredForm = this.hasIntlPluralRulesSupport()\n      ? new Intl.PluralRules(this.locale).select(count)\n      : 'other'\n\n    // Use the correct plural form if provided\n    if (isObject(translation)) {\n      if (preferredForm in translation) {\n        return preferredForm\n        // Fall back to `other` if the plural form is missing, but log a warning\n        // to the console\n      } else if ('other' in translation) {\n        console.warn(\n          `i18n: Missing plural form \".${preferredForm}\" for \"${this.locale}\" locale. Falling back to \".other\".`\n        )\n\n        return 'other'\n      }\n    }\n\n    // If the required `other` plural form is missing, all we can do is error\n    throw new Error(\n      `i18n: Plural form \".other\" is required for \"${this.locale}\" locale`\n    )\n  }\n}\n\n/**\n * Plural rule category mnemonic tags\n *\n * @internal\n * @typedef {'zero' | 'one' | 'two' | 'few' | 'many' | 'other'} PluralRule\n */\n\n/**\n * Translated message by plural rule they correspond to.\n *\n * Allows to group pluralised messages under a single key when passing\n * translations to a component's constructor\n *\n * @internal\n * @typedef {object} TranslationPluralForms\n * @property {string} [other] - General plural form\n * @property {string} [zero] - Plural form used with 0\n * @property {string} [one] - Plural form used with 1\n * @property {string} [two] - Plural form used with 2\n * @property {string} [few] - Plural form used for a few\n * @property {string} [many] - Plural form used for many\n */\n", "import { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Accordion component\n *\n * This allows a collection of sections to be collapsed by default, showing only\n * their headers. Sections can be expanded or collapsed individually by clicking\n * their headers. A \"Show all sections\" button is also added to the top of the\n * accordion, which switches to \"Hide all sections\" when all the sections are\n * expanded.\n *\n * The state of each section is saved to the DOM via the `aria-expanded`\n * attribute, which also provides accessibility.\n *\n * @preserve\n * @augments ConfigurableComponent<AccordionConfig>\n */\nexport class Accordion extends ConfigurableComponent {\n  /** @private */\n  i18n\n\n  /** @private */\n  controlsClass = 'govuk-accordion__controls'\n\n  /** @private */\n  showAllClass = 'govuk-accordion__show-all'\n\n  /** @private */\n  showAllTextClass = 'govuk-accordion__show-all-text'\n\n  /** @private */\n  sectionClass = 'govuk-accordion__section'\n\n  /** @private */\n  sectionExpandedClass = 'govuk-accordion__section--expanded'\n\n  /** @private */\n  sectionButtonClass = 'govuk-accordion__section-button'\n\n  /** @private */\n  sectionHeaderClass = 'govuk-accordion__section-header'\n\n  /** @private */\n  sectionHeadingClass = 'govuk-accordion__section-heading'\n\n  /** @private */\n  sectionHeadingDividerClass = 'govuk-accordion__section-heading-divider'\n\n  /** @private */\n  sectionHeadingTextClass = 'govuk-accordion__section-heading-text'\n\n  /** @private */\n  sectionHeadingTextFocusClass = 'govuk-accordion__section-heading-text-focus'\n\n  /** @private */\n  sectionShowHideToggleClass = 'govuk-accordion__section-toggle'\n\n  /** @private */\n  sectionShowHideToggleFocusClass = 'govuk-accordion__section-toggle-focus'\n\n  /** @private */\n  sectionShowHideTextClass = 'govuk-accordion__section-toggle-text'\n\n  /** @private */\n  upChevronIconClass = 'govuk-accordion-nav__chevron'\n\n  /** @private */\n  downChevronIconClass = 'govuk-accordion-nav__chevron--down'\n\n  /** @private */\n  sectionSummaryClass = 'govuk-accordion__section-summary'\n\n  /** @private */\n  sectionSummaryFocusClass = 'govuk-accordion__section-summary-focus'\n\n  /** @private */\n  sectionContentClass = 'govuk-accordion__section-content'\n\n  /** @private */\n  $sections\n\n  /**\n   * @private\n   * @type {HTMLButtonElement | null}\n   */\n  $showAllButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllIcon = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllText = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for accordion\n   * @param {AccordionConfig} [config] - Accordion config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    this.i18n = new I18n(this.config.i18n)\n\n    const $sections = this.$root.querySelectorAll(`.${this.sectionClass}`)\n    if (!$sections.length) {\n      throw new ElementError({\n        component: Accordion,\n        identifier: `Sections (\\`<div class=\"${this.sectionClass}\">\\`)`\n      })\n    }\n\n    this.$sections = $sections\n\n    this.initControls()\n    this.initSectionHeaders()\n\n    this.updateShowAllButton(this.areAllSectionsOpen())\n  }\n\n  /**\n   * Initialise controls and set attributes\n   *\n   * @private\n   */\n  initControls() {\n    // Create \"Show all\" button and set attributes\n    this.$showAllButton = document.createElement('button')\n    this.$showAllButton.setAttribute('type', 'button')\n    this.$showAllButton.setAttribute('class', this.showAllClass)\n    this.$showAllButton.setAttribute('aria-expanded', 'false')\n\n    // Create icon, add to element\n    this.$showAllIcon = document.createElement('span')\n    this.$showAllIcon.classList.add(this.upChevronIconClass)\n    this.$showAllButton.appendChild(this.$showAllIcon)\n\n    // Create control wrapper and add controls to it\n    const $accordionControls = document.createElement('div')\n    $accordionControls.setAttribute('class', this.controlsClass)\n    $accordionControls.appendChild(this.$showAllButton)\n    this.$root.insertBefore($accordionControls, this.$root.firstChild)\n\n    // Build additional wrapper for Show all toggle text and place after icon\n    this.$showAllText = document.createElement('span')\n    this.$showAllText.classList.add(this.showAllTextClass)\n    this.$showAllButton.appendChild(this.$showAllText)\n\n    // Handle click events on the show/hide all button\n    this.$showAllButton.addEventListener('click', () =>\n      this.onShowOrHideAllToggle()\n    )\n\n    // Handle 'beforematch' events, if the user agent supports them\n    if ('onbeforematch' in document) {\n      document.addEventListener('beforematch', (event) =>\n        this.onBeforeMatch(event)\n      )\n    }\n  }\n\n  /**\n   * Initialise section headers\n   *\n   * @private\n   */\n  initSectionHeaders() {\n    this.$sections.forEach(($section, i) => {\n      const $header = $section.querySelector(`.${this.sectionHeaderClass}`)\n      if (!$header) {\n        throw new ElementError({\n          component: Accordion,\n          identifier: `Section headers (\\`<div class=\"${this.sectionHeaderClass}\">\\`)`\n        })\n      }\n\n      // Set header attributes\n      this.constructHeaderMarkup($header, i)\n      this.setExpanded(this.isExpanded($section), $section)\n\n      // Handle events\n      $header.addEventListener('click', () => this.onSectionToggle($section))\n\n      // See if there is any state stored in sessionStorage and set the sections\n      // to open or closed.\n      this.setInitialState($section)\n    })\n  }\n\n  /**\n   * Construct section header\n   *\n   * @private\n   * @param {Element} $header - Section header\n   * @param {number} index - Section index\n   */\n  constructHeaderMarkup($header, index) {\n    const $span = $header.querySelector(`.${this.sectionButtonClass}`)\n    const $heading = $header.querySelector(`.${this.sectionHeadingClass}`)\n    const $summary = $header.querySelector(`.${this.sectionSummaryClass}`)\n\n    if (!$heading) {\n      throw new ElementError({\n        component: Accordion,\n        identifier: `Section heading (\\`.${this.sectionHeadingClass}\\`)`\n      })\n    }\n\n    if (!$span) {\n      throw new ElementError({\n        component: Accordion,\n        identifier: `Section button placeholder (\\`<span class=\"${this.sectionButtonClass}\">\\`)`\n      })\n    }\n\n    // Create a button element that will replace the\n    // '.govuk-accordion__section-button' span\n    const $button = document.createElement('button')\n    $button.setAttribute('type', 'button')\n    $button.setAttribute(\n      'aria-controls',\n      `${this.$root.id}-content-${index + 1}`\n    )\n\n    // Copy all attributes from $span to $button (except `id`, which gets added\n    // to the `$headingText` element)\n    for (const attr of Array.from($span.attributes)) {\n      if (attr.name !== 'id') {\n        $button.setAttribute(attr.name, attr.value)\n      }\n    }\n\n    // Create container for heading text so it can be styled\n    const $headingText = document.createElement('span')\n    $headingText.classList.add(this.sectionHeadingTextClass)\n    // Copy the span ID to the heading text to allow it to be referenced by\n    // `aria-labelledby` on the hidden content area without \"Show this section\"\n    $headingText.id = $span.id\n\n    // Create an inner heading text container to limit the width of the focus\n    // state\n    const $headingTextFocus = document.createElement('span')\n    $headingTextFocus.classList.add(this.sectionHeadingTextFocusClass)\n    $headingText.appendChild($headingTextFocus)\n    // span could contain HTML elements\n    // (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n    Array.from($span.childNodes).forEach(($child) =>\n      $headingTextFocus.appendChild($child)\n    )\n\n    // Create container for show / hide icons and text.\n    const $showHideToggle = document.createElement('span')\n    $showHideToggle.classList.add(this.sectionShowHideToggleClass)\n    // Tell Google not to index the 'show' text as part of the heading. Must be\n    // set on the element before it's added to the DOM.\n    // See https://developers.google.com/search/docs/advanced/robots/robots_meta_tag#data-nosnippet-attr\n    $showHideToggle.setAttribute('data-nosnippet', '')\n    // Create an inner container to limit the width of the focus state\n    const $showHideToggleFocus = document.createElement('span')\n    $showHideToggleFocus.classList.add(this.sectionShowHideToggleFocusClass)\n    $showHideToggle.appendChild($showHideToggleFocus)\n    // Create wrapper for the show / hide text. Append text after the show/hide icon\n    const $showHideText = document.createElement('span')\n    const $showHideIcon = document.createElement('span')\n    $showHideIcon.classList.add(this.upChevronIconClass)\n    $showHideToggleFocus.appendChild($showHideIcon)\n    $showHideText.classList.add(this.sectionShowHideTextClass)\n    $showHideToggleFocus.appendChild($showHideText)\n\n    // Append elements to the button:\n    // 1. Heading text\n    // 2. Punctuation\n    // 3. (Optional: Summary line followed by punctuation)\n    // 4. Show / hide toggle\n    $button.appendChild($headingText)\n    $button.appendChild(this.getButtonPunctuationEl())\n\n    // If summary content exists add to DOM in correct order\n    if ($summary) {\n      // Create a new `span` element and copy the summary line content from the\n      // original `div` to the new `span`. This is because the summary line text\n      // is now inside a button element, which can only contain phrasing\n      // content.\n      const $summarySpan = document.createElement('span')\n      // Create an inner summary container to limit the width of the summary\n      // focus state\n      const $summarySpanFocus = document.createElement('span')\n      $summarySpanFocus.classList.add(this.sectionSummaryFocusClass)\n      $summarySpan.appendChild($summarySpanFocus)\n\n      // Get original attributes, and pass them to the replacement\n      for (const attr of Array.from($summary.attributes)) {\n        $summarySpan.setAttribute(attr.name, attr.value)\n      }\n\n      // Copy original contents of summary to the new summary span\n      Array.from($summary.childNodes).forEach(($child) =>\n        $summarySpanFocus.appendChild($child)\n      )\n\n      // Replace the original summary `div` with the new summary `span`\n      $summary.remove()\n\n      $button.appendChild($summarySpan)\n      $button.appendChild(this.getButtonPunctuationEl())\n    }\n\n    $button.appendChild($showHideToggle)\n\n    $heading.removeChild($span)\n    $heading.appendChild($button)\n  }\n\n  /**\n   * When a section is opened by the user agent via the 'beforematch' event\n   *\n   * @private\n   * @param {Event} event - Generic event\n   */\n  onBeforeMatch(event) {\n    const $fragment = event.target\n\n    // Handle elements with `.closest()` support only\n    if (!($fragment instanceof Element)) {\n      return\n    }\n\n    // Handle when fragment is inside section\n    const $section = $fragment.closest(`.${this.sectionClass}`)\n    if ($section) {\n      this.setExpanded(true, $section)\n    }\n  }\n\n  /**\n   * When section toggled, set and store state\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  onSectionToggle($section) {\n    const nowExpanded = !this.isExpanded($section)\n    this.setExpanded(nowExpanded, $section)\n\n    // Store the state in sessionStorage when a change is triggered\n    this.storeState($section, nowExpanded)\n  }\n\n  /**\n   * When Open/Close All toggled, set and store state\n   *\n   * @private\n   */\n  onShowOrHideAllToggle() {\n    const nowExpanded = !this.areAllSectionsOpen()\n\n    this.$sections.forEach(($section) => {\n      this.setExpanded(nowExpanded, $section)\n      this.storeState($section, nowExpanded)\n    })\n\n    this.updateShowAllButton(nowExpanded)\n  }\n\n  /**\n   * Set section attributes when opened/closed\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   * @param {Element} $section - Section element\n   */\n  setExpanded(expanded, $section) {\n    const $showHideIcon = $section.querySelector(`.${this.upChevronIconClass}`)\n    const $showHideText = $section.querySelector(\n      `.${this.sectionShowHideTextClass}`\n    )\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n    const $content = $section.querySelector(`.${this.sectionContentClass}`)\n\n    if (!$content) {\n      throw new ElementError({\n        component: Accordion,\n        identifier: `Section content (\\`<div class=\"${this.sectionContentClass}\">\\`)`\n      })\n    }\n\n    if (!$showHideIcon || !$showHideText || !$button) {\n      // Return early for elements we create\n      return\n    }\n\n    const newButtonText = expanded\n      ? this.i18n.t('hideSection')\n      : this.i18n.t('showSection')\n\n    $showHideText.textContent = newButtonText\n    $button.setAttribute('aria-expanded', `${expanded}`)\n\n    // Update aria-label combining\n    const ariaLabelParts = []\n\n    const $headingText = $section.querySelector(\n      `.${this.sectionHeadingTextClass}`\n    )\n    if ($headingText) {\n      ariaLabelParts.push($headingText.textContent.trim())\n    }\n\n    const $summary = $section.querySelector(`.${this.sectionSummaryClass}`)\n    if ($summary) {\n      ariaLabelParts.push($summary.textContent.trim())\n    }\n\n    const ariaLabelMessage = expanded\n      ? this.i18n.t('hideSectionAriaLabel')\n      : this.i18n.t('showSectionAriaLabel')\n    ariaLabelParts.push(ariaLabelMessage)\n\n    /*\n     * Join with a comma to add pause for assistive technology.\n     * Example: [heading]Section A ,[pause] Show this section.\n     * https://accessibility.blog.gov.uk/2017/12/18/what-working-on-gov-uk-navigation-taught-us-about-accessibility/\n     */\n    $button.setAttribute('aria-label', ariaLabelParts.join(' , '))\n\n    // Swap icon, change class\n    if (expanded) {\n      $content.removeAttribute('hidden')\n      $section.classList.add(this.sectionExpandedClass)\n      $showHideIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      $content.setAttribute('hidden', 'until-found')\n      $section.classList.remove(this.sectionExpandedClass)\n      $showHideIcon.classList.add(this.downChevronIconClass)\n    }\n\n    // See if \"Show all sections\" button text should be updated\n    this.updateShowAllButton(this.areAllSectionsOpen())\n  }\n\n  /**\n   * Get state of section\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @returns {boolean} True if expanded\n   */\n  isExpanded($section) {\n    return $section.classList.contains(this.sectionExpandedClass)\n  }\n\n  /**\n   * Check if all sections are open\n   *\n   * @private\n   * @returns {boolean} True if all sections are open\n   */\n  areAllSectionsOpen() {\n    return Array.from(this.$sections).every(($section) =>\n      this.isExpanded($section)\n    )\n  }\n\n  /**\n   * Update \"Show all sections\" button\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   */\n  updateShowAllButton(expanded) {\n    if (!this.$showAllButton || !this.$showAllText || !this.$showAllIcon) {\n      return\n    }\n\n    this.$showAllButton.setAttribute('aria-expanded', expanded.toString())\n    this.$showAllText.textContent = expanded\n      ? this.i18n.t('hideAllSections')\n      : this.i18n.t('showAllSections')\n    this.$showAllIcon.classList.toggle(this.downChevronIconClass, !expanded)\n  }\n\n  /**\n   * Get the identifier for a section\n   *\n   * We need a unique way of identifying each content in the Accordion.\n   * Since an `#id` should be unique and an `id` is required for `aria-`\n   * attributes `id` can be safely used.\n   *\n   * @param {Element} $section - Section element\n   * @returns {string | undefined | null} Identifier for section\n   */\n  getIdentifier($section) {\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n    return $button?.getAttribute('aria-controls')\n  }\n\n  /**\n   * Set the state of the accordions in sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @param {boolean} isExpanded - Whether the section is expanded\n   */\n  storeState($section, isExpanded) {\n    if (!this.config.rememberExpanded) {\n      return\n    }\n\n    const id = this.getIdentifier($section)\n\n    if (id) {\n      try {\n        window.sessionStorage.setItem(id, isExpanded.toString())\n      } catch {}\n    }\n  }\n\n  /**\n   * Read the state of the accordions from sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  setInitialState($section) {\n    if (!this.config.rememberExpanded) {\n      return\n    }\n\n    const id = this.getIdentifier($section)\n\n    if (id) {\n      try {\n        const state = window.sessionStorage.getItem(id)\n\n        if (state !== null) {\n          this.setExpanded(state === 'true', $section)\n        }\n      } catch {}\n    }\n  }\n\n  /**\n   * Create an element to improve semantics of the section button with\n   * punctuation\n   *\n   * Adding punctuation to the button can also improve its general semantics by\n   * dividing its contents into thematic chunks. See\n   * https://github.com/alphagov/govuk-frontend/issues/2327#issuecomment-922957442\n   *\n   * @private\n   * @returns {Element} DOM element\n   */\n  getButtonPunctuationEl() {\n    const $punctuationEl = document.createElement('span')\n    $punctuationEl.classList.add(\n      'govuk-visually-hidden',\n      this.sectionHeadingDividerClass\n    )\n    $punctuationEl.textContent = ', '\n    return $punctuationEl\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-accordion'\n\n  /**\n   * Accordion default config\n   *\n   * @see {@link AccordionConfig}\n   * @constant\n   * @type {AccordionConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      hideAllSections: 'Hide all sections',\n      hideSection: 'Hide',\n      hideSectionAriaLabel: 'Hide this section',\n      showAllSections: 'Show all sections',\n      showSection: 'Show',\n      showSectionAriaLabel: 'Show this section'\n    },\n    rememberExpanded: true\n  })\n\n  /**\n   * Accordion config schema\n   *\n   * @constant\n   * @satisfies {Schema<AccordionConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' },\n      rememberExpanded: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Accordion config\n *\n * @see {@link Accordion.defaults}\n * @typedef {object} AccordionConfig\n * @property {AccordionTranslations} [i18n=Accordion.defaults.i18n] - Accordion translations\n * @property {boolean} [rememberExpanded] - Whether the expanded and collapsed\n *   state of each section is remembered and restored when navigating.\n */\n\n/**\n * Accordion translations\n *\n * @see {@link Accordion.defaults.i18n}\n * @typedef {object} AccordionTranslations\n *\n * Messages used by the component for the labels of its buttons. This includes\n * the visible text shown on screen, and text to help assistive technology users\n * for the buttons toggling each section.\n * @property {string} [hideAllSections] - The text content for the 'Hide all\n *   sections' button, used when at least one section is expanded.\n * @property {string} [hideSection] - The text content for the 'Hide'\n *   button, used when a section is expanded.\n * @property {string} [hideSectionAriaLabel] - The text content appended to the\n *   'Hide' button's accessible name when a section is expanded.\n * @property {string} [showAllSections] - The text content for the 'Show all\n *   sections' button, used when all sections are collapsed.\n * @property {string} [showSection] - The text content for the 'Show'\n *   button, used when a section is collapsed.\n * @property {string} [showSectionAriaLabel] - The text content appended to the\n *   'Show' button's accessible name when a section is expanded.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n", "import { ConfigurableComponent } from '../../common/configuration.mjs'\n\nconst DEBOUNCE_TIMEOUT_IN_SECONDS = 1\n\n/**\n * JavaScript enhancements for the Button component\n *\n * @preserve\n * @augments ConfigurableComponent<ButtonConfig>\n */\nexport class Button extends ConfigurableComponent {\n  /**\n   * @private\n   * @type {number | null}\n   */\n  debounceFormSubmitTimer = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for button\n   * @param {ButtonConfig} [config] - Button config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    this.$root.addEventListener('keydown', (event) => this.handleKeyDown(event))\n    this.$root.addEventListener('click', (event) => this.debounce(event))\n  }\n\n  /**\n   * Trigger a click event when the space key is pressed\n   *\n   * Some screen readers tell users they can use the space bar to activate\n   * things with the 'button' role, so we need to match the functionality of\n   * native HTML buttons.\n   *\n   * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  handleKeyDown(event) {\n    const $target = event.target\n\n    // Handle space bar only\n    if (event.key !== ' ') {\n      return\n    }\n\n    // Handle elements with [role=\"button\"] only\n    if (\n      $target instanceof HTMLElement &&\n      $target.getAttribute('role') === 'button'\n    ) {\n      event.preventDefault() // prevent the page from scrolling\n      $target.click()\n    }\n  }\n\n  /**\n   * Debounce double-clicks\n   *\n   * If the click quickly succeeds a previous click then nothing will happen.\n   * This stops people accidentally causing multiple form submissions by double\n   * clicking buttons.\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {undefined | false} Returns undefined, or false when debounced\n   */\n  debounce(event) {\n    // Check the button that was clicked has preventDoubleClick enabled\n    if (!this.config.preventDoubleClick) {\n      return\n    }\n\n    // If the timer is still running, prevent the click from submitting the form\n    if (this.debounceFormSubmitTimer) {\n      event.preventDefault()\n      return false\n    }\n\n    this.debounceFormSubmitTimer = window.setTimeout(() => {\n      this.debounceFormSubmitTimer = null\n    }, DEBOUNCE_TIMEOUT_IN_SECONDS * 1000)\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-button'\n\n  /**\n   * Button default config\n   *\n   * @see {@link ButtonConfig}\n   * @constant\n   * @type {ButtonConfig}\n   */\n  static defaults = Object.freeze({\n    preventDoubleClick: false\n  })\n\n  /**\n   * Button config schema\n   *\n   * @constant\n   * @satisfies {Schema<ButtonConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      preventDoubleClick: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Button config\n *\n * @typedef {object} ButtonConfig\n * @property {boolean} [preventDoubleClick=false] - Prevent accidental double\n *   clicks on submit buttons from submitting forms multiple times.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n", "/**\n * Returns the value of the given attribute closest to the given element (including itself)\n *\n * @internal\n * @param {Element} $element - The element to start walking the DOM tree up\n * @param {string} attributeName - The name of the attribute\n * @returns {string | null} Attribute value\n */\nexport function closestAttributeValue($element, attributeName) {\n  const $closestElementWithAttribute = $element.closest(`[${attributeName}]`)\n  return $closestElementWithAttribute\n    ? $closestElementWithAttribute.getAttribute(attributeName)\n    : null\n}\n", "import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport {\n  validateConfig,\n  ConfigurableComponent,\n  configOverride\n} from '../../common/configuration.mjs'\nimport { formatErrorMessage } from '../../common/index.mjs'\nimport { ConfigError, ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Character count component\n *\n * Tracks the number of characters or words in the `.govuk-js-character-count`\n * `<textarea>` inside the element. Displays a message with the remaining number\n * of characters/words available, or the number of characters/words in excess.\n *\n * You can configure the message to only appear after a certain percentage\n * of the available characters/words has been entered.\n *\n * @preserve\n * @augments ConfigurableComponent<CharacterCountConfig>\n */\nexport class CharacterCount extends ConfigurableComponent {\n  /** @private */\n  $textarea\n\n  /** @private */\n  $visibleCountMessage\n\n  /** @private */\n  $screenReaderCountMessage\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  lastInputTimestamp = null\n\n  /** @private */\n  lastInputValue = ''\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  valueChecker = null\n\n  /** @private */\n  i18n\n\n  /** @private */\n  maxLength;\n\n  /**\n   * Character count config override\n   *\n   * To ensure data-attributes take complete precedence, even if they change\n   * the type of count, we need to reset the `maxlength` and `maxwords` from\n   * the JavaScript config.\n   *\n   * @internal\n   * @param {CharacterCountConfig} datasetConfig - configuration specified by dataset\n   * @returns {CharacterCountConfig} - configuration to override by dataset\n   */\n  [configOverride](datasetConfig) {\n    let configOverrides = {}\n    if ('maxwords' in datasetConfig || 'maxlength' in datasetConfig) {\n      configOverrides = {\n        maxlength: undefined,\n        maxwords: undefined\n      }\n    }\n\n    return configOverrides\n  }\n\n  /**\n   * @param {Element | null} $root - HTML element to use for character count\n   * @param {CharacterCountConfig} [config] - Character count config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $textarea = this.$root.querySelector('.govuk-js-character-count')\n    if (\n      !(\n        $textarea instanceof HTMLTextAreaElement ||\n        $textarea instanceof HTMLInputElement\n      )\n    ) {\n      throw new ElementError({\n        component: CharacterCount,\n        element: $textarea,\n        expectedType: 'HTMLTextareaElement or HTMLInputElement',\n        identifier: 'Form field (`.govuk-js-character-count`)'\n      })\n    }\n\n    // Check for valid config\n    const errors = validateConfig(CharacterCount.schema, this.config)\n    if (errors[0]) {\n      throw new ConfigError(formatErrorMessage(CharacterCount, errors[0]))\n    }\n\n    this.i18n = new I18n(this.config.i18n, {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue(this.$root, 'lang')\n    })\n\n    // Determine the limit attribute (characters or words)\n    this.maxLength = this.config.maxwords ?? this.config.maxlength ?? Infinity\n\n    this.$textarea = $textarea\n\n    const textareaDescriptionId = `${this.$textarea.id}-info`\n    const $textareaDescription = document.getElementById(textareaDescriptionId)\n    if (!$textareaDescription) {\n      throw new ElementError({\n        component: CharacterCount,\n        element: $textareaDescription,\n        identifier: `Count message (\\`id=\"${textareaDescriptionId}\"\\`)`\n      })\n    }\n\n    // Pre-existing validation error rendered from server\n    this.$errorMessage = this.$root.querySelector('.govuk-error-message')\n\n    // Inject a description for the textarea if none is present already\n    // for when the component was rendered with no maxlength, maxwords\n    // nor custom textareaDescriptionText\n    // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n    if ($textareaDescription.textContent.match(/^\\s*$/)) {\n      $textareaDescription.textContent = this.i18n.t('textareaDescription', {\n        count: this.maxLength\n      })\n    }\n\n    // Move the textarea description to be immediately after the textarea\n    // Kept for backwards compatibility\n    this.$textarea.insertAdjacentElement('afterend', $textareaDescription)\n\n    // Create the *screen reader* specific live-updating counter\n    // This doesn't need any styling classes, as it is never visible\n    const $screenReaderCountMessage = document.createElement('div')\n    $screenReaderCountMessage.className =\n      'govuk-character-count__sr-status govuk-visually-hidden'\n    $screenReaderCountMessage.setAttribute('aria-live', 'polite')\n    this.$screenReaderCountMessage = $screenReaderCountMessage\n    $textareaDescription.insertAdjacentElement(\n      'afterend',\n      $screenReaderCountMessage\n    )\n\n    // Create our live-updating counter element, copying the classes from the\n    // textarea description for backwards compatibility as these may have been\n    // configured\n    const $visibleCountMessage = document.createElement('div')\n    $visibleCountMessage.className = $textareaDescription.className\n    $visibleCountMessage.classList.add('govuk-character-count__status')\n    $visibleCountMessage.setAttribute('aria-hidden', 'true')\n    this.$visibleCountMessage = $visibleCountMessage\n    $textareaDescription.insertAdjacentElement('afterend', $visibleCountMessage)\n\n    // Hide the textarea description\n    $textareaDescription.classList.add('govuk-visually-hidden')\n\n    // Remove hard limit if set\n    this.$textarea.removeAttribute('maxlength')\n\n    this.bindChangeEvents()\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.updateCountMessage())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so update now too.\n    this.updateCountMessage()\n  }\n\n  /**\n   * Bind change events\n   *\n   * Set up event listeners on the $textarea so that the count messages update\n   * when the user types.\n   *\n   * @private\n   */\n  bindChangeEvents() {\n    this.$textarea.addEventListener('keyup', () => this.handleKeyUp())\n\n    // Bind focus/blur events to start/stop polling\n    this.$textarea.addEventListener('focus', () => this.handleFocus())\n    this.$textarea.addEventListener('blur', () => this.handleBlur())\n  }\n\n  /**\n   * Handle key up event\n   *\n   * Update the visible character counter and keep track of when the last update\n   * happened for each keypress\n   *\n   * @private\n   */\n  handleKeyUp() {\n    this.updateVisibleCountMessage()\n    this.lastInputTimestamp = Date.now()\n  }\n\n  /**\n   * Handle focus event\n   *\n   * Speech recognition software such as Dragon NaturallySpeaking will modify\n   * the fields by directly changing its `value`. These changes don't trigger\n   * events in JavaScript, so we need to poll to handle when and if they occur.\n   *\n   * Once the keyup event hasn't been detected for at least 1000 ms (1s), check\n   * if the textarea value has changed and update the count message if it has.\n   *\n   * This is so that the update triggered by the manual comparison doesn't\n   * conflict with debounced KeyboardEvent updates.\n   *\n   * @private\n   */\n  handleFocus() {\n    this.valueChecker = window.setInterval(() => {\n      if (\n        !this.lastInputTimestamp ||\n        Date.now() - 500 >= this.lastInputTimestamp\n      ) {\n        this.updateIfValueChanged()\n      }\n    }, 1000)\n  }\n\n  /**\n   * Handle blur event\n   *\n   * Stop checking the textarea value once the textarea no longer has focus\n   *\n   * @private\n   */\n  handleBlur() {\n    // Cancel value checking on blur\n    if (this.valueChecker) {\n      window.clearInterval(this.valueChecker)\n    }\n  }\n\n  /**\n   * Update count message if textarea value has changed\n   *\n   * @private\n   */\n  updateIfValueChanged() {\n    if (this.$textarea.value !== this.lastInputValue) {\n      this.lastInputValue = this.$textarea.value\n      this.updateCountMessage()\n    }\n  }\n\n  /**\n   * Update count message\n   *\n   * Helper function to update both the visible and screen reader-specific\n   * counters simultaneously (e.g. on init)\n   *\n   * @private\n   */\n  updateCountMessage() {\n    this.updateVisibleCountMessage()\n    this.updateScreenReaderCountMessage()\n  }\n\n  /**\n   * Update visible count message\n   *\n   * @private\n   */\n  updateVisibleCountMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n    const isError = remainingNumber < 0\n\n    // If input is over the threshold, remove the disabled class which renders\n    // the counter invisible.\n    this.$visibleCountMessage.classList.toggle(\n      'govuk-character-count__message--disabled',\n      !this.isOverThreshold()\n    )\n\n    // Update styles\n    if (!this.$errorMessage) {\n      // Only toggle the textarea error class if there isn't an error message\n      // already, as it may be unrelated to the limit (eg: allowed characters)\n      // and would set the border colour back to black.\n      this.$textarea.classList.toggle('govuk-textarea--error', isError)\n    }\n    this.$visibleCountMessage.classList.toggle('govuk-error-message', isError)\n    this.$visibleCountMessage.classList.toggle('govuk-hint', !isError)\n\n    // Update message\n    this.$visibleCountMessage.textContent = this.getCountMessage()\n  }\n\n  /**\n   * Update screen reader count message\n   *\n   * @private\n   */\n  updateScreenReaderCountMessage() {\n    // If over the threshold, remove the aria-hidden attribute, allowing screen\n    // readers to announce the content of the element.\n    if (this.isOverThreshold()) {\n      this.$screenReaderCountMessage.removeAttribute('aria-hidden')\n    } else {\n      this.$screenReaderCountMessage.setAttribute('aria-hidden', 'true')\n    }\n\n    // Update message\n    this.$screenReaderCountMessage.textContent = this.getCountMessage()\n  }\n\n  /**\n   * Count the number of characters (or words, if `config.maxwords` is set)\n   * in the given text\n   *\n   * @private\n   * @param {string} text - The text to count the characters of\n   * @returns {number} the number of characters (or words) in the text\n   */\n  count(text) {\n    if (this.config.maxwords) {\n      const tokens = text.match(/\\S+/g) ?? [] // Matches consecutive non-whitespace chars\n      return tokens.length\n    }\n\n    return text.length\n  }\n\n  /**\n   * Get count message\n   *\n   * @private\n   * @returns {string} Status message\n   */\n  getCountMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n    const countType = this.config.maxwords ? 'words' : 'characters'\n    return this.formatCountMessage(remainingNumber, countType)\n  }\n\n  /**\n   * Formats the message shown to users according to what's counted\n   * and how many remain\n   *\n   * @private\n   * @param {number} remainingNumber - The number of words/characaters remaining\n   * @param {string} countType - \"words\" or \"characters\"\n   * @returns {string} Status message\n   */\n  formatCountMessage(remainingNumber, countType) {\n    if (remainingNumber === 0) {\n      return this.i18n.t(`${countType}AtLimit`)\n    }\n\n    const translationKeySuffix =\n      remainingNumber < 0 ? 'OverLimit' : 'UnderLimit'\n\n    return this.i18n.t(`${countType}${translationKeySuffix}`, {\n      count: Math.abs(remainingNumber)\n    })\n  }\n\n  /**\n   * Check if count is over threshold\n   *\n   * Checks whether the value is over the configured threshold for the input.\n   * If there is no configured threshold, it is set to 0 and this function will\n   * always return true.\n   *\n   * @private\n   * @returns {boolean} true if the current count is over the config.threshold\n   *   (or no threshold is set)\n   */\n  isOverThreshold() {\n    // No threshold means we're always above threshold so save some computation\n    if (!this.config.threshold) {\n      return true\n    }\n\n    // Determine the remaining number of characters/words\n    const currentLength = this.count(this.$textarea.value)\n    const maxLength = this.maxLength\n\n    const thresholdValue = (maxLength * this.config.threshold) / 100\n\n    return thresholdValue <= currentLength\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-character-count'\n\n  /**\n   * Character count default config\n   *\n   * @see {@link CharacterCountConfig}\n   * @constant\n   * @type {CharacterCountConfig}\n   */\n  static defaults = Object.freeze({\n    threshold: 0,\n    i18n: {\n      // Characters\n      charactersUnderLimit: {\n        one: 'You have %{count} character remaining',\n        other: 'You have %{count} characters remaining'\n      },\n      charactersAtLimit: 'You have 0 characters remaining',\n      charactersOverLimit: {\n        one: 'You have %{count} character too many',\n        other: 'You have %{count} characters too many'\n      },\n      // Words\n      wordsUnderLimit: {\n        one: 'You have %{count} word remaining',\n        other: 'You have %{count} words remaining'\n      },\n      wordsAtLimit: 'You have 0 words remaining',\n      wordsOverLimit: {\n        one: 'You have %{count} word too many',\n        other: 'You have %{count} words too many'\n      },\n      textareaDescription: {\n        other: ''\n      }\n    }\n  })\n\n  /**\n   * Character count config schema\n   *\n   * @constant\n   * @satisfies {Schema<CharacterCountConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' },\n      maxwords: { type: 'number' },\n      maxlength: { type: 'number' },\n      threshold: { type: 'number' }\n    },\n    anyOf: [\n      {\n        required: ['maxwords'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      },\n      {\n        required: ['maxlength'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      }\n    ]\n  })\n}\n\n/**\n * Character count config\n *\n * @see {@link CharacterCount.defaults}\n * @typedef {object} CharacterCountConfig\n * @property {number} [maxlength] - The maximum number of characters.\n *   If maxwords is provided, the maxlength option will be ignored.\n * @property {number} [maxwords] - The maximum number of words. If maxwords is\n *   provided, the maxlength option will be ignored.\n * @property {number} [threshold=0] - The percentage value of the limit at\n *   which point the count message is displayed. If this attribute is set, the\n *   count message will be hidden by default.\n * @property {CharacterCountTranslations} [i18n=CharacterCount.defaults.i18n] - Character count translations\n */\n\n/**\n * Character count translations\n *\n * @see {@link CharacterCount.defaults.i18n}\n * @typedef {object} CharacterCountTranslations\n *\n * Messages shown to users as they type. It provides feedback on how many words\n * or characters they have remaining or if they are over the limit. This also\n * includes a message used as an accessible description for the textarea.\n * @property {TranslationPluralForms} [charactersUnderLimit] - Message displayed\n *   when the number of characters is under the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [charactersAtLimit] - Message displayed when the number of\n *   characters reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [charactersOverLimit] - Message displayed\n *   when the number of characters is over the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [wordsUnderLimit] - Message displayed when\n *   the number of words is under the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [wordsAtLimit] - Message displayed when the number of\n *   words reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [wordsOverLimit] - Message displayed when\n *   the number of words is over the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [textareaDescription] - Message made\n *   available to assistive technologies, if none is already present in the\n *   HTML, to describe that the component accepts only a limited amount of\n *   content. It is visible on the page when JavaScript is unavailable. The\n *   component will replace the `%{count}` placeholder with the value of the\n *   `maxlength` or `maxwords` parameter.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n * @import { TranslationPluralForms } from '../../i18n.mjs'\n */\n", "import { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Checkboxes component\n *\n * @preserve\n */\nexport class Checkboxes extends Component {\n  /** @private */\n  $inputs\n\n  /**\n   * Checkboxes can be associated with a 'conditionally revealed' content block\n   * – for example, a checkbox for 'Phone' could reveal an additional form field\n   * for the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which\n   * is promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page\n   * (for example if the user has navigated back), and set up event handlers to\n   * keep the reveal in sync with the checkbox state.\n   *\n   * @param {Element | null} $root - HTML element to use for checkboxes\n   */\n  constructor($root) {\n    super($root)\n\n    const $inputs = this.$root.querySelectorAll('input[type=\"checkbox\"]')\n    if (!$inputs.length) {\n      throw new ElementError({\n        component: Checkboxes,\n        identifier: 'Form inputs (`<input type=\"checkbox\">`)'\n      })\n    }\n\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError({\n          component: Checkboxes,\n          identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n        })\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$root.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all checkboxes in this component.\n   *\n   * @private\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  syncConditionalRevealWithInputState($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target?.classList.contains('govuk-checkboxes__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle(\n        'govuk-checkboxes__conditional--hidden',\n        !inputIsChecked\n      )\n    }\n  }\n\n  /**\n   * Uncheck other checkboxes\n   *\n   * Find any other checkbox inputs with the same name value, and uncheck them.\n   * This is useful for when a “None of these\" checkbox is checked.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckAllInputsExcept($input) {\n    const allInputsWithSameName = document.querySelectorAll(\n      `input[type=\"checkbox\"][name=\"${$input.name}\"]`\n    )\n\n    allInputsWithSameName.forEach(($inputWithSameName) => {\n      const hasSameFormOwner = $input.form === $inputWithSameName.form\n      if (hasSameFormOwner && $inputWithSameName !== $input) {\n        $inputWithSameName.checked = false\n        this.syncConditionalRevealWithInputState($inputWithSameName)\n      }\n    })\n  }\n\n  /**\n   * Uncheck exclusive checkboxes\n   *\n   * Find any checkbox inputs with the same name value and the 'exclusive'\n   * behaviour, and uncheck them. This helps prevent someone checking both a\n   * regular checkbox and a \"None of these\" checkbox in the same fieldset.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckExclusiveInputs($input) {\n    const allInputsWithSameNameAndExclusiveBehaviour =\n      document.querySelectorAll(\n        `input[data-behaviour=\"exclusive\"][type=\"checkbox\"][name=\"${$input.name}\"]`\n      )\n\n    allInputsWithSameNameAndExclusiveBehaviour.forEach(($exclusiveInput) => {\n      const hasSameFormOwner = $input.form === $exclusiveInput.form\n      if (hasSameFormOwner) {\n        $exclusiveInput.checked = false\n        this.syncConditionalRevealWithInputState($exclusiveInput)\n      }\n    })\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the component root – if the click occurred on a checkbox,\n   * sync the state of any associated conditional reveal with the checkbox\n   * state.\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't checkbox inputs\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'checkbox'\n    ) {\n      return\n    }\n\n    // If the checkbox conditionally-reveals some content, sync the state\n    const hasAriaControls = $clickedInput.getAttribute('aria-controls')\n    if (hasAriaControls) {\n      this.syncConditionalRevealWithInputState($clickedInput)\n    }\n\n    // No further behaviour needed for unchecking\n    if (!$clickedInput.checked) {\n      return\n    }\n\n    // Handle 'exclusive' checkbox behaviour (ie \"None of these\")\n    const hasBehaviourExclusive =\n      $clickedInput.getAttribute('data-behaviour') === 'exclusive'\n    if (hasBehaviourExclusive) {\n      this.unCheckAllInputsExcept($clickedInput)\n    } else {\n      this.unCheckExclusiveInputs($clickedInput)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-checkboxes'\n}\n", "import { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { setFocus } from '../../common/index.mjs'\n\n/**\n * Error summary component\n *\n * Takes focus on initialisation for accessible announcement, unless disabled in\n * configuration.\n *\n * @preserve\n * @augments ConfigurableComponent<ErrorSummaryConfig>\n */\nexport class ErrorSummary extends ConfigurableComponent {\n  /**\n   * @param {Element | null} $root - HTML element to use for error summary\n   * @param {ErrorSummaryConfig} [config] - Error summary config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    /**\n     * Focus the error summary\n     */\n    if (!this.config.disableAutoFocus) {\n      setFocus(this.$root)\n    }\n\n    this.$root.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Click event handler\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $target = event.target\n    if ($target && this.focusTarget($target)) {\n      event.preventDefault()\n    }\n  }\n\n  /**\n   * Focus the target element\n   *\n   * By default, the browser will scroll the target into view. Because our\n   * labels or legends appear above the input, this means the user will be\n   * presented with an input without any context, as the label or legend will be\n   * off the top of the screen.\n   *\n   * Manually handling the click event, scrolling the question into view and\n   * then focussing the element solves this.\n   *\n   * This also results in the label and/or legend being announced correctly in\n   * NVDA (as tested in 2018.3.2) - without this only the field type is\n   * announced (e.g. \"Edit, has autocomplete\").\n   *\n   * @private\n   * @param {EventTarget} $target - Event target\n   * @returns {boolean} True if the target was able to be focussed\n   */\n  focusTarget($target) {\n    // If the element that was clicked was not a link, return early\n    if (!($target instanceof HTMLAnchorElement)) {\n      return false\n    }\n\n    const inputId = $target.hash.replace('#', '')\n    if (!inputId) {\n      return false\n    }\n\n    const $input = document.getElementById(inputId)\n    if (!$input) {\n      return false\n    }\n\n    const $legendOrLabel = this.getAssociatedLegendOrLabel($input)\n    if (!$legendOrLabel) {\n      return false\n    }\n\n    // Scroll the legend or label into view *before* calling focus on the input\n    // to avoid extra scrolling in browsers that don't support `preventScroll`\n    // (which at time of writing is most of them...)\n    $legendOrLabel.scrollIntoView()\n    $input.focus({ preventScroll: true })\n\n    return true\n  }\n\n  /**\n   * Get associated legend or label\n   *\n   * Returns the first element that exists from this list:\n   *\n   * - The `<legend>` associated with the closest `<fieldset>` ancestor, as long\n   *   as the top of it is no more than half a viewport height away from the\n   *   bottom of the input\n   * - The first `<label>` that is associated with the input using for=\"inputId\"\n   * - The closest parent `<label>`\n   *\n   * @private\n   * @param {Element} $input - The input\n   * @returns {Element | null} Associated legend or label, or null if no\n   *   associated legend or label can be found\n   */\n  getAssociatedLegendOrLabel($input) {\n    const $fieldset = $input.closest('fieldset')\n\n    if ($fieldset) {\n      const $legends = $fieldset.getElementsByTagName('legend')\n\n      if ($legends.length) {\n        const $candidateLegend = $legends[0]\n\n        // If the input type is radio or checkbox, always use the legend if\n        // there is one.\n        if (\n          $input instanceof HTMLInputElement &&\n          ($input.type === 'checkbox' || $input.type === 'radio')\n        ) {\n          return $candidateLegend\n        }\n\n        // For other input types, only scroll to the fieldset’s legend (instead\n        // of the label associated with the input) if the input would end up in\n        // the top half of the screen.\n        //\n        // This should avoid situations where the input either ends up off the\n        // screen, or obscured by a software keyboard.\n        const legendTop = $candidateLegend.getBoundingClientRect().top\n        const inputRect = $input.getBoundingClientRect()\n\n        // If the browser doesn't support Element.getBoundingClientRect().height\n        // or window.innerHeight (like IE8), bail and just link to the label.\n        if (inputRect.height && window.innerHeight) {\n          const inputBottom = inputRect.top + inputRect.height\n\n          if (inputBottom - legendTop < window.innerHeight / 2) {\n            return $candidateLegend\n          }\n        }\n      }\n    }\n\n    return (\n      document.querySelector(`label[for='${$input.getAttribute('id')}']`) ??\n      $input.closest('label')\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-error-summary'\n\n  /**\n   * Error summary default config\n   *\n   * @see {@link ErrorSummaryConfig}\n   * @constant\n   * @type {ErrorSummaryConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n\n  /**\n   * Error summary config schema\n   *\n   * @constant\n   * @satisfies {Schema<ErrorSummaryConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      disableAutoFocus: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Error summary config\n *\n * @typedef {object} ErrorSummaryConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the error\n *   summary will not be focussed when the page loads.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n", "import { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Exit this page component\n *\n * @preserve\n * @augments ConfigurableComponent<ExitThisPageConfig>\n */\nexport class ExitThisPage extends ConfigurableComponent {\n  /** @private */\n  i18n\n\n  /** @private */\n  $button\n\n  /**\n   * @private\n   * @type {HTMLAnchorElement | null}\n   */\n  $skiplinkButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $updateSpan = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $indicatorContainer = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $overlay = null\n\n  /** @private */\n  keypressCounter = 0\n\n  /** @private */\n  lastKeyWasModified = false\n\n  /** @private */\n  timeoutTime = 5000 // milliseconds\n\n  // Store the timeout events so that we can clear them to avoid user keypresses overlapping\n  // setTimeout returns an id that we can use to clear it with clearTimeout,\n  // hence the 'Id' suffix\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  keypressTimeoutId = null\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  timeoutMessageId = null\n\n  /**\n   * @param {Element | null} $root - HTML element that wraps the Exit This Page button\n   * @param {ExitThisPageConfig} [config] - Exit This Page config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $button = this.$root.querySelector('.govuk-exit-this-page__button')\n    if (!($button instanceof HTMLAnchorElement)) {\n      throw new ElementError({\n        component: ExitThisPage,\n        element: $button,\n        expectedType: 'HTMLAnchorElement',\n        identifier: 'Button (`.govuk-exit-this-page__button`)'\n      })\n    }\n\n    this.i18n = new I18n(this.config.i18n)\n    this.$button = $button\n\n    const $skiplinkButton = document.querySelector(\n      '.govuk-js-exit-this-page-skiplink'\n    )\n    if ($skiplinkButton instanceof HTMLAnchorElement) {\n      this.$skiplinkButton = $skiplinkButton\n    }\n\n    this.buildIndicator()\n    this.initUpdateSpan()\n    this.initButtonClickHandler()\n\n    // Check to see if this has already been done by a previous initialisation of ExitThisPage\n    if (!('govukFrontendExitThisPageKeypress' in document.body.dataset)) {\n      document.addEventListener('keyup', this.handleKeypress.bind(this), true)\n      document.body.dataset.govukFrontendExitThisPageKeypress = 'true'\n    }\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // blank overlay remains present, rendering the page unusable. Here, we check\n    // to see if it's present on page (re)load, and remove it if so.\n    window.addEventListener('pageshow', this.resetPage.bind(this))\n  }\n\n  /**\n   * Create the <span> we use for screen reader announcements.\n   *\n   * @private\n   */\n  initUpdateSpan() {\n    this.$updateSpan = document.createElement('span')\n    this.$updateSpan.setAttribute('role', 'status')\n    this.$updateSpan.className = 'govuk-visually-hidden'\n\n    this.$root.appendChild(this.$updateSpan)\n  }\n\n  /**\n   * Create button click handlers.\n   *\n   * @private\n   */\n  initButtonClickHandler() {\n    // Main EtP button\n    this.$button.addEventListener('click', this.handleClick.bind(this))\n\n    // EtP secondary link\n    if (this.$skiplinkButton) {\n      this.$skiplinkButton.addEventListener(\n        'click',\n        this.handleClick.bind(this)\n      )\n    }\n  }\n\n  /**\n   * Create the HTML for the 'three lights' indicator on the button.\n   *\n   * @private\n   */\n  buildIndicator() {\n    // Build container\n    // Putting `aria-hidden` on it as it won't contain any readable information\n    this.$indicatorContainer = document.createElement('div')\n    this.$indicatorContainer.className = 'govuk-exit-this-page__indicator'\n    this.$indicatorContainer.setAttribute('aria-hidden', 'true')\n\n    // Create three 'lights' and place them within the container\n    for (let i = 0; i < 3; i++) {\n      const $indicator = document.createElement('div')\n      $indicator.className = 'govuk-exit-this-page__indicator-light'\n      this.$indicatorContainer.appendChild($indicator)\n    }\n\n    // Append it all to the module\n    this.$button.appendChild(this.$indicatorContainer)\n  }\n\n  /**\n   * Update whether the lights are visible and which ones are lit up depending on\n   * the value of `keypressCounter`.\n   *\n   * @private\n   */\n  updateIndicator() {\n    if (!this.$indicatorContainer) {\n      return\n    }\n\n    // Show or hide the indicator container depending on keypressCounter value\n    this.$indicatorContainer.classList.toggle(\n      'govuk-exit-this-page__indicator--visible',\n      this.keypressCounter > 0\n    )\n\n    // Turn on only the indicators we want on\n    const $indicators = this.$indicatorContainer.querySelectorAll(\n      '.govuk-exit-this-page__indicator-light'\n    )\n    $indicators.forEach(($indicator, index) => {\n      $indicator.classList.toggle(\n        'govuk-exit-this-page__indicator-light--on',\n        index < this.keypressCounter\n      )\n    })\n  }\n\n  /**\n   * Initiates the redirection away from the current page.\n   * Includes the loading overlay functionality, which covers the current page with a\n   * white overlay so that the contents are not visible during the loading\n   * process. This is particularly important on slow network connections.\n   *\n   * @private\n   */\n  exitPage() {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    this.$updateSpan.textContent = ''\n\n    // Blank the page\n    // As well as creating an overlay with text, we also set the body to hidden\n    // to prevent screen reader and sequential navigation users potentially\n    // navigating through the page behind the overlay during loading\n    document.body.classList.add('govuk-exit-this-page-hide-content')\n    this.$overlay = document.createElement('div')\n    this.$overlay.className = 'govuk-exit-this-page-overlay'\n    this.$overlay.setAttribute('role', 'alert')\n\n    // we do these this way round, thus incurring a second paint, because changing\n    // the element text after adding it means that screen readers pick up the\n    // announcement more reliably.\n    document.body.appendChild(this.$overlay)\n    this.$overlay.textContent = this.i18n.t('activated')\n\n    window.location.href = this.$button.href\n  }\n\n  /**\n   * Pre-activation logic for when the button is clicked/activated via mouse or\n   * pointer.\n   *\n   * We do this to differentiate it from the keyboard activation event because we\n   * need to run `e.preventDefault` as the button or skiplink are both links and we\n   * want to apply some additional logic in `exitPage` before navigating.\n   *\n   * @private\n   * @param {MouseEvent} event - mouse click event\n   */\n  handleClick(event) {\n    event.preventDefault()\n    this.exitPage()\n  }\n\n  /**\n   * Logic for the 'quick escape' keyboard sequence functionality (pressing the\n   * Shift key three times without interruption, within a time limit).\n   *\n   * @private\n   * @param {KeyboardEvent} event - keyup event\n   */\n  handleKeypress(event) {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    // Detect if the 'Shift' key has been pressed. We want to only do things if it\n    // was pressed by itself and not in a combination with another key—so we keep\n    // track of whether the preceding keyup had shiftKey: true on it, and if it\n    // did, we ignore the next Shift keyup event.\n    //\n    // This works because using Shift as a modifier key (e.g. pressing Shift + A)\n    // will fire TWO keyup events, one for A (with e.shiftKey: true) and the other\n    // for Shift (with e.shiftKey: false).\n    if (event.key === 'Shift' && !this.lastKeyWasModified) {\n      this.keypressCounter += 1\n\n      // Update the indicator before the below if statement can reset it back to 0\n      this.updateIndicator()\n\n      // Clear the timeout for the keypress timeout message clearing itself\n      if (this.timeoutMessageId) {\n        window.clearTimeout(this.timeoutMessageId)\n        this.timeoutMessageId = null\n      }\n\n      if (this.keypressCounter >= 3) {\n        this.keypressCounter = 0\n\n        if (this.keypressTimeoutId) {\n          window.clearTimeout(this.keypressTimeoutId)\n          this.keypressTimeoutId = null\n        }\n\n        this.exitPage()\n      } else {\n        if (this.keypressCounter === 1) {\n          this.$updateSpan.textContent = this.i18n.t('pressTwoMoreTimes')\n        } else {\n          this.$updateSpan.textContent = this.i18n.t('pressOneMoreTime')\n        }\n      }\n\n      this.setKeypressTimer()\n    } else if (this.keypressTimeoutId) {\n      // If the user pressed any key other than 'Shift', after having pressed\n      // 'Shift' and activating the timer, stop and reset the timer.\n      this.resetKeypressTimer()\n    }\n\n    // Keep track of whether the Shift modifier key was held during this keypress\n    this.lastKeyWasModified = event.shiftKey\n  }\n\n  /**\n   * Starts the 'quick escape' keyboard sequence timer.\n   *\n   * This can be invoked several times. We want this to be possible so that the\n   * timer is restarted each time the shortcut key is pressed (e.g. the user has\n   * up to n seconds between each keypress, rather than n seconds to invoke the\n   * entire sequence.)\n   *\n   * @private\n   */\n  setKeypressTimer() {\n    // Clear any existing timeout. This is so only one timer is running even if\n    // there are multiple keypresses in quick succession.\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n    }\n\n    // Set a fresh timeout\n    this.keypressTimeoutId = window.setTimeout(\n      this.resetKeypressTimer.bind(this),\n      this.timeoutTime\n    )\n  }\n\n  /**\n   * Stops and resets the 'quick escape' keyboard sequence timer.\n   *\n   * @private\n   */\n  resetKeypressTimer() {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n      this.keypressTimeoutId = null\n    }\n\n    const $updateSpan = this.$updateSpan\n\n    this.keypressCounter = 0\n    $updateSpan.textContent = this.i18n.t('timedOut')\n\n    this.timeoutMessageId = window.setTimeout(() => {\n      $updateSpan.textContent = ''\n    }, this.timeoutTime)\n\n    this.updateIndicator()\n  }\n\n  /**\n   * Reset the page using the EtP button\n   *\n   * We use this in situations where a user may re-enter a page using the browser\n   * back button. In these cases, the browser can choose to restore the state of\n   * the page as it was previously, including restoring the 'ghost page' overlay,\n   * the announcement span having it's role set to \"alert\" and the keypress\n   * indicator still active, leaving the page in an unusable state.\n   *\n   * By running this check when the page is shown, we can programatically restore\n   * the page and the component to a \"default\" state\n   *\n   * @private\n   */\n  resetPage() {\n    // If an overlay is set, remove it and reset the value\n    document.body.classList.remove('govuk-exit-this-page-hide-content')\n\n    if (this.$overlay) {\n      this.$overlay.remove()\n      this.$overlay = null\n    }\n\n    // Ensure the announcement span's role is status, not alert and clear any text\n    if (this.$updateSpan) {\n      this.$updateSpan.setAttribute('role', 'status')\n      this.$updateSpan.textContent = ''\n    }\n\n    // Sync the keypress indicator lights\n    this.updateIndicator()\n\n    // If the timeouts are active, clear them\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n    }\n\n    if (this.timeoutMessageId) {\n      window.clearTimeout(this.timeoutMessageId)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-exit-this-page'\n\n  /**\n   * Exit this page default config\n   *\n   * @see {@link ExitThisPageConfig}\n   * @constant\n   * @type {ExitThisPageConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      activated: 'Loading.',\n      timedOut: 'Exit this page expired.',\n      pressTwoMoreTimes: 'Shift, press 2 more times to exit.',\n      pressOneMoreTime: 'Shift, press 1 more time to exit.'\n    }\n  })\n\n  /**\n   * Exit this page config schema\n   *\n   * @constant\n   * @satisfies {Schema<ExitThisPageConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' }\n    }\n  })\n}\n\n/**\n * Exit this Page config\n *\n * @see {@link ExitThisPage.defaults}\n * @typedef {object} ExitThisPageConfig\n * @property {ExitThisPageTranslations} [i18n=ExitThisPage.defaults.i18n] - Exit this page translations\n */\n\n/**\n * Exit this Page translations\n *\n * @see {@link ExitThisPage.defaults.i18n}\n * @typedef {object} ExitThisPageTranslations\n *\n * Messages used by the component programatically inserted text, including\n * overlay text and screen reader announcements.\n * @property {string} [activated] - Screen reader announcement for when EtP\n *   keypress functionality has been successfully activated.\n * @property {string} [timedOut] - Screen reader announcement for when the EtP\n *   keypress functionality has timed out.\n * @property {string} [pressTwoMoreTimes] - Screen reader announcement informing\n *   the user they must press the activation key two more times.\n * @property {string} [pressOneMoreTime] - Screen reader announcement informing\n *   the user they must press the activation key one more time.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n", "import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { formatErrorMessage } from '../../common/index.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * File upload component\n *\n * @preserve\n * @augments ConfigurableComponent<FileUploadConfig>\n */\nexport class FileUpload extends ConfigurableComponent {\n  /**\n   * @private\n   * @type {HTMLFileInputElement}\n   */\n  $input\n\n  /**\n   * @private\n   */\n  $button\n\n  /**\n   * @private\n   */\n  $status\n\n  /** @private */\n  i18n\n\n  /** @private */\n  id\n\n  /** @private */\n  $announcements\n\n  /**\n   * @private\n   * @type {boolean | undefined}\n   */\n  enteredAnotherElement\n\n  /**\n   * @param {Element | null} $root - File input element\n   * @param {FileUploadConfig} [config] - File Upload config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $input = this.$root.querySelector('input')\n\n    if ($input === null) {\n      throw new ElementError({\n        component: FileUpload,\n        identifier: 'File inputs (`<input type=\"file\">`)'\n      })\n    }\n\n    if ($input.type !== 'file') {\n      throw new ElementError(\n        formatErrorMessage(\n          FileUpload,\n          'File input (`<input type=\"file\">`) attribute (`type`) is not `file`'\n        )\n      )\n    }\n\n    this.$input = /** @type {HTMLFileInputElement} */ ($input)\n\n    if (!this.$input.id) {\n      throw new ElementError({\n        component: FileUpload,\n        identifier: 'File input (`<input type=\"file\">`) attribute (`id`)'\n      })\n    }\n\n    this.id = this.$input.id\n\n    this.i18n = new I18n(this.config.i18n, {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue(this.$root, 'lang')\n    })\n\n    const $label = this.findLabel()\n    // Add an ID to the label if it doesn't have one already\n    // so it can be referenced by `aria-labelledby`\n    if (!$label.id) {\n      $label.id = `${this.id}-label`\n    }\n\n    // we need to copy the 'id' of the root element\n    // to the new button replacement element\n    // so that focus will work in the error summary\n    this.$input.id = `${this.id}-input`\n\n    // Hide the native input\n    this.$input.setAttribute('hidden', 'true')\n\n    // Create the file selection button\n    const $button = document.createElement('button')\n    $button.classList.add('govuk-file-upload-button')\n    $button.type = 'button'\n    $button.id = this.id\n    $button.classList.add('govuk-file-upload-button--empty')\n\n    // Copy `aria-describedby` if present so hints and errors\n    // are associated to the `<button>`\n    const ariaDescribedBy = this.$input.getAttribute('aria-describedby')\n    if (ariaDescribedBy) {\n      $button.setAttribute('aria-describedby', ariaDescribedBy)\n    }\n\n    // Create status element that shows what/how many files are selected\n    const $status = document.createElement('span')\n    $status.className = 'govuk-body govuk-file-upload-button__status'\n    $status.setAttribute('aria-live', 'polite')\n    $status.innerText = this.i18n.t('noFileChosen')\n\n    $button.appendChild($status)\n\n    const commaSpan = document.createElement('span')\n    commaSpan.className = 'govuk-visually-hidden'\n    commaSpan.innerText = ', '\n    commaSpan.id = `${this.id}-comma`\n\n    $button.appendChild(commaSpan)\n\n    const containerSpan = document.createElement('span')\n    containerSpan.className =\n      'govuk-file-upload-button__pseudo-button-container'\n\n    const buttonSpan = document.createElement('span')\n    buttonSpan.className =\n      'govuk-button govuk-button--secondary govuk-file-upload-button__pseudo-button'\n    buttonSpan.innerText = this.i18n.t('chooseFilesButton')\n\n    containerSpan.appendChild(buttonSpan)\n\n    // Add a space so the button and instruction read correctly\n    // when CSS is disabled\n    containerSpan.insertAdjacentText('beforeend', ' ')\n\n    const instructionSpan = document.createElement('span')\n    instructionSpan.className =\n      'govuk-body govuk-file-upload-button__instruction'\n    instructionSpan.innerText = this.i18n.t('dropInstruction')\n\n    containerSpan.appendChild(instructionSpan)\n\n    $button.appendChild(containerSpan)\n    $button.setAttribute(\n      'aria-labelledby',\n      `${$label.id} ${commaSpan.id} ${$button.id}`\n    )\n    $button.addEventListener('click', this.onClick.bind(this))\n    $button.addEventListener('dragover', (event) => {\n      // prevent default to allow drop\n      event.preventDefault()\n    })\n\n    // Assemble these all together\n    this.$root.insertAdjacentElement('afterbegin', $button)\n\n    this.$input.setAttribute('tabindex', '-1')\n    this.$input.setAttribute('aria-hidden', 'true')\n\n    // Make all these new variables available to the module\n    this.$button = $button\n    this.$status = $status\n\n    // Bind change event to the underlying input\n    this.$input.addEventListener('change', this.onChange.bind(this))\n\n    // Synchronise the `disabled` state between the button and underlying input\n    this.updateDisabledState()\n    this.observeDisabledState()\n\n    // Handle drop zone visibility\n    // A live region to announce when users enter or leave the drop zone\n    this.$announcements = document.createElement('span')\n    this.$announcements.classList.add('govuk-file-upload-announcements')\n    this.$announcements.classList.add('govuk-visually-hidden')\n    this.$announcements.setAttribute('aria-live', 'assertive')\n    this.$root.insertAdjacentElement('afterend', this.$announcements)\n\n    // if there is no CSS and input is hidden\n    // button will need to handle drop event\n    this.$button.addEventListener('drop', this.onDrop.bind(this))\n\n    // While user is dragging, it gets a little more complex because of Safari.\n    // Safari doesn't fill `relatedTarget` on `dragleave` (nor `dragenter`).\n    // This means we can't use `relatedTarget` to:\n    // - check if the user is still within the wrapper\n    //   (`relatedTarget` being a descendant of the wrapper)\n    // - check if the user is still over the viewport\n    //   (`relatedTarget` being null if outside)\n\n    // Thanks to `dragenter` bubbling, we can listen on the `document` with a\n    // single function and update the visibility based on whether we entered a\n    // node inside or outside the wrapper.\n    document.addEventListener(\n      'dragenter',\n      this.updateDropzoneVisibility.bind(this)\n    )\n\n    // To detect if we're outside the document, we can track if there was a\n    // `dragenter` event preceding a `dragleave`. If there wasn't, this means\n    // we're outside the document.\n    //\n    // The order of events is guaranteed by the HTML specs:\n    // https://html.spec.whatwg.org/multipage/dnd.html#drag-and-drop-processing-model\n    document.addEventListener('dragenter', () => {\n      this.enteredAnotherElement = true\n    })\n\n    document.addEventListener('dragleave', () => {\n      if (!this.enteredAnotherElement && !this.$button.disabled) {\n        this.hideDraggingState()\n        this.$announcements.innerText = this.i18n.t('leftDropZone')\n      }\n\n      this.enteredAnotherElement = false\n    })\n  }\n\n  /**\n   * Updates the visibility of the dropzone as users enters the various elements on the page\n   *\n   * @private\n   * @param {DragEvent} event - The `dragenter` event\n   */\n  updateDropzoneVisibility(event) {\n    if (this.$button.disabled) return\n\n    // DOM interfaces only type `event.target` as `EventTarget`\n    // so we first need to make sure it's a `Node`\n    if (event.target instanceof Node) {\n      if (this.$root.contains(event.target)) {\n        if (event.dataTransfer && this.canDrop(event.dataTransfer)) {\n          // Only update the class and make the announcement if not already visible\n          // to avoid repeated announcements on NVDA (2024.4) + Firefox (133)\n          if (\n            !this.$button.classList.contains(\n              'govuk-file-upload-button--dragging'\n            )\n          ) {\n            this.showDraggingState()\n            this.$announcements.innerText = this.i18n.t('enteredDropZone')\n          }\n        }\n      } else {\n        // Only hide the dropzone if it is visible to prevent announcing user\n        // left the drop zone when they enter the page but haven't reached yet\n        // the file upload component\n        if (\n          this.$button.classList.contains('govuk-file-upload-button--dragging')\n        ) {\n          this.hideDraggingState()\n          this.$announcements.innerText = this.i18n.t('leftDropZone')\n        }\n      }\n    }\n  }\n\n  /**\n   * Show the drop zone visually\n   *\n   * @private\n   */\n  showDraggingState() {\n    this.$button.classList.add('govuk-file-upload-button--dragging')\n  }\n\n  /**\n   * Hides the drop zone visually\n   *\n   * @private\n   */\n  hideDraggingState() {\n    this.$button.classList.remove('govuk-file-upload-button--dragging')\n  }\n\n  /**\n   * Handles user dropping on the component\n   *\n   * @private\n   * @param {DragEvent} event - The `dragenter` event\n   */\n  onDrop(event) {\n    event.preventDefault()\n\n    if (event.dataTransfer && this.canFillInput(event.dataTransfer)) {\n      this.$input.files = event.dataTransfer.files\n\n      // Dispatch a `change` event so external code that would rely on the `<input>`\n      // dispatching an event when files are dropped still work.\n      // Use a `CustomEvent` so our events are distinguishable from browser's native events\n      this.$input.dispatchEvent(new CustomEvent('change'))\n\n      this.hideDraggingState()\n    }\n  }\n\n  /**\n   * Confirms if enhanced `<input>` can be filled with files from the given `DataTransfer`\n   *\n   * @param {DataTransfer} dataTransfer - The `DataTransfer` being dropped\n   * @returns {boolean} - true if the `DataTransfer` contains files, in number matching the `multiple` attribute of the original `<input>`\n   * @private\n   */\n  canFillInput(dataTransfer) {\n    return this.matchesInputCapacity(dataTransfer.files.length)\n  }\n\n  /**\n   * Confirms if the content of a `DataTransfer` dragged over component can be dropped\n   *\n   * Unfortunately, there's a certain level of uncertainty in Safari which does not\n   * even provide a list of `items` while dragging (and seems to even miss the `types` sometimes)\n   *\n   * @param {DataTransfer} dataTransfer - The `DataTransfer` being dragged\n   * @returns {boolean} - true if the `DataTransfer` looks OK for filling the input, false otherwise\n   * @private\n   */\n  canDrop(dataTransfer) {\n    // If the browser is kind enough to give a list of items, we'll use that as source of truth\n    if (dataTransfer.items.length) {\n      return this.matchesInputCapacity(countFileItems(dataTransfer.items))\n    }\n\n    // If we have some type information, we'll use that\n    if (dataTransfer.types.length) {\n      return dataTransfer.types.includes('Files')\n    }\n\n    // If we have nothing to go by, we'll assume things are OK\n    // until we have a more accurate picture inside the `drop` event\n    return true\n  }\n\n  /**\n   * Confirms the given number of files matches that allowed by the enhanced `<input>`\n   *\n   * @param {number} numberOfFiles - The number of files\n   * @returns {boolean} - `true` if the enhanced `<input>` can accept that number of files\n   * @private\n   */\n  matchesInputCapacity(numberOfFiles) {\n    if (this.$input.multiple) {\n      return numberOfFiles > 0\n    }\n\n    return numberOfFiles === 1\n  }\n\n  /**\n   * Check if the value of the underlying input has changed\n   *\n   * @private\n   */\n  onChange() {\n    const fileCount = this.$input.files.length\n\n    if (fileCount === 0) {\n      // If there are no files, show the default selection text\n      this.$status.innerText = this.i18n.t('noFileChosen')\n      this.$button.classList.add('govuk-file-upload-button--empty')\n    } else {\n      if (\n        // If there is 1 file, just show the file name\n        fileCount === 1\n      ) {\n        this.$status.innerText = this.$input.files[0].name\n      } else {\n        // Otherwise, tell the user how many files are selected\n        this.$status.innerText = this.i18n.t('multipleFilesChosen', {\n          count: fileCount\n        })\n      }\n\n      this.$button.classList.remove('govuk-file-upload-button--empty')\n    }\n  }\n\n  /**\n   * Looks up the `<label>` element associated to the field\n   *\n   * @private\n   * @returns {HTMLElement} The `<label>` element associated to the field\n   * @throws {ElementError} If the `<label>` cannot be found\n   */\n  findLabel() {\n    // Use `label` in the selector so TypeScript knows the type fo `HTMLElement`\n    const $label = document.querySelector(`label[for=\"${this.$input.id}\"]`)\n\n    if (!$label) {\n      throw new ElementError({\n        component: FileUpload,\n        identifier: `Field label (\\`<label for=${this.$input.id}>\\`)`\n      })\n    }\n\n    return $label\n  }\n\n  /**\n   * When the button is clicked, emulate clicking the actual, hidden file input\n   *\n   * @private\n   */\n  onClick() {\n    this.$input.click()\n  }\n\n  /**\n   * Create a mutation observer to check if the input's attributes altered.\n   *\n   * @private\n   */\n  observeDisabledState() {\n    const observer = new MutationObserver((mutationList) => {\n      for (const mutation of mutationList) {\n        if (\n          mutation.type === 'attributes' &&\n          mutation.attributeName === 'disabled'\n        ) {\n          this.updateDisabledState()\n        }\n      }\n    })\n\n    observer.observe(this.$input, {\n      attributes: true\n    })\n  }\n\n  /**\n   * Synchronise the `disabled` state between the input and replacement button.\n   *\n   * @private\n   */\n  updateDisabledState() {\n    this.$button.disabled = this.$input.disabled\n\n    this.$root.classList.toggle(\n      'govuk-drop-zone--disabled',\n      this.$button.disabled\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-file-upload'\n\n  /**\n   * File upload default config\n   *\n   * @see {@link FileUploadConfig}\n   * @constant\n   * @type {FileUploadConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      chooseFilesButton: 'Choose file',\n      dropInstruction: 'or drop file',\n      noFileChosen: 'No file chosen',\n      multipleFilesChosen: {\n        // the 'one' string isn't used as the component displays the filename\n        // instead, however it's here for coverage's sake\n        one: '%{count} file chosen',\n        other: '%{count} files chosen'\n      },\n      enteredDropZone: 'Entered drop zone',\n      leftDropZone: 'Left drop zone'\n    }\n  })\n\n  /**\n   * File upload config schema\n   *\n   * @constant\n   * @satisfies {Schema<FileUploadConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' }\n    }\n  })\n}\n\n/**\n * Counts the number of `DataTransferItem` whose kind is `file`\n *\n * @param {DataTransferItemList} list - The list\n * @returns {number} - The number of items whose kind is `file` in the list\n */\nfunction countFileItems(list) {\n  let result = 0\n\n  // `DataTransferItemList` is not iterable\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].kind === 'file') {\n      result++\n    }\n  }\n  return result\n}\n\n/**\n * @typedef {HTMLInputElement & {files: FileList}} HTMLFileInputElement\n */\n\n/**\n * File upload config\n *\n * @see {@link FileUpload.defaults}\n * @typedef {object} FileUploadConfig\n * @property {FileUploadTranslations} [i18n=FileUpload.defaults.i18n] - File upload translations\n */\n\n/**\n * File upload translations\n *\n * @see {@link FileUpload.defaults.i18n}\n * @typedef {object} FileUploadTranslations\n *\n * Messages used by the component\n * @property {string} [chooseFile] - The text of the button that opens the file picker\n * @property {string} [dropInstruction] - The text informing users they can drop files\n * @property {TranslationPluralForms} [multipleFilesChosen] - The text displayed when multiple files\n *   have been chosen by the user\n * @property {string} [noFileChosen] - The text to displayed when no file has been chosen by the user\n * @property {string} [enteredDropZone] - The text announced by assistive technology\n *   when user drags files and enters the drop zone\n * @property {string} [leftDropZone] - The text announced by assistive technology\n *   when user drags files and leaves the drop zone without dropping\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n * @import { TranslationPluralForms } from '../../i18n.mjs'\n */\n", "import { getBreakpoint } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Header component\n *\n * @preserve\n */\nexport class Header extends Component {\n  /** @private */\n  $menuButton\n\n  /** @private */\n  $menu\n\n  /**\n   * Save the opened/closed state for the nav in memory so that we can\n   * accurately maintain state when the screen is changed from small to big and\n   * back to small\n   *\n   * @private\n   */\n  menuIsOpen = false\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to detect\n   * when a screen size change happens. We rely on it being null if the feature\n   * isn't available to initially apply hidden attributes\n   *\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * Apply a matchMedia for desktop which will trigger a state sync if the\n   * browser viewport moves between states.\n   *\n   * @param {Element | null} $root - HTML element to use for header\n   */\n  constructor($root) {\n    super($root)\n\n    const $menuButton = this.$root.querySelector('.govuk-js-header-toggle')\n\n    // Headers don't necessarily have a navigation. When they don't, the menu\n    // toggle won't be rendered by our macro (or may be omitted when writing\n    // plain HTML)\n    if (!$menuButton) {\n      return this\n    }\n\n    // Pad the header logo so it doesn't overlap the menu button\n    this.$root.classList.add('govuk-header--with-js-navigation')\n\n    const menuId = $menuButton.getAttribute('aria-controls')\n    if (!menuId) {\n      throw new ElementError({\n        component: Header,\n        identifier:\n          'Navigation button (`<button class=\"govuk-js-header-toggle\">`) attribute (`aria-controls`)'\n      })\n    }\n\n    const $menu = document.getElementById(menuId)\n    if (!$menu) {\n      throw new ElementError({\n        component: Header,\n        element: $menu,\n        identifier: `Navigation (\\`<ul id=\"${menuId}\">\\`)`\n      })\n    }\n\n    this.$menu = $menu\n    this.$menuButton = $menuButton\n\n    this.setupResponsiveChecks()\n\n    this.$menuButton.addEventListener('click', () =>\n      this.handleMenuButtonClick()\n    )\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('desktop')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        component: Header,\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for GOV.UK Frontend desktop breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Sync menu state\n   *\n   * Uses the global variable menuIsOpen to correctly set the accessible and\n   * visual states of the menu and the menu button.\n   * Additionally will force the menu to be visible and the menu button to be\n   * hidden if the matchMedia is triggered to desktop.\n   *\n   * @private\n   */\n  checkMode() {\n    if (!this.mql || !this.$menu || !this.$menuButton) {\n      return\n    }\n\n    if (this.mql.matches) {\n      this.$menu.removeAttribute('hidden')\n      this.$menuButton.setAttribute('hidden', '')\n    } else {\n      this.$menuButton.removeAttribute('hidden')\n      this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString())\n\n      if (this.menuIsOpen) {\n        this.$menu.removeAttribute('hidden')\n      } else {\n        this.$menu.setAttribute('hidden', '')\n      }\n    }\n  }\n\n  /**\n   * Handle menu button click\n   *\n   * When the menu button is clicked, change the visibility of the menu and then\n   * sync the accessibility state and menu button state\n   *\n   * @private\n   */\n  handleMenuButtonClick() {\n    this.menuIsOpen = !this.menuIsOpen\n    this.checkMode()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-header'\n}\n", "import { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { setFocus } from '../../common/index.mjs'\n\n/**\n * Notification Banner component\n *\n * @preserve\n * @augments ConfigurableComponent<NotificationBannerConfig>\n */\nexport class NotificationBanner extends ConfigurableComponent {\n  /**\n   * @param {Element | null} $root - HTML element to use for notification banner\n   * @param {NotificationBannerConfig} [config] - Notification banner config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    /**\n     * Focus the notification banner\n     *\n     * If `role=\"alert\"` is set, focus the element to help some assistive\n     * technologies prioritise announcing it.\n     *\n     * You can turn off the auto-focus functionality by setting\n     * `data-disable-auto-focus=\"true\"` in the component HTML. You might wish to\n     * do this based on user research findings, or to avoid a clash with another\n     * element which should be focused when the page loads.\n     */\n    if (\n      this.$root.getAttribute('role') === 'alert' &&\n      !this.config.disableAutoFocus\n    ) {\n      setFocus(this.$root)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-notification-banner'\n\n  /**\n   * Notification banner default config\n   *\n   * @see {@link NotificationBannerConfig}\n   * @constant\n   * @type {NotificationBannerConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n\n  /**\n   * Notification banner config schema\n   *\n   * @constant\n   * @satisfies {Schema<NotificationBannerConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      disableAutoFocus: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Notification banner config\n *\n * @typedef {object} NotificationBannerConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the\n *   notification banner will not be focussed when the page loads. This only\n *   applies if the component has a `role` of `alert` – in other cases the\n *   component will not be focused on page load, regardless of this option.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n", "import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Password input component\n *\n * @preserve\n * @augments ConfigurableComponent<PasswordInputConfig>\n */\nexport class PasswordInput extends ConfigurableComponent {\n  /** @private */\n  i18n\n\n  /**\n   * @private\n   * @type {HTMLInputElement}\n   */\n  $input\n\n  /**\n   * @private\n   * @type {HTMLButtonElement}\n   */\n  $showHideButton\n\n  /** @private */\n  $screenReaderStatusMessage\n\n  /**\n   * @param {Element | null} $root - HTML element to use for password input\n   * @param {PasswordInputConfig} [config] - Password input config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $input = this.$root.querySelector('.govuk-js-password-input-input')\n    if (!($input instanceof HTMLInputElement)) {\n      throw new ElementError({\n        component: PasswordInput,\n        element: $input,\n        expectedType: 'HTMLInputElement',\n        identifier: 'Form field (`.govuk-js-password-input-input`)'\n      })\n    }\n\n    if ($input.type !== 'password') {\n      throw new ElementError(\n        'Password input: Form field (`.govuk-js-password-input-input`) must be of type `password`.'\n      )\n    }\n\n    const $showHideButton = this.$root.querySelector(\n      '.govuk-js-password-input-toggle'\n    )\n    if (!($showHideButton instanceof HTMLButtonElement)) {\n      throw new ElementError({\n        component: PasswordInput,\n        element: $showHideButton,\n        expectedType: 'HTMLButtonElement',\n        identifier: 'Button (`.govuk-js-password-input-toggle`)'\n      })\n    }\n\n    if ($showHideButton.type !== 'button') {\n      throw new ElementError(\n        'Password input: Button (`.govuk-js-password-input-toggle`) must be of type `button`.'\n      )\n    }\n\n    this.$input = $input\n    this.$showHideButton = $showHideButton\n\n    this.i18n = new I18n(this.config.i18n, {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue(this.$root, 'lang')\n    })\n\n    // Show the toggle button element\n    this.$showHideButton.removeAttribute('hidden')\n\n    // Create and append the status text for screen readers.\n    // This is injected between the input and button so that users get a sensible reading order if\n    // moving through the page content linearly:\n    // [password input] -> [your password is visible/hidden] -> [show/hide password]\n    const $screenReaderStatusMessage = document.createElement('div')\n    $screenReaderStatusMessage.className =\n      'govuk-password-input__sr-status govuk-visually-hidden'\n    $screenReaderStatusMessage.setAttribute('aria-live', 'polite')\n    this.$screenReaderStatusMessage = $screenReaderStatusMessage\n    this.$input.insertAdjacentElement('afterend', $screenReaderStatusMessage)\n\n    // Bind toggle button\n    this.$showHideButton.addEventListener('click', this.toggle.bind(this))\n\n    // Bind event to revert the password visibility to hidden\n    if (this.$input.form) {\n      this.$input.form.addEventListener('submit', () => this.hide())\n    }\n\n    // If the page is restored from bfcache and the password is visible, hide it again\n    window.addEventListener('pageshow', (event) => {\n      if (event.persisted && this.$input.type !== 'password') {\n        this.hide()\n      }\n    })\n\n    // Default the component to having the password hidden.\n    this.hide()\n  }\n\n  /**\n   * Toggle the visibility of the password input\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  toggle(event) {\n    event.preventDefault()\n\n    // If on this click, the field is type=\"password\", show the value\n    if (this.$input.type === 'password') {\n      this.show()\n      return\n    }\n\n    // Otherwise, hide it\n    // Being defensive - hiding should always be the default\n    this.hide()\n  }\n\n  /**\n   * Show the password input value in plain text.\n   *\n   * @private\n   */\n  show() {\n    this.setType('text')\n  }\n\n  /**\n   * Hide the password input value.\n   *\n   * @private\n   */\n  hide() {\n    this.setType('password')\n  }\n\n  /**\n   * Set the password input type\n   *\n   * @param {'text' | 'password'} type - Input type\n   * @private\n   */\n  setType(type) {\n    if (type === this.$input.type) {\n      return\n    }\n\n    // Update input type\n    this.$input.setAttribute('type', type)\n\n    const isHidden = type === 'password'\n    const prefixButton = isHidden ? 'show' : 'hide'\n    const prefixStatus = isHidden ? 'passwordHidden' : 'passwordShown'\n\n    // Update button text\n    this.$showHideButton.innerText = this.i18n.t(`${prefixButton}Password`)\n\n    // Update button aria-label\n    this.$showHideButton.setAttribute(\n      'aria-label',\n      this.i18n.t(`${prefixButton}PasswordAriaLabel`)\n    )\n\n    // Update status change text\n    this.$screenReaderStatusMessage.innerText = this.i18n.t(\n      `${prefixStatus}Announcement`\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-password-input'\n\n  /**\n   * Password input default config\n   *\n   * @see {@link PasswordInputConfig}\n   * @constant\n   * @default\n   * @type {PasswordInputConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      showPassword: 'Show',\n      hidePassword: 'Hide',\n      showPasswordAriaLabel: 'Show password',\n      hidePasswordAriaLabel: 'Hide password',\n      passwordShownAnnouncement: 'Your password is visible',\n      passwordHiddenAnnouncement: 'Your password is hidden'\n    }\n  })\n\n  /**\n   * Password input config schema\n   *\n   * @constant\n   * @satisfies {Schema<PasswordInputConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' }\n    }\n  })\n}\n\n/**\n * Password input config\n *\n * @typedef {object} PasswordInputConfig\n * @property {PasswordInputTranslations} [i18n=PasswordInput.defaults.i18n] - Password input translations\n */\n\n/**\n * Password input translations\n *\n * @see {@link PasswordInput.defaults.i18n}\n * @typedef {object} PasswordInputTranslations\n *\n * Messages displayed to the user indicating the state of the show/hide toggle.\n * @property {string} [showPassword] - Visible text of the button when the\n *   password is currently hidden. Plain text only.\n * @property {string} [hidePassword] - Visible text of the button when the\n *   password is currently visible. Plain text only.\n * @property {string} [showPasswordAriaLabel] - aria-label of the button when\n *   the password is currently hidden. Plain text only.\n * @property {string} [hidePasswordAriaLabel] - aria-label of the button when\n *   the password is currently visible. Plain text only.\n * @property {string} [passwordShownAnnouncement] - Screen reader\n *   announcement to make when the password has just become visible.\n *   Plain text only.\n * @property {string} [passwordHiddenAnnouncement] - Screen reader\n *   announcement to make when the password has just been hidden.\n *   Plain text only.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n", "import { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Radios component\n *\n * @preserve\n */\nexport class Radios extends Component {\n  /** @private */\n  $inputs\n\n  /**\n   * Radios can be associated with a 'conditionally revealed' content block –\n   * for example, a radio for 'Phone' could reveal an additional form field for\n   * the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which\n   * is promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page\n   * (for example if the user has navigated back), and set up event handlers to\n   * keep the reveal in sync with the radio state.\n   *\n   * @param {Element | null} $root - HTML element to use for radios\n   */\n  constructor($root) {\n    super($root)\n\n    const $inputs = this.$root.querySelectorAll('input[type=\"radio\"]')\n    if (!$inputs.length) {\n      throw new ElementError({\n        component: Radios,\n        identifier: 'Form inputs (`<input type=\"radio\">`)'\n      })\n    }\n\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError({\n          component: Radios,\n          identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n        })\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$root.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all radio buttons in this component.\n   *\n   * @private\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Radio input\n   */\n  syncConditionalRevealWithInputState($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target?.classList.contains('govuk-radios__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle(\n        'govuk-radios__conditional--hidden',\n        !inputIsChecked\n      )\n    }\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the component root – if the click occurred on a radio, sync\n   * the state of the conditional reveal for all radio buttons in the same form\n   * with the same name (because checking one radio could have un-checked a\n   * radio under the root of another Radio component)\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't radio buttons\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'radio'\n    ) {\n      return\n    }\n\n    // We only need to consider radios with conditional reveals, which will have\n    // aria-controls attributes.\n    const $allInputs = document.querySelectorAll(\n      'input[type=\"radio\"][aria-controls]'\n    )\n\n    const $clickedInputForm = $clickedInput.form\n    const $clickedInputName = $clickedInput.name\n\n    $allInputs.forEach(($input) => {\n      const hasSameFormOwner = $input.form === $clickedInputForm\n      const hasSameName = $input.name === $clickedInputName\n\n      if (hasSameName && hasSameFormOwner) {\n        this.syncConditionalRevealWithInputState($input)\n      }\n    })\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-radios'\n}\n", "import { getBreakpoint } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Service Navigation component\n *\n * @preserve\n */\nexport class ServiceNavigation extends Component {\n  /** @private */\n  $menuButton\n\n  /** @private */\n  $menu\n\n  /**\n   * Remember the open/closed state of the nav so we can maintain it when the\n   * screen is resized.\n   *\n   * @private\n   */\n  menuIsOpen = false\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to detect\n   * when a screen size change happens. We rely on it being null if the feature\n   * isn't available to initially apply hidden attributes\n   *\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for header\n   */\n  constructor($root) {\n    super($root)\n\n    const $menuButton = this.$root.querySelector(\n      '.govuk-js-service-navigation-toggle'\n    )\n\n    // Headers don't necessarily have a navigation. When they don't, the menu\n    // toggle won't be rendered by our macro (or may be omitted when writing\n    // plain HTML)\n    if (!$menuButton) {\n      return this\n    }\n\n    const menuId = $menuButton.getAttribute('aria-controls')\n    if (!menuId) {\n      throw new ElementError({\n        component: ServiceNavigation,\n        identifier:\n          'Navigation button (`<button class=\"govuk-js-service-navigation-toggle\">`) attribute (`aria-controls`)'\n      })\n    }\n\n    const $menu = document.getElementById(menuId)\n    if (!$menu) {\n      throw new ElementError({\n        component: ServiceNavigation,\n        element: $menu,\n        identifier: `Navigation (\\`<ul id=\"${menuId}\">\\`)`\n      })\n    }\n\n    this.$menu = $menu\n    this.$menuButton = $menuButton\n\n    this.setupResponsiveChecks()\n\n    this.$menuButton.addEventListener('click', () =>\n      this.handleMenuButtonClick()\n    )\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('tablet')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        component: ServiceNavigation,\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for GOV.UK Frontend desktop breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Sync menu state\n   *\n   * Uses the global variable menuIsOpen to correctly set the accessible and\n   * visual states of the menu and the menu button.\n   * Additionally will force the menu to be visible and the menu button to be\n   * hidden if the matchMedia is triggered to desktop.\n   *\n   * @private\n   */\n  checkMode() {\n    if (!this.mql || !this.$menu || !this.$menuButton) {\n      return\n    }\n\n    if (this.mql.matches) {\n      this.$menu.removeAttribute('hidden')\n      this.$menuButton.setAttribute('hidden', '')\n    } else {\n      this.$menuButton.removeAttribute('hidden')\n      this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString())\n\n      if (this.menuIsOpen) {\n        this.$menu.removeAttribute('hidden')\n      } else {\n        this.$menu.setAttribute('hidden', '')\n      }\n    }\n  }\n\n  /**\n   * Handle menu button click\n   *\n   * When the menu button is clicked, change the visibility of the menu and then\n   * sync the accessibility state and menu button state\n   *\n   * @private\n   */\n  handleMenuButtonClick() {\n    this.menuIsOpen = !this.menuIsOpen\n    this.checkMode()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-service-navigation'\n}\n", "import { setFocus } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Skip link component\n *\n * @preserve\n * @augments Component<HTMLAnchorElement>\n */\nexport class SkipLink extends Component {\n  static elementType = HTMLAnchorElement\n\n  /**\n   * @param {Element | null} $root - HTML element to use for skip link\n   * @throws {ElementError} when $root is not set or the wrong type\n   * @throws {ElementError} when $root.hash does not contain a hash\n   * @throws {ElementError} when the linked element is missing or the wrong type\n   */\n  constructor($root) {\n    super($root)\n\n    const hash = this.$root.hash\n    const href = this.$root.getAttribute('href') ?? ''\n\n    // Return early for external URLs or links to other pages\n    if (\n      this.$root.origin !== window.location.origin ||\n      this.$root.pathname !== window.location.pathname\n    ) {\n      return\n    }\n\n    const linkedElementId = hash.replace('#', '')\n\n    // Check link path matching current page\n    if (!linkedElementId) {\n      throw new ElementError(\n        `Skip link: Target link (\\`href=\"${href}\"\\`) has no hash fragment`\n      )\n    }\n\n    const $linkedElement = document.getElementById(linkedElementId)\n\n    // Check for link target element\n    if (!$linkedElement) {\n      throw new ElementError({\n        component: SkipLink,\n        element: $linkedElement,\n        identifier: `Target content (\\`id=\"${linkedElementId}\"\\`)`\n      })\n    }\n\n    /**\n     * Focus the linked element on click\n     *\n     * Adds a helper CSS class to hide native focus styles,\n     * but removes it on blur to restore native focus styles\n     */\n    this.$root.addEventListener('click', () =>\n      setFocus($linkedElement, {\n        onBeforeFocus() {\n          $linkedElement.classList.add('govuk-skip-link-focused-element')\n        },\n        onBlur() {\n          $linkedElement.classList.remove('govuk-skip-link-focused-element')\n        }\n      })\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-skip-link'\n}\n", "import { getBreakpoint } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Tabs component\n *\n * @preserve\n */\nexport class Tabs extends Component {\n  /** @private */\n  $tabs\n\n  /** @private */\n  $tabList\n\n  /** @private */\n  $tabListItems\n\n  /** @private */\n  jsHiddenClass = 'govuk-tabs__panel--hidden'\n\n  /** @private */\n  changingHash = false\n\n  /** @private */\n  boundTabClick\n\n  /** @private */\n  boundTabKeydown\n\n  /** @private */\n  boundOnHashChange\n\n  /**\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for tabs\n   */\n  constructor($root) {\n    super($root)\n\n    const $tabs = this.$root.querySelectorAll('a.govuk-tabs__tab')\n    if (!$tabs.length) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: 'Links (`<a class=\"govuk-tabs__tab\">`)'\n      })\n    }\n\n    this.$tabs = $tabs\n\n    // Save bound functions so we can remove event listeners during teardown\n    this.boundTabClick = this.onTabClick.bind(this)\n    this.boundTabKeydown = this.onTabKeydown.bind(this)\n    this.boundOnHashChange = this.onHashChange.bind(this)\n\n    const $tabList = this.$root.querySelector('.govuk-tabs__list')\n    const $tabListItems = this.$root.querySelectorAll(\n      'li.govuk-tabs__list-item'\n    )\n\n    if (!$tabList) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: 'List (`<ul class=\"govuk-tabs__list\">`)'\n      })\n    }\n\n    if (!$tabListItems.length) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: 'List items (`<li class=\"govuk-tabs__list-item\">`)'\n      })\n    }\n\n    this.$tabList = $tabList\n    this.$tabListItems = $tabListItems\n\n    this.setupResponsiveChecks()\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('tablet')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for GOV.UK Frontend tablet breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Setup or teardown handler for viewport resize check\n   *\n   * @private\n   */\n  checkMode() {\n    if (this.mql?.matches) {\n      this.setup()\n    } else {\n      this.teardown()\n    }\n  }\n\n  /**\n   * Setup tab component\n   *\n   * @private\n   */\n  setup() {\n    this.$tabList.setAttribute('role', 'tablist')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.setAttribute('role', 'presentation')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Set HTML attributes\n      this.setAttributes($tab)\n\n      // Handle events\n      $tab.addEventListener('click', this.boundTabClick, true)\n      $tab.addEventListener('keydown', this.boundTabKeydown, true)\n\n      // Remove old active panels\n      this.hideTab($tab)\n    })\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $activeTab = this.getTab(window.location.hash) ?? this.$tabs[0]\n\n    this.showTab($activeTab)\n\n    // Handle hashchange events\n    window.addEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Teardown tab component\n   *\n   * @private\n   */\n  teardown() {\n    this.$tabList.removeAttribute('role')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.removeAttribute('role')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Remove events\n      $tab.removeEventListener('click', this.boundTabClick, true)\n      $tab.removeEventListener('keydown', this.boundTabKeydown, true)\n\n      // Unset HTML attributes\n      this.unsetAttributes($tab)\n    })\n\n    // Remove hashchange event handler\n    window.removeEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Handle hashchange event\n   *\n   * @private\n   * @returns {void | undefined} Returns void, or undefined when prevented\n   */\n  onHashChange() {\n    const hash = window.location.hash\n    const $tabWithHash = this.getTab(hash)\n    if (!$tabWithHash) {\n      return\n    }\n\n    // Prevent changing the hash\n    if (this.changingHash) {\n      this.changingHash = false\n      return\n    }\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $previousTab = this.getCurrentTab()\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($previousTab)\n    this.showTab($tabWithHash)\n    $tabWithHash.focus()\n  }\n\n  /**\n   * Hide panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hideTab($tab) {\n    this.unhighlightTab($tab)\n    this.hidePanel($tab)\n  }\n\n  /**\n   * Show panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showTab($tab) {\n    this.highlightTab($tab)\n    this.showPanel($tab)\n  }\n\n  /**\n   * Get tab link by hash\n   *\n   * @private\n   * @param {string} hash - Hash fragment including #\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getTab(hash) {\n    return this.$root.querySelector(`a.govuk-tabs__tab[href=\"${hash}\"]`)\n  }\n\n  /**\n   * Set tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  setAttributes($tab) {\n    const panelId = $tab.hash.replace('#', '')\n    if (!panelId) {\n      return\n    }\n\n    // Set tab attributes\n    $tab.setAttribute('id', `tab_${panelId}`)\n    $tab.setAttribute('role', 'tab')\n    $tab.setAttribute('aria-controls', panelId)\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.setAttribute('tabindex', '-1')\n\n    // Set panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.setAttribute('role', 'tabpanel')\n    $panel.setAttribute('aria-labelledby', $tab.id)\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unsetAttributes($tab) {\n    // unset tab attributes\n    $tab.removeAttribute('id')\n    $tab.removeAttribute('role')\n    $tab.removeAttribute('aria-controls')\n    $tab.removeAttribute('aria-selected')\n    $tab.removeAttribute('tabindex')\n\n    // unset panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.removeAttribute('role')\n    $panel.removeAttribute('aria-labelledby')\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Handle tab link clicks\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {void} Returns void\n   */\n  onTabClick(event) {\n    const $currentTab = this.getCurrentTab()\n    const $nextTab = event.currentTarget\n\n    if (!$currentTab || !($nextTab instanceof HTMLAnchorElement)) {\n      return\n    }\n\n    event.preventDefault()\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Update browser URL hash fragment for tab\n   *\n   * - Allows back/forward to navigate tabs\n   * - Avoids page jump when hash changes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  createHistoryEntry($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    // Save and restore the id so the page doesn't jump when a user clicks a tab\n    // (which changes the hash)\n    const panelId = $panel.id\n    $panel.id = ''\n    this.changingHash = true\n    window.location.hash = panelId\n    $panel.id = panelId\n  }\n\n  /**\n   * Handle tab keydown event\n   *\n   * - Press right arrow for next tab\n   * - Press left arrow for previous tab\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  onTabKeydown(event) {\n    switch (event.key) {\n      // 'Left' and 'Right' required for Edge 16 support.\n      case 'ArrowLeft':\n      case 'Left':\n        this.activatePreviousTab()\n        event.preventDefault()\n        break\n      case 'ArrowRight':\n      case 'Right':\n        this.activateNextTab()\n        event.preventDefault()\n        break\n    }\n  }\n\n  /**\n   * Activate next tab\n   *\n   * @private\n   */\n  activateNextTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab?.parentElement) {\n      return\n    }\n\n    const $nextTabListItem = $currentTab.parentElement.nextElementSibling\n    if (!$nextTabListItem) {\n      return\n    }\n\n    const $nextTab = $nextTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$nextTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    $nextTab.focus()\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Activate previous tab\n   *\n   * @private\n   */\n  activatePreviousTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab?.parentElement) {\n      return\n    }\n\n    const $previousTabListItem =\n      $currentTab.parentElement.previousElementSibling\n    if (!$previousTabListItem) {\n      return\n    }\n\n    const $previousTab = $previousTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($previousTab)\n    $previousTab.focus()\n    this.createHistoryEntry($previousTab)\n  }\n\n  /**\n   * Get tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   * @returns {Element | null} Tab panel\n   */\n  getPanel($tab) {\n    const panelId = $tab.hash.replace('#', '')\n    if (!panelId) {\n      return null\n    }\n\n    return this.$root.querySelector(`#${panelId}`)\n  }\n\n  /**\n   * Show tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showPanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Hide tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hidePanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unhighlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.parentElement.classList.remove('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Set 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  highlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'true')\n    $tab.parentElement.classList.add('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '0')\n  }\n\n  /**\n   * Get current tab link\n   *\n   * @private\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getCurrentTab() {\n    return this.$root.querySelector(\n      '.govuk-tabs__list-item--selected a.govuk-tabs__tab'\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-tabs'\n}\n", "import { normaliseOptions } from './common/configuration.mjs'\nimport { isObject, isSupported } from './common/index.mjs'\nimport { Accordion } from './components/accordion/accordion.mjs'\nimport { Button } from './components/button/button.mjs'\nimport { CharacterCount } from './components/character-count/character-count.mjs'\nimport { Checkboxes } from './components/checkboxes/checkboxes.mjs'\nimport { ErrorSummary } from './components/error-summary/error-summary.mjs'\nimport { ExitThisPage } from './components/exit-this-page/exit-this-page.mjs'\nimport { FileUpload } from './components/file-upload/file-upload.mjs'\nimport { Header } from './components/header/header.mjs'\nimport { NotificationBanner } from './components/notification-banner/notification-banner.mjs'\nimport { PasswordInput } from './components/password-input/password-input.mjs'\nimport { Radios } from './components/radios/radios.mjs'\nimport { ServiceNavigation } from './components/service-navigation/service-navigation.mjs'\nimport { SkipLink } from './components/skip-link/skip-link.mjs'\nimport { Tabs } from './components/tabs/tabs.mjs'\nimport { ElementError, SupportError } from './errors/index.mjs'\n\n/**\n * Initialise all components\n *\n * Use the `data-module` attributes to find, instantiate and init all of the\n * components provided as part of GOV.UK Frontend.\n *\n * @param {Config | Element | Document | null} [scopeOrConfig] - Scope of the document to search within or config for all components (with optional scope)\n */\nfunction initAll(scopeOrConfig = {}) {\n  const config = isObject(scopeOrConfig) ? scopeOrConfig : {}\n\n  // Extract initialisation options\n  const options = normaliseOptions(scopeOrConfig)\n\n  try {\n    // Skip initialisation when GOV.UK Frontend is not supported\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n\n    // Users can initialise GOV.UK Frontend in certain sections of the page\n    // unless the scope is null (for example, query selector not found)\n    if (options.scope === null) {\n      throw new ElementError({\n        element: options.scope,\n        identifier: 'GOV.UK Frontend scope element (`$scope`)'\n      })\n    }\n  } catch (error) {\n    if (options.onError) {\n      options.onError(error, {\n        config\n      })\n    } else {\n      console.log(error)\n    }\n\n    return\n  }\n\n  const components = /** @type {const} */ ([\n    [Accordion, config.accordion],\n    [Button, config.button],\n    [CharacterCount, config.characterCount],\n    [Checkboxes],\n    [ErrorSummary, config.errorSummary],\n    [ExitThisPage, config.exitThisPage],\n    [FileUpload, config.fileUpload],\n    [Header],\n    [NotificationBanner, config.notificationBanner],\n    [PasswordInput, config.passwordInput],\n    [Radios],\n    [ServiceNavigation],\n    [SkipLink],\n    [Tabs]\n  ])\n\n  components.forEach(([Component, componentConfig]) => {\n    createAll(Component, componentConfig, options)\n  })\n}\n\n/**\n * Create all instances of a specific component on the page\n *\n * Uses the `data-module` attribute to find all elements matching the specified\n * component on the page, creating instances of the component object for each\n * of them.\n *\n * Any component errors will be caught and logged to the console.\n *\n * @template {CompatibleClass} ComponentClass\n * @param {ComponentClass} Component - class of the component to create\n * @param {ComponentConfig<ComponentClass>} [config] - Config supplied to component\n * @param {OnErrorCallback<ComponentClass> | Element | Document | null | CreateAllOptions<ComponentClass>} [scopeOrOptions] - options for createAll including scope of the document to search within and callback function if error throw by component on init\n * @returns {Array<InstanceType<ComponentClass>>} - array of instantiated components\n */\nfunction createAll(Component, config, scopeOrOptions) {\n  let /** @type {NodeListOf<Element> | undefined} */ $elements\n\n  // Extract initialisation options\n  const options = normaliseOptions(scopeOrOptions)\n\n  try {\n    // Skip initialisation when GOV.UK Frontend is not supported\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n\n    // Users can initialise GOV.UK Frontend in certain sections of the page\n    // unless the scope is null (for example, query selector not found)\n    if (options.scope === null) {\n      throw new ElementError({\n        element: options.scope,\n        component: Component,\n        identifier: 'Scope element (`$scope`)'\n      })\n    }\n\n    $elements = options.scope?.querySelectorAll(\n      `[data-module=\"${Component.moduleName}\"]`\n    )\n  } catch (error) {\n    if (options.onError) {\n      options.onError(error, {\n        component: Component,\n        config\n      })\n    } else {\n      console.log(error)\n    }\n\n    return []\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-unsafe-return --\n   * We can't define CompatibleClass as `{new(): CompatibleClass, moduleName: string}`,\n   * as when doing `typeof Accordion` (or any component), TypeScript doesn't seem\n   * to acknowledge the static `moduleName` that's set in our component classes.\n   * This means we have to set the constructor of `CompatibleClass` as `{new(): any}`,\n   * leading to ESLint frowning that we're returning `any[]`.\n   */\n  return Array.from($elements ?? [])\n    .map(($element) => {\n      try {\n        // Only pass config to components that accept it\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return typeof config !== 'undefined'\n          ? new Component($element, config)\n          : new Component($element)\n      } catch (error) {\n        if (options.onError) {\n          options.onError(error, {\n            element: $element,\n            component: Component,\n            config\n          })\n        } else {\n          console.log(error)\n        }\n\n        return null\n      }\n    })\n    .filter(Boolean) // Exclude components that errored\n}\n\nexport { initAll, createAll }\n\n/* eslint-disable jsdoc/valid-types --\n * `{new(...args: any[] ): object}` is not recognised as valid\n * https://github.com/gajus/eslint-plugin-jsdoc/issues/145#issuecomment-1308722878\n * https://github.com/jsdoc-type-pratt-parser/jsdoc-type-pratt-parser/issues/131\n **/\n\n/**\n * @typedef {{new (...args: any[]): any, moduleName: string}} CompatibleClass\n */\n\n/* eslint-enable jsdoc/valid-types */\n\n/**\n * Config for all components via `initAll()`\n *\n * @typedef {object} Config\n * @property {Element | Document | null} [scope] - Scope of the document to search within\n * @property {OnErrorCallback<CompatibleClass>} [onError] - Initialisation error callback\n * @property {AccordionConfig} [accordion] - Accordion config\n * @property {ButtonConfig} [button] - Button config\n * @property {CharacterCountConfig} [characterCount] - Character Count config\n * @property {ErrorSummaryConfig} [errorSummary] - Error Summary config\n * @property {ExitThisPageConfig} [exitThisPage] - Exit This Page config\n * @property {FileUploadConfig} [fileUpload] - File Upload config\n * @property {NotificationBannerConfig} [notificationBanner] - Notification Banner config\n * @property {PasswordInputConfig} [passwordInput] - Password input config\n */\n\n/**\n * Config for individual components\n *\n * @import { AccordionConfig } from './components/accordion/accordion.mjs'\n * @import { ButtonConfig } from './components/button/button.mjs'\n * @import { CharacterCountConfig } from './components/character-count/character-count.mjs'\n * @import { ErrorSummaryConfig } from './components/error-summary/error-summary.mjs'\n * @import { ExitThisPageConfig } from './components/exit-this-page/exit-this-page.mjs'\n * @import { NotificationBannerConfig } from './components/notification-banner/notification-banner.mjs'\n * @import { PasswordInputConfig } from './components/password-input/password-input.mjs'\n * @import { FileUploadConfig } from './components/file-upload/file-upload.mjs'\n */\n\n/**\n * Component config keys, e.g. `accordion` and `characterCount`\n *\n * @typedef {keyof Omit<Config, 'scope' | 'onError'>} ConfigKey\n */\n\n/**\n * @template {CompatibleClass} ComponentClass\n * @typedef {ConstructorParameters<ComponentClass>[1]} ComponentConfig\n */\n\n/**\n * @template {CompatibleClass} ComponentClass\n * @typedef {object} ErrorContext\n * @property {Element} [element] - Element used for component module initialisation\n * @property {ComponentClass} [component] - Class of component\n * @property {Config | ComponentConfig<ComponentClass>} [config] - Config supplied to components\n */\n\n/**\n * @template {CompatibleClass} ComponentClass\n * @callback OnErrorCallback\n * @param {unknown} error - Thrown error\n * @param {ErrorContext<ComponentClass>} context - Object containing the element, component class and configuration\n */\n\n/**\n * @template {CompatibleClass} ComponentClass\n * @typedef {object} CreateAllOptions\n * @property {Element | Document | null} [scope] - scope of the document to search within\n * @property {OnErrorCallback<ComponentClass>} [onError] - callback function if error throw by component on init\n */\n", "export class SiriusHeader extends HTMLElement {\n  connectedCallback() {\n    const prefix =\n      window.location.hostname === \"localhost\" ? \"http://localhost:8080\" : \"\";\n\n    const userRoles = this.getAttribute(\"user-roles\") ?? [];\n    const isFinanceUser = [\n      \"Finance Reporting\",\n      \"Corporate Finance\",\n      \"Finance Manager\",\n    ].some((r) => userRoles.includes(r));\n\n    let navLinks = [\n      {\n        url: `${prefix}/supervision/#/clients/search-for-client`,\n        title: \"Create client\",\n      },\n      {\n        url: `${prefix}/supervision/workflow`,\n        title: \"Workflow\",\n      },\n      {\n        url: \"https://wordpress.sirius.opg.service.justice.gov.uk\",\n        title: \"Guidance\",\n        openNewTab: true,\n      },\n      {\n        url: `${prefix}/supervision/#/finance-hub/reporting`,\n        title: \"Finance\",\n        hide: !isFinanceUser,\n      },\n    ];\n\n    // Override the nav links if <sirius-header-nav> elements are defined\n    // inside the <sirius-header>\n    const navElements = this.querySelectorAll(\"sirius-header-nav\");\n    if (navElements.length > 0) {\n      navLinks = [];\n\n      navElements.forEach((navElement) => {\n        navLinks.push({\n          url: navElement.getAttribute(\"url\"),\n          hide: navElement.getAttribute(\"hide\") === \"true\",\n          title: navElement.textContent,\n        });\n      });\n    }\n\n    this.innerHTML = `  \n            <div class=\"sirius-header\">         \n                <header class=\"govuk-header app-!-embedded-hide\"  role=\"banner\">\n                    <div class=\"govuk-header__container\">\n                         <div class=\"govuk-header__logo\">\n                            <a class=\"govuk-header__link--homepage\">\n                                <svg\n                                        role=\"presentation\"\n                                        focusable=\"false\"\n                                        class=\"moj-header__logotype-crest\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        viewBox=\"0 0 40 40\"\n                                        height=\"40\"\n                                        width=\"40\">\n                                    <path\n                                            fill=\"#ffffff\"\n                                            fill-rule=\"evenodd\"\n                                            d=\"M38.1 16.9c.1 1.8 2.2 1.3 1.9 2.7 0-.9-3-.8-3-2.6 0-.3.1-.7.3-.9-.1-.1-.2-.1-.5-.1-.6 0-1.2.6-1.2 1.3 0 2.2 3 2.6 3 5.1 0 .6-.2 1-.6 1.2.2 0 .7-.1.8-.3-.2 1-1.2 1-1.6.6h-.3c.2.4.4.8.9.7-.9.7-2-.2-1.8-1.2-.2-.3-.4-.7-.6-.9-.1-.2-.2-.1-.2.1 0 .8-.6 1.6-.6 2.1 0 .6.6 1.1.8 1.1s.3-.2.4-.2c.1.1.1.2.1.7 0 .2 0 1 .1 1.7 0-.2.2-.3.3-.4.2-.1.4-.2.7-.1.1 0 .3.1.3.2.1.1.1.2.1.3 0 .2-.2.4-.3.6-.2.1-.3.2-.6.1-.2 0-.3-.1-.4-.2v-.1.7c0 .6-.1.8-.3.9 0-.1-.2-.2-.3-.2-.1 0-.3.1-.3.2 0 .2.3.2.3.6s-.8.8-1.3.8c.1-.2.2-.8.3-1.1-.1.1-.3.3-.4.7-.1.4-.3.4-.6.3.2-.2.6-1.1 1-1.3.4-.3.6-.4.7-1.1.1-.7 0-1.1 0-1.7 0-.8-.3-.7-.6-.7-.6 0-2.6-1.3-2.6-2.7v-.4c-.9 0-1.5.2-1.5 1.1 0 .3 0 .6.2.8.2.1.3.3 0 .4-.3.1-3.1 1.3-3.1 1.3-.3.1-.4 0-.6-.2-.1-.2-.3-.2-.4-.1-.2.1.1.2.1.4s-.1.7-1.3.6l.3-.6c.1-.2.1-.3.1-.3-.1 0-.1.1-.2.3l-.3.4h-.4l1-1c.2-.2.6-.4 1.1-.4.7-.1 2.9-.4 2.9-1.1 0-.8-.9-.8-.9-1.9 0-1 .4-2 3-1.9-.2-.7-.9-1.1-1.6-1.2-1.3-.3-1.7-1.2-1.8-2.1h-1c-.8 0-1.2-.3-1.5-.1-.1.1-.1.2 0 .3.1.2.3.7.6 1 .1 0 .4 0 .4.2s-.1.2-.1.3 0 .2.1.2.1-.1.1-.2c.1-.1.3-.1.7 0 .2.2.6.6.7 1-.3-.1-.8-.3-.9-.3s-.1.1 0 .1.4.2.6.3v.3c-.1-.1-.7-.4-1.1-.6-.3-.1-.6-.2-.8-.7-.2-.4-.8-1.6-1-1.9-.1-.2-.1-.3 0-.4.1-.1.1-.2.2-.3.1-.2.2-.2.4-.2s.8 0 1-.1c0 0 .1 0 .2-.1-.6-.6-1.2-1.4-1.2-1.6-.1-.1-.2-.2-.3-.2s-.2 0-.3.1l-.1.1c0-.1-.1-.1-.1-.2l-.3-.3c.2-.1.3-.3.4-.3.1-.1.2-.2.3-.2h.3c.2 0 .2 0 .3.1.2.2.6.4.8.7 0 0 .1 0 .1.1l.1-.1c.1-.1.2-.1.3-.1s.2.1.3.2.2.3.2.6v.2l.6.6c.1-.7.4-1.4.9-2h-.1v-.1c.1-.3.2-.9.3-1.1v-.3l.8.3.1-.1c.7-.7 2.3-1.1 2.3-2.1 0-.2-.1-.6-.3-.8.1.1.1.3.1.6 0 .2-.4.8-1.1.8-.3 0-.7-.3-.8-.3s-.2.1-.3.1c0 .4-.2.8-.3.8.1-.2 0-.6 0-.6-.1 0-.1.1-.1.4 0 .3-.2.7-.7.7.1-.1.2-.6.1-.7-.1-.1-.2.1-.3.1s-.2-.1-.2-.2-.2 0-.2-.1.2-.3.4-.3c.2-.1.6-.2.6-.4-.1-.2-.9.1-1.1.3-.4.3-.2-.1-.3-.2-.2-.4 0-.4.2-.7.2-.2.8-.7 1.5-1 0-.2.1-.3.3-.4.2-.1.6-.2.8-.3l-3.8-4c-.1-.1-.1-.1 0-.2 0 0 .1 0 .2.1l4 3.9c.3-.6.4-.9.3-1.3.4.2.9.7 1 1.2 1.2 0 1.6.8 1.9.4 0 .2-.1.3-.6.4 1.5.3 1 1.3 1.8 1.4-.1.1-.3.2-.6.1.9 1.3 0 2.1.7 2.8-.2.1-.7-.1-.9-.6.2 1.1-.1 1.7.1 2.1-.3.1-.6-.2-.7-.6-.1.2-.1.4-.2.7l.3.1-.1.1c-.6.6-.8.9-.9 1l-.1.1-.1-.1c-.3.4-.7.8-.7 1.2 0 .4.6 1.3 1.2 2.1v-.2c0-.1.1-.3.2-.4.1-.1.2-.1.4-.1s.4.1.6.3c.1.2.2.3.2.6 0 .1-.1.3-.2.4-.1.1-.2.1-.4.1-.1 0-.3-.1-.4-.1.4.6.9 1.2 1.1 1.7.4.9.9 1.4 1.3 1.4.6 0 1.1-.4 1.1-1.1 0-2.3-3-2.6-3-5.2 0-1.2 1-1.8 1.7-1.8.4 0 .7.1.9.3h.2c1.5 0 .6 1.9 1.7 2-.3.5-1 .2-1.3-.7zM30.3 10c.3-.2.8-.3 1.2-.3-.3-.1-.6-.3-.8-.3-.4-.1-.3.4-.4.6zm-2.7 5.5c0-.1 0-.3-.1-.3 0 0-.1-.1-.2-.1s-.1 0-.2.1-.1.2-.1.3c0 .2.1.4.3.4.1 0 .1 0 .2-.1 0 0 .1-.1.1-.3zm8.7 12.6v.2c.1.2.4.2.7 0 .1-.1.2-.2.2-.3v-.2c-.1-.1-.1-.1-.2-.1s-.3 0-.4.1c-.2.1-.3.2-.3.3zm-1.9-8.3c0 .1.1.3.2.4.1.1.2.2.4.2.1 0 .1 0 .2-.1s.1-.1.1-.2-.1-.3-.2-.4c-.1-.1-.2-.2-.4-.2-.1 0-.1 0-.2.1s-.1.1-.1.2zm-.8-3.2c.3-.3.9-1 .9-1l-.3-.3v.6c-.1-.1-.2-.2-.2-.3l-.2.3c.1 0 .3 0 .3.1-.2.2-.6.1-.7 0-.2-.2-.3-.3-.3-.4.1-.1.3-.1.4.1.2 0 .2-.2.2-.3-.1-.1-.2-.1-.3-.1.3-.2.6-.4.4-.9-.4.1-.6.3-.7.7 0-.1-.1-.3-.2-.3s-.3.1-.3.3c.2-.1.4.1.3.3-.1.1-.3.1-.6 0-.3-.4-.3-.6-.1-.9.1.1.1.2.1.4l.3-.6c-.1 0-.2.1-.3 0 .1-.1.2-.2.4-.3l-.7-.2c.1.2 0 .4 0 .6-.1-.1-.2-.2-.2-.3l-.3.6c.1-.1.3-.1.4-.1-.1.2-.4.3-.7.2-.2-.1-.3-.3-.3-.4.1-.1.3-.1.4.1.2-.1.2-.3.1-.4-.1-.1-.2-.1-.4 0 .3-.3.4-.6.3-1-.3.1-.6.4-.6.8 0-.1-.1-.2-.2-.2s-.3.1-.2.3c.2-.1.4.1.3.3-.1.1-.2.1-.6 0-.2-.1-.4-.2-.3-.6.1 0 .2.2.3.2l.1-.4h-.3c.1-.1.3-.2.4-.3l-.4-.2s-.2.9-.4 1.3l4.2 2.3zm0 7.9c.1-.2.1-.6 0-.7-.2-.1-.4 0-.7.2-.1.2-.1.6 0 .7.1.1.5 0 .7-.2zm1.1-1.9c.1-.2.1-.6 0-.7-.2-.1-.4 0-.7.2-.1.2-.1.6 0 .7.3.1.6 0 .7-.2zM27.4 18c.2-.1.4 0 .7 0 .2.1.3.3.4.4v.4l-.3.3c-.2.1-.4 0-.7 0-.5-.1-.6-.4-.5-.8.1-.2.2-.3.4-.3zm.2 1c.1.1.3.1.4 0 .1 0 .1-.1.2-.1v-.2c0-.1-.1-.2-.3-.3-.1-.1-.3-.1-.4 0-.1 0-.1.1-.2.1-.1.1.1.3.3.5zm4.8 7.2c.1-.1.2-.2.4-.2s.3.1.4.2c.1.1.2.3.2.6 0 .2-.1.4-.2.6-.1.1-.2.2-.4.2-.1 0-.3-.1-.4-.2-.1-.1-.2-.3-.2-.6 0-.2 0-.5.2-.6zm.3 1.1c.1 0 .2 0 .2-.1.1-.1.1-.2.2-.4 0-.3-.1-.6-.3-.6-.1 0-.2 0-.2.1-.1.1-.1.2-.2.4 0 .2 0 .3.1.4.1.1.1.2.2.2zm-4.8-13.8c.2-.1.3-.2.6-.2.1 0 .2.1.3.2s.1.2.1.4-.1.3-.3.6c-.3.2-.8.2-.9 0-.1-.3 0-.6.2-1zm0 .7v.2c.1.1.3.1.6 0 .1-.1.2-.2.2-.3v-.2c0-.1-.1-.1-.2-.1s-.2 0-.3.1c-.2 0-.3.2-.3.3zm5.7 13.7c.2-.1.4-.2.7-.1.4.1.8.4.7.8 0 .2-.1.3-.3.4-.1.1-.3.1-.6.1s-.3-.1-.6-.2c-.1-.1-.2-.3-.1-.6-.1-.2 0-.3.2-.4zm.4.9c.3 0 .6-.1.6-.3 0-.2-.2-.3-.4-.4-.2 0-.3 0-.4.1 0 0-.1.1-.1.2-.2.1 0 .3.3.4zm3.3-1.9c0-.6.4-1 1-1s1 .4 1 1-.4 1-1 1c-.5 0-1-.4-1-1zm.3 0c0 .4.3.8.8.8s.8-.3.8-.8c0-.4-.3-.8-.8-.8-.4.1-.8.5-.8.8zm-23.3-5.8c-.1.3.1.3.1.7 0 .3-.2.4-.6.6.2-.4 0-.7-.3-.8.1.8-.6.9-.8.8.2 0 .3-.4.2-.8-.1.2-.4.4-.7.4s-.4-.2-.6-.4c.3.2.6 0 .6-.2 0-.1-.3-.2-.3-.4 0-.6.6-.3.6-.8 0-.2-.1-.3-.2-.3s-.3.1-.3.3c-.3-.2 0-.9-.1-1.2 0 .7-.4.6-.6.9-.2-.2 0-.7-.2-1.2-.1.6-.3.4-.3.9-.6-.3-1.7-.2-2 .2 1 .8 2.2 1.2 2.2 2.4 0 .9-1.5 1.3-1.5 1.9 0 .6 1.5 2 2.2 2 .2 0 .3-.3.6-.3h.6c.2 0 .3.2.3.3.3 0 .8.6.3 1-.1-.2-.3-.6-.8-.3.2.4 0 .8-.4 1 .1-.2.2-.6-.1-.6s0 .2-.7.2c-.6 0-.6 0-.8-.3-.2-.3-.4-.4-.6-.4s-.2.3 0 .6c-1.2 0-.7-1.2-1.3-1.6v.9c-.4-.5-.8-.9-.8-1.3-.1-.3 0-.6-.3-.8-.1 0-.2-.1-.2-.3 0-.1.1-.1.3-.2.2-.1.6-.3.6-1 0-.4-.1-1.1-.9-1.7.1 1 0 1.9-.4 2.7-.6 1-1.7 1.7-2.2 1.9-.6.2-1.3.4-1.3 1.2 0 1.4.7 2.2 1.2 2.2.4 0 .3-.4.9-.4.2 0 .6.1.6.3.3-.1.7.1.7.4 0 .3-.1.4-.3.6.2-.4-.3-.4-.4-.4-.1.1 0 .2 0 .4s-.1.4-.4.6c.1-.1.1-.3-.2-.3-.2 0-.3.4-.7.4-.6 0-.7-.2-1.2-.1-.3.1-.3.3-.2.3-.7 0-.6-.8-.4-.9.1-.1.2-.2 0-.4-.2-.1-.6 0-.7.3-.6-1.1.2-1 0-2.2-.1.6-.4.9-.7 1 .1-.2-.1-.8-.1-1.2 0-.9.6-1.2.6-1.4 0-.2-.2-.4 0-.6.1-.1.3.1.6.1.7 0 1.2-.9 1.3-2 .1-1.2.7-2.1 1.1-3 0-.1 0-.3.1-.4-.6.7-1 1.6-1.7 2.1.1.8-1.5 1.7-2.3 1 .3 0 .8-.1 1-.6-.1 0-.2 0-.3-.1-.6.3-1.3-.1-1.3-.7.2.2.4.3.8.2.2-.1.1-.4.1-.8 0-2.3 3.6-3.9 3.6-5.8 0-.6-.3-.9-.8-.9-.2 0-.4.1-.7.2.2.1.3.3.3.6 0 2.1-3.5 1.9-3.7 3.3-.1-1.8 2-1.4 2.1-2.9-.4.7-1.2 1.1-1.7.9 1.1 0 .8-2.2 2-2.2.1 0 .2 0 .4.1.3-.3.8-.4 1.1-.4.6 0 1.3.3 1.3 1.3 0 2.2-3.6 3.7-3.6 5.8 0 .7.4 1 1 1 1.2 0 2.1-2.2 3.5-4.1.9-1.2 1.5-3.7 2-4.9-.7.4-.8 1.8-1.6 1.9.4-.3.1-1.4.4-2.3.1-.3.1-.6.1-.9-.4.6-.3 2.2-1.1 2.4.3-.3 0-.9 0-1.4 0-1 .6-1.1.6-2.1-.4.2-.3 1.4-1.2 1.4.7-.7 0-1.3.8-2.1-.4-.2-.8-.6-.8-.9.3-.2.7-.3 1-.3-.3-.2-.2-.4 0-.7.1.2.2.3.3.3.3-.1.8-.6 1.5-.8.5-.2 1.3-.5 1.6-.5.1 0 .1-.2.1-.3.2 0 .6 0 .7.3.2-.2.6-.3.9-.3.2.4.2.8 0 1.2.4 0 .7.4 1.1.3-.3.4-.8.3-1.2.2 1.2.3 1.5 1.6 2.1 1.7-1.2.7-1.7-.3-2.3-.3 1.7.9 1.7 1.9 2.1 1.9-.6.4-.9-.1-1.6-.3 1.3.9 1.3 1.6 1.2 2.1.3.2.2.6.2 1 .2-.1.6-.2.8-.2-.1.1-.2.2-.2.3-.7.8-1.1 1.4-1.5 2.4-.3-.2-.6-.6-.8-.7-.2-.2-.6-.2-.7-.2.4.4 1.8 2 2.2 2.4.4.4.3.8.4 1.2.4.4.8.7.7.9zM7.5 10.2c.4 0 .6-.6.4-.9-.4.2-1 .3-1.3.4.5.2.5.5.9.5zm2.3 2.5c.4-.2.4-.7.3-.9-.1-.2-.2-.4-.3-.4-.2 0-.4-.1-.4-.3-.1-.2.2-.3.4-.6-.2-.1-.4-.2-.2-.3.2-.1.4.1.4 0 .1-.1-.1-.2-.2-.3s-.2-.1-.3 0l-1.2.4c-.1 0-.3 0-.3.1s-.1.3 0 .3.1-.3.3-.3.2.1 0 .4c.4 0 .6-.1.7.2.1.2 0 .3-.1.6-.1.1 0 .3 0 .6.1.2.5.7.9.5zm.1-3.5c.2-.2 0-.4.3-.9-.3.2-.8.5-1.3.7.3.3.7.5 1 .2zm-.7-3.1c.1.1.1.2.1.3-.1 0-.1-.1-.3-.2v.6c.1-.1.2-.1.2-.2 0 .3-.1.6-.3.6l-.3-.3c0-.1.1-.2.2-.1 0-.3-.2-.3-.3-.2.1-.4.1-.6-.2-.7-.3.3-.1.4.1.6-.2-.1-.5.1-.2.4 0-.2.2-.1.2 0s-.1.3-.4.4c-.3.1-.4-.1-.5-.3.1 0 .2 0 .4.1l.1-.5c-.1.3-.2.3-.3.4 0-.1.1-.4.1-.4l-.7.2s.3.1.4.2c0 0-.1.1-.4 0l.2.4c0-.2.1-.3.2-.3.1.2.1.4-.2.6-.2.2-.4.1-.4 0-.1-.1 0-.3.2-.2 0-.3-.3-.3-.3-.1 0-.3-.1-.6-.4-.6-.1.3 0 .6.3.7-.2 0-.3.1-.1.3 0-.2.1-.2.2-.1s0 .2-.1.3c-.1.1-.3.1-.6-.2h.2L6 7.3v.3c-.1-.1-.1-.1-.1-.3l-.2.2c.2.2.6.5.9.9.3-.2 1-.6 1.5-.7.4-.2 1.1-.4 1.6-.4-.1-.6 0-1 0-1.2h-.5zm-2.7-.7l.2.4.1-.3v.6c0 .1.1.3.3.3.1 0 .3-.1.3-.3 0-.1-.1-.2-.1-.2 0-.1-.2-.3-.3-.4h.4v-.4l-.4.2v-.4l-.4.1.2.3-.3.1zm1.4.4c.1-.2.1-.3 0-.4-.1-.1-.2-.1-.3 0-.1.1-.1.2 0 .3.1.1.2.1.3.1zm.6-.5c.1-.1.1-.2 0-.3s-.2-.1-.3 0-.2.2 0 .3c.1.1.2.1.3 0zm.5.1c.1-.1.1-.2 0-.3s-.2-.1-.3 0c-.1.1-.1.2 0 .3.1.1.3.1.3 0zm.2.5c.1.1.2.1.3 0s.1-.2 0-.3h-.3c-.2 0-.2.3 0 .3zm-2.7.4c.1 0 .2-.1.2-.2s-.1-.2-.2-.2-.2.1-.2.2.1.2.2.2zm-.7.1c.1 0 .2-.1.2-.2S6 6 5.8 6c-.1 0-.2.1-.2.2s.1.2.2.2zm-.1.2c0-.1-.1-.2-.2-.2s-.2.1-.2.2.1.2.2.2.2 0 .2-.2zm.1.7c0-.1-.1-.2-.2-.2s-.2.1-.2.2.1.2.2.2.2-.1.2-.2zm15.7 16.9c-.1 0-.1.1-.1.1 0 .1 1-.1 1 .1 0 .1-.2.2-.6.2h-.1c0 .1.1.1.1.1v.1s0 .1 0 0h-.1s-.1 0 0 .1h-.1v-.1h-.1v-.1h.1l.1.1.1-.1-.1-.1h-.3c.1.1.1.2.1.3v.1h-.1s0 .1-.1.1H21c0-.1.1 0 .1-.1 0 0 0-.1.1-.1s.1.1.2.1h.1-.1v-.1c-.1 0-.1.1-.2.1 0 .1-.1.2-.1.2l-.1.1c-.1 0-.1 0-.1.1v-.1h-.1l-.1.1v-.1s0 .1-.1.1c0 0-.1 0-.1-.1v.2s-.1 0-.1-.1v-.1c-.1.1-.1 0-.1 0s0-.1.1-.1h.1c-.1 0-.1 0-.1-.1h.1v.1h.4v-.1c-.1 0-.1 0-.1-.1-.4-.2-.4-.3-.4-.3-.1 0-.2 0-.1-.1 0 .1.1.1.1 0 0 0-.1 0 0-.1v-.1h.1-.1.1l.1.1h.1v.1c0 .1 0 .1.1.1s.1.2.2.2v-.2s0-.1.1-.1l.1-.1v-.1h.2s.1 0 .1.1h.1s0 .1-.1.1c0 0 0 .1-.1.2.4-.1.8 0 .9 0 .2 0 .4-.1.4-.1 0-.1-1 .1-1-.1-.4-.4-.3-.4-.2-.4 0 0 0-.1 0 0 .2-.2.6 0 .7-.1 0 0-.2.1-.3.1.3.1.4-.1.8 0-.3-.1-.7.3-1.2 0 0 .1 0 0 0 0zm-.7 0c0 .1 0 .1 0 0 .1.1.1.1 0 0 .1.1.1.1 0 0zm0 0s-.1 0 0 0c-.1 0-.1 0 0 0-.1.1 0 0 0 0zm-.1.3s0 .1 0 0c0 .1.1.1 0 0 .1 0 .1 0 0 0 .1 0 .1 0 0 0 .1-.1.1-.1.1 0h-.1c0-.2 0-.2 0 0 0-.2.1-.2 0 0zm1.1-1.6c-.1 0-.3 0-.3.1s.7.1.9.1c.3 0 .3.1.3.1 0 .1-.3.1-.6.1h.3c.1 0 0 0 0 0h.1v.2h-.1c0 .1-.1 0-.1.1v.1h-.1v-.1s0 .1-.1.1 0-.1.1-.1H22s0-.1.1-.1h.1v-.1h-.5v.1s.1.1 0 .1h-.1s0 .1-.1.1h-.3c0-.1.1 0 .1-.1h-.1s0-.1.1-.1.1.1.2.1h.1-.1c-.1 0 0-.1 0-.2h-.1c-.4-.1-.2.1-.4.1 0 0 0 .1-.1.1 0 .1-.1.2-.2.1-.1 0-.2 0-.2.1v-.1h-.1c0 .1-.1.1-.1.1v-.2s0 .1-.1.1c0 0-.1 0-.1-.1v.2s-.1 0-.1-.1v-.1c-.1.1-.1 0-.1 0s0-.1.1-.1h.1c-.1 0-.1-.1-.1-.1h.1v.1c0 .1.2 0 .2 0h.2v-.1h-.1c-.1-.1-.1 0-.1 0-.1 0-.2 0-.1-.1 0 .1.1.1.1 0-.1 0-.1 0 0-.1v-.1s0-.1.1 0h-.1.1l.1.1h.1v.1c0 .1 0 .1.1.1h.1v-.1s0-.1.1-.1l.1-.1V23h.2s.1 0 .1.1h.1s0 .1-.1.1c0 0 0 .1-.1.2.3-.1 1 0 1.2 0 .1 0 .4 0 .4-.1 0 0 0-.1-.2-.1s-1 .2-1-.1c-.2-.3.1-.3.2-.2.1-.1.1-.1 0 0 .2-.2.6 0 .7-.1 0 0-.2.1-.3.1.3.1.4-.1.8 0-.3-.1-.8.1-1.2 0 .1 0 .1 0 0 0zm-.9 0s-.1-.1 0 0c-.1 0-.1 0 0 0zm.1.1s-.1 0 0 0l-.1-.1c-.1.1 0 .1.1.1h-.1v.1l.1-.1c-.1.1-.1.1 0 0-.1.1-.1.1 0 0-.1 0-.1 0 0 0-.1 0-.1 0 0 0-.1 0-.1 0 0 0zm0 0c0-.1 0-.1 0 0 0-.1 0 0 0 0zm2.2-.9s0 .1 0 0c0 .1 0 .1 0 0 0 .1 0 .1 0 0v.1c0 .1-.1 0-.1.1 0 0 .1 0 0 .1H23v-.1s0 .1-.1.1v-.1h-.2s0-.1.1-.1h.1v-.1h-.2c-.1 0-.1.1-.2.1h-.2v.1s.1.1 0 .1h-.1s0 .1-.1.1h-.3c0-.1.1 0 .1-.1h-.1s0-.1.1-.1.1.1.2.1h.1-.2c-.1 0-.1-.1 0-.2 0 0 0 .1-.1.1-.6-.1-.3.2-.8.1 0 0 0 .1-.1.1h-.1l-.1.1c-.1 0-.1 0-.2.1v-.1h-.1c0 .1-.1.1-.1.1v-.2s0 .1-.1.1c0 0-.1 0-.1-.1v.2s-.1 0-.1-.1v-.1c-.1.1-.1 0-.1 0s0-.1.1-.1h.1c-.1 0-.1-.1-.1-.1h.1v.1c0 .1.2 0 .2 0h.2s-.1-.1 0-.1v-.1h-.1l-.2-.2v-.1c-.1 0-.2 0-.1-.1 0 .1.1.1.1 0-.1 0-.1-.1 0-.1v-.1s0-.1.1 0c0 0-.1 0-.1-.1h.1s0 .1.1.1h.1v.1c0 .1 0 .1.1.1s.1.1.2.1v-.1s0-.1.1-.1l.1-.1v-.1h.3s.1 0 .1.1h.1s0 .1-.1.1c0 0 0 .1-.1.2.4-.1 1.5 0 1.7 0 .1 0 .4 0 .4-.1 0 0 0-.1-.3-.1-.2 0-1.3.2-1.3-.1 0-.2.3-.1.7-.1.1-.1.6 0 .7 0 0 0-.2.1-.3.1.3.1.4-.1.8 0-.2-.1-.7.2-1.1.1h-.1c-.2 0-.6 0-.6.1 0 .2.9.1 1.2.1.3 0 .4.1.4.1 0 .1-.3.1-.4.1h.3c-.4-.1-.4-.1-.3 0-.1 0 0-.1 0 0zm-2.2-.5s0 .1 0 0c.1.1.1.1.1 0H21zm-.1 0s0-.2 0 0c0 0-.1 0 0 0zm-.1.2c.1.1.1 0 0 0 .1 0 .1 0 0 0 .1 0 .1-.1 0 0l.1-.1h-.1c.1 0 .1 0 0 .1.1-.1.1-.1 0 0 .1-.1 0 0 0 0zm-1.9-2c0 .1-.3.1-.4.1h.5v.2c0 .1-.1 0-.1.1 0 0 .1 0 0 .1h-.1v-.1.1-.1h-.2s0-.1.1-.1h.1V20h-.2c-.1 0-.1.1-.2.1h-.2v.1s.1.1 0 .1H18s0 .1-.1.1h-.3c0-.1.1 0 .1-.1h-.1s0-.1.1-.1.1.1.2.1h.1-.1c-.1 0-.1-.1 0-.1h-.1c-.6-.1-.3.2-.8.1 0 0 0 .1-.1.1l-.1.1h-.1c-.1 0-.2 0-.2.1v-.2h-.1c0 .1-.1.1-.1.1v-.2s0 .1-.1.1c0 0-.1 0-.1-.1v.2s-.1 0-.1-.1v-.1c-.1.1-.1 0-.1 0s0-.1.1-.1h.1c-.1 0-.1-.1-.1-.1v.1c0 .1.2 0 .2 0h.2v-.1h-.1l-.2-.2v-.1c-.1 0-.2 0-.1-.1 0 .1.1.1.1 0-.1 0-.1-.1 0-.1v-.1s0-.1.1 0c0 0-.1 0-.1-.1h.1s0 .1.1.1h.1v.1c0 .1 0 .1.1.1s.1.1.1.1v-.1s0-.1.1-.1l.1-.1v-.1h.3s.1 0 .1.1h.1s0 .1-.1.1c0 .1 0 .1-.1.2.5-.1 1.5 0 1.8 0-.4.1-.1 0 0 0-.1-.1-.1-.1-.4-.1-.2 0-1.3.2-1.3-.1 0-.2.3-.1.7-.1.1-.1.6 0 .7 0 0 0-.2.1-.3.1.3.1.6-.1.8 0-.3-.1-.7.2-1.1.1h-.1c-.2 0-.6 0-.6.1 0 .2.9.1 1.2.1.3-.3.4-.2.4-.1zm-2.3-.2c.1.1.1.1.1 0h-.1zm-.1-.2s-.1 0 0 0c-.1 0-.1 0 0 0 0 .2 0 0 0 0zm-.1.3c0 .1 0 .1 0 0 0 .1.1.1 0 0 .1.1.1 0 0 0 .1 0 .1 0 0 0l.1-.1h-.1c.1 0 .1 0 0 .1.1 0 .1 0 0 0 .1 0 0 0 0 0zm2.6-1.4c0 .1-.3.2-.6.2h.6v.2h-.1c0 .1-.1 0-.1.1 0 0 .1 0 0 .1h-.1v-.1.2-.1h-.2s0-.1.1-.1h.1v-.1h-.2c-.1 0-.1.1-.2.1h-.2v.1c.1 0 .1.1 0 .1H18s0 .1-.1.1h-.1.1-.2c0-.1.1 0 .1-.1h-.1s0-.1.1-.1.1.2.2.1h.1-.1c-.1 0-.1-.1 0-.2h-.1c-.4-.1-.2.2-.6.2h-.1c0 .1-.2.2-.2.2-.1.1-.1 0-.2.1v-.2h-.1c0 .1-.1.1-.1.1V19s0 .1-.1.1c0 0-.1 0-.1-.1v.2s-.1 0-.1-.1V19c-.2 0-.2-.1-.2-.1s0-.1.1-.1h.1c-.1 0-.1-.1-.1-.1H16v.1c0 .1.2 0 .2 0h.2v-.1h-.1c-.1 0-.1-.1-.1-.1v-.1c-.1 0-.2 0-.1-.1 0 .1.1.1.1 0-.1 0-.1-.1 0-.1v-.1s0-.1.1 0c0 0-.1 0-.1-.1h.1s0 .1.1.1V18s.1 0 .1.1v.1c0 .1 0 .1.1.1s.1.1.1.1h.1v-.1s0-.1.1-.1l.1-.1V18h.3s.1 0 .1.1v.1h.1s0 .1-.1.1c0 0 0 .1-.1.2.4-.1 1.1 0 1.3 0 0-.1.3-.1.4-.2-.1-.1-.1-.1-.4-.1-.2 0-1.1.2-1.1-.1 0-.1.2-.1.4-.1.2-.1.4 0 .6-.1 0 0-.1.1-.2.1.3.1.6-.1.9.1-.2-.1-.8.1-1.1 0H18c-.2 0-.3 0-.3.1 0 .2.7.1 1 .1.2-.1.3-.1.3 0zm-2.5.3c-.1 0-.1 0 0 0zm.5-.5c.1.1.1.1.1 0H17zm-.1-.1s-.2 0 0 0c0 .1 0 .1 0 0zm-.2.3c.2.1.2 0 0 0 .2 0 .2 0 0 0 .2-.1.2-.1 0 0l.1-.1h-.1c.2 0 .2 0 0 .1.2-.1.2-.1 0 0 .2-.1 0-.1 0 0zm1.8-1.2c.1 0 .2.1.3.1h.2v.2c0 .1-.1 0-.1.1 0 0 .1 0 0 .1h-.1v-.2h-.2s0-.1.1-.1h.1v-.1h-.4v.2h-.1v.1h-.4c0-.1.1 0 .1-.1h-.1s0-.1.1-.1.1.1.2.1h.1-.1v-.2h-.1c-.3 0-.1.1-.2.1 0 0-.1.1-.2.1v-.1h-.1l-.1.1c-.1 0-.1 0-.1.1v-.1h-.1l-.1.1v-.1s0 .1-.1.1c0 0-.1 0-.1-.1v.2s-.1 0-.1-.1v-.1c-.1.1-.1 0-.1 0s0-.1.1-.1h.1c-.1 0-.1 0-.1-.1h.1v.1h.3s.1 0 .2-.1l-.1-.1c-.1 0-.2 0-.1-.1 0 .1.1.1.1 0-.1 0-.1 0 0-.1v-.1h.1-.1.1v.1h.1v.2l.1.1V17s0-.1.1-.1l.1-.1v-.1h.4s0 .1-.1.1c0 0-.1.1-.1.2.1-.1.2 0 .4.1.3-.1.5-.1.5-.2 0-.2-.9 0-.9-.3 0 0 0-.1.1-.1v-.1c.1-.1.2-.1.3-.2 0 0 0 .1-.1.2.2 0 .2-.3.7-.2-.3.1-.3.3-.8.4l-.1.1c0 .2.9 0 .9.3-.1 0-.2.1-.6.1zm-.7-.4c0 .1 0 .1 0 0 .1.1.1.1 0 0 .1.1 0 0 0 0zm0 0c-.2 0-.2 0 0 0-.2 0-.2 0 0 0-.2 0-.2 0 0 0zm-.2.2c-.1 0-.1 0 0 0 0 .1 0 0 0 0 .1-.1.1-.1.1 0h-.1c0-.1 0-.1 0 0 0-.1 0-.1 0 0zm1.3 5.1c.1 0 .1 0 .1.1s-.1.1-.2.1l-.1 2.4h.1v.2c0 .1-.1.1-.2.1 0 .3-.2.4-.4.4-.1 0-.3-.1-.3-.3 0-.1.1-.2.2-.2s.1 0 .1.1-.2 0-.2.1 0 .1.1.1.2-.1.2-.2c0-.2-.2-.2-.4-.2-1.3-.4-2.1-1.8-2.1-2.8h-.1l.1-.2-.1.1c-.1 0-.2-.1-.2-.2s.1-.2.2-.2.2.1.2.2l.1-.2c.2.1.6.2.9.2.7 0 1.2-.3 1.5-.3.2.1.4.4.5.7zm-2.6.2c-.1 1.2.8 2.1 1.7 2.4l-1.7-2.4zm1.8 2.3c0-.1 0-.3.1-.4l-1.3-1.8h-.3l1.5 2.2zm.1-.8c0-.1 0-.3.1-.4l-.8-1.1c-.1 0-.2.1-.3.1l1 1.4zm.2-1.7c0-.2 0-.3-.1-.3s-.4.1-.7.2l.7 1c0-.2.1-.4.1-.7v-.1c-.1 0-.1-.1-.1-.1h.1zm4.3-2.6c.1 0 .1-.1.1-.1h-.1s.1 0 0-.1c0-.1-.1-.1-.1 0s-.4 0-.4-.3l.1.1h.1c.1 0 .1-.1.1-.1 0-.1-.1-.2-.3-.3-.1 0-.1-.1-.1-.1 0-.1 0-.2-.1-.4v-.2c-.1.1-.1.3.1.6.1.1.4.3.4.4 0 0 0 .1-.1.1h-.1s-.1 0-.1-.1c-.1-.1-.2-.3-.3-.4-.1-.2-.1-.3-.1-.6.1-.1-.1-.4-.1-.6v-.1h-.1s0-.1-.1-.1-.1 0-.1-.1c0 0 0 .1-.1.1h-.4c-.1 0-.1 0 0 .1v.2-.1h.1v.1h-.1v.1h.3c0 .1-.2.1-.2.3l-.1-.1-.1-.1-.1-.1c-.1 0-.1-.1-.1-.1v-.1l-.1-.1v.2s0-.1-.1-.1c0 0 0-.1-.1 0 0 0 0 .1.1.1h-.1v.2h-.1c-.1.1 0 .2.1.1v.3c0 .1.1.2.3.3l-.2.2s-.1.1-.2.1l-.1-.1h-.2.2-.1s-.1.1 0 .1v-.1s.1.1.1 0v.1s.1.1.1 0l-.1-.1v-.1s0 .1.1 0v-.1h.2s0-.1.1-.1h.1s0-.1.1-.1c0 .3.3.2.4.4-.1 0-.2-.1-.3-.1s-.2.1-.2.2.1.2.1.3h-.2c-.1 0-.1-.1-.2-.1 0 0-.1 0-.1.1h.1s-.1 0-.1.1c0 0 0 .1.1 0 0 0 0 .1.1 0h.1s0-.1.1 0h.2v-.1c0-.1-.1-.1-.1-.1 0-.1.1-.2.2-.2 0 .1.1.3.3.4.1 0 .2-.1.2-.1v.1h-.1s-.1 0-.1.1h.1s.1.1.1 0c0 0-.1.1 0 .1s0-.1.1-.1v.1h.1v-.1s.1 0 .1-.1c1 .6 1 .6 1 .4 0 .2 0 .2 0 0 0 .2 0 0 0 0zm.7.6c.1 0 .2.1.2.2l-.1.1s.1.1.1.2c-.1 0-.1 0-.2-.1 0 .1 0 .1-.1.1s-.2 0-.2-.1c0 .1.2 0 .1 0h-1.5c0 .1 0 .2-.1.3-.1-.1-.1-.2-.1-.3h-1.3c0 .1.1.1.1 0 0 .1-.1.2-.2.2H20s-.1.1-.2.1c0-.1 0-.1.1-.2-.1 0-.1 0-.1-.1s0-.2.2-.2c-.1 0 0 .2 0 .1v-1.9c-.1 0-.2 0-.3-.1.1-.1.2-.1.3-.1v-1.8c-.1 0-.1.1 0 .1-.1 0-.2-.1-.1-.2l.1-.1s-.1-.1-.1-.2c.1 0 .1 0 .2.1 0-.1 0-.1.1-.1s.2 0 .2.2c0-.1-.1-.1-.1 0 .3.1.8.2 1.1.4.3.2.7.6 1 .9l.1.1c0-.1.1-.1.3-.1-.2.3-.3.3-.3.3.4.7.8 1.4.9 2.3V20zm-1.3-2.3c-.2-.3-.6-.6-.9-.8-.2-.2-.6-.3-.9-.4v.2c-.1 0-.1 0-.1-.1v1.2c.1 0 .1 0 .1.1v.1c.1 0 .1 0 .2.1-.1.1-.1.1-.2.1.1 0 .1.1 0 .1l-.1.1V20s.1-.1.2-.1c0 .1 0 .1-.1.2h1c0-.1 0-.1.1-.1h.1c0-.1 0-.1.1-.2.1.1.1.1.1.2 0-.1.1-.1.1 0l.1.1H23s-.1-.1-.1-.2h.1c-.1-.7-.3-1.2-.7-1.8h-.1s-.1-.1 0-.1c0 0-.1.1-.2 0 0-.1 0-.1.1-.2v-.1zm4.2 2.7v.4c0 1-.2 2.1-.6 3-.3.9-.9 1.8-1.5 2.4-.3.3-.7.7-1 .9-.1.1-.4.2-2-.2-.2 0-.3-.1-.6-.1 0-.2 0-.3.1-.4.1-.2.1-.3.2-.4.1 0 .1-.1.2-.1.6-.2 1-.7 1.5-1.2.4-.6.8-1.1 1-1.8.2-.7.3-1.3.3-2h-4.5v5c.3 0 1 .1 1 .1-.1.2-.2.4-.2.8-.6-.1-1-.3-1.6-.6.4-.2.6-.2.8-.2v-4.9h-4.7c0-.2-.1-.6-.2-.7-.2-.3-.3-.4-.3-.9 0-.2-.1-.6-.3-.8-.1-.1-.7-.8-.8-.9.3-.9.9-1.8 1.5-2.4.4-.4.9-.9 1.5-1.2-.2-.2-.6-.4-.6-.9 0-.2.1-.4.2-.6-.3-.9-.8-2-1.2-2.6l.9-.4c-.2.3-.2.8-.2 1 .2-.2.4-.4.6-.7 0 .3.2.8.3 1-.2 0-.4-.1-.8 0 .1.2.6.6 1.1.3.3-.1.7-.2.7-.6 0-.1-.1-.3-.3-.3s-.2.3-.1.4c-.2-.1-.6-.9-.1-1 .3-.1.7.3.8.7 0-.2.2-.7.6-.7.4 0 .3.8.1 1 0-.2-.2-.4-.3-.4s-.2.1-.2.3c0 .2.3.4.8.4.3 0 1.1-.1 1.1-.9-.2 0-.7.2-.8.4V9.4c.2.3.6.6.8.6-.1-.3-.3-.7-.7-.9h1.7c-.3.2-.6.6-.7.9.2 0 .6-.2.8-.4v1.2c-.2-.2-.6-.4-.8-.4.1.8.8.9 1.1.9.4 0 .8-.1.8-.4 0-.2-.1-.3-.2-.3s-.2.1-.3.4c0-.2-.2-1.1.2-1.1.3 0 .4.3.6.8.1-.3.4-.8.8-.7.3.1.1.9-.1 1 .1-.1 0-.4-.1-.4-.2 0-.3.1-.3.3 0 .2.3.4.7.6.6.1 1-.2 1.1-.4-.2-.1-.4-.1-.8.1.1-.2.3-.8.3-1 .1.3.2.6.6.7 0-.2 0-.7-.2-1l.9.4c-.4.4-1 1.6-1.2 2.6.2.1.3.3.3.7 0 .4-.2.7-.6.9.6.3 1 .8 1.5 1.2.3.3.6.8.9 1.2 0 0-.1.1-.1.2-.1.1-.2.2-.2.3-.1.1-.1.2-.1.3 0 .1 0 .2.1.4l1 2c-.6 0-.4.2-.2.3zm-7-5c-.6 0-1.2.1-1.8.4-.6.2-1.1.7-1.5 1.2-.4.6-.8 1.1-1 1.8-.2.7-.3 1.3-.3 2.1h4.6v-5.5zm.1-2.2c1.6 0 2.6.4 3.2.9.3-.2.6-.4.6-.7 0-.9-2.5-1-3.7-1-1.2 0-3.7.1-3.7 1 0 .2.1.4.6.7.5-.4 1.5-.9 3-.9zm4.7 7.7c0-.7-.1-1.4-.3-2.1-.2-.7-.6-1.2-1-1.8-.4-.6-.9-.9-1.5-1.2-.6-.2-1.1-.4-1.7-.4v5.5h4.5zm11 11.1c0-.1-.1-.1-.1-.1-1.5.4-3.2-.8-4.9-1.9-1.5-1-2.8-1.9-4-1.9-.4 0-.8.1-1.1.2-.4.2-.7.6-.9 1.1-.2.4-.4.8-.6 1.1-.2.3-.3.6-.3.8 0 .2.1.4.3.7.1.2.4.3.8.6.1 0 .1.1.2.1.3.1.4.2.4.4-.6.2-1.3.4-2.1.6-.9.1-2 .2-3.1.2s-2.1-.1-3.1-.2c-.9-.1-1.6-.3-2.1-.6 0-.2.2-.3.6-.4.1 0 .1-.1.2-.1.3-.1.6-.3.8-.4.2-.2.3-.3.3-.6s-.1-.6-.3-.8c-.1-.2-.3-.6-.6-1.1-.2-.4-.6-.9-.9-1.1-.3-.2-.7-.2-1.1-.2-1.2 0-2.6.9-4 1.9-1.8 1.1-3.6 2.3-4.9 1.9-.1 0-.1 0-.1.1s0 .1.1.1c.4.2.8.4 1.2.8.6.4 1 .8 1.6.8.6 0 1.1-.1 1.8-.6.6-.3 1.2-.7 1.8-1.1 1.1-.8 2.3-1.6 3.5-1.7l-.3.3c-.3.3-.7.6-.7 1.1 0 .4.1.7.3 1.1.1.1.1.2.2.4s.2.4.2.8c0 .1.1.3.1.4.1.2.2.8 1 1.2 1 .4 2.6.8 4.9.8 2.2 0 3.9-.2 4.9-.8.8-.4 1-.9 1-1.2 0-.2.1-.3.1-.4.1-.3.1-.6.2-.8.1-.2.2-.3.2-.6.2-.3.3-.6.3-.9 0-.6-.3-.8-.7-1.1l-.3-.3c1.1.1 2.3.9 3.5 1.7.6.4 1.2.8 1.8 1.1.7.3 1.2.6 1.8.6.6 0 1-.3 1.6-.8.3-.3.8-.6 1.2-.8-.9-.2-.7-.3-.7-.4zm-14.6-1.4c.4 0 .7.3.7.7 0 .3-.2.6-.3.8-.1-.2-.1-.3-.2-.3-.2 0-.1 1.1-.8 1.1v.2c0 .2-.2.4-.4.4s-.5-.3-.5-.5v-.2c-.7 0-.6-1.1-.8-1.1-.1 0-.2.1-.2.3-.1-.2-.3-.4-.3-.8 0-.3.2-.7.7-.7h.2V29c.7.1 1.2.2 1.8.2v1.2c0 .2 0 .2.1.2zm-1.1 2.6c.1 0 .2-.1.2-.2s-.1-.2-.2-.2-.2.1-.2.2.1.2.2.2zm1.5-1.5c.1-.1.1-.3.1-.4 0-.2-.1-.4-.4-.4-.6 0-.4.8-.7.8-.1 0-.2-.1-.2-.2 0-.2.3-.4.3-.8s-.3-.6-.6-.8c-.3.2-.6.6-.6.8 0 .3.3.6.3.8 0 .1-.1.2-.2.2-.2 0-.1-.8-.7-.8-.3 0-.4.3-.4.4 0 .1 0 .2.1.4l.2-.2c.4 0 .2 1.1.8 1.1.2 0 .3-.1.3-.3 0-.1-.1-.2-.1-.3 0-.1.1-.2.2-.2s.2 0 .2.2c0 .1-.1.2-.1.3s.1.3.3.3c.4 0 .3-1.1.8-1.1.3 0 .3.1.4.2zm.3-4.1c.7.1 1.5.3 1.9.2l-.1.1c-.2.2-.4.3-.7.6-.7.4-1.3.7-1.8.7-.6 0-1.3-.1-2.1-.3-.7-.2-1.3-.4-1.8-.7-.2.2-.6.2-.9.1-.3-.1-.6-.6-.6-.8v-.1l-.7-.7c-.7-.7-1.1-1.6-1.5-2.4-.1-.4-.3-.9-.3-1.3.6.2.8 0 1-.2.1 0 .1.2.1.2.7 0 1-.4 1.1-.8.1.4.1.8.3 1.1.2.7.6 1.2 1 1.8.1.2.3.3.4.4.1 0 .2-.1.3-.1.2 0 .4.1.7.3.2.2.2.4.2.7 1.3.4 2.5.8 3.5 1.2zM17.4 26c.1 0 .1.1.2.1 0-.1-.1-.2-.2-.4-.1-.1-.3-.2-.6-.2-.4 0-.8.4-1 .6-.1 0-.2 0-.3-.1 0 .1.1.2.1.3-.2.3-.3.7-.3.9 0 .1.2.4.4.7.2.1.3.1.6 0-.1-.1-.2-.1-.3-.2-.1 0-.2-.1-.2-.2v-.1c0-.1 0-.2.1-.3v-.3h.1c.1.1.3.1.4.1 0 0 .1 0 .1-.1.1-.1 0-.3-.2-.4l-.1-.4.1-.1c.1-.1.1-.2.2-.2.5.1.6.1.9.3zm.7 1.9c.2 0 .4-.2.4-.4s-.2-.4-.4-.4-.4.2-.4.4c-.1.3.2.4.4.4zm1.9.7c.2 0 .4-.2.4-.4s-.2-.4-.4-.4-.4.2-.4.4c0 .1.2.4.4.4zM20 5c-.2-.2-.4-.4-.4-.8.2 0 .6.2.8.4V3.5c-.3.3-.5.5-.9.5 0-.2.2-.6.4-.8h-1.1c.2.3.4.6.4.8-.2 0-.6-.2-.8-.4v1.1c.2-.2.4-.4.8-.4 0 .3-.2.6-.4.8H20zm-1.6 1.4c.1.4.6.8 1 .8s.9-.3 1-.8h-2zm1.2-.4h.8c-.1-.4-.4-.8-.8-.8V6zm-.4 0v-.8c-.4.1-.8.4-.8.8h.8zm.8 1.5c-.1 0-.2.1-.3.1V9h.3V7.5zm-1.1 1.6h.3V7.7c-.1 0-.2-.1-.3-.1v1.5zm1.2-1.8c0 .2.1.3.3.3s.3-.1.3-.3c0-.2-.1-.3-.3-.3s-.3.1-.3.3zm1-.1c.2 0 .3-.1.3-.3 0-.1-.1-.2-.3-.2s-.3.1-.3.3c0 .1.2.2.3.2zM22 7c.2 0 .3-.1.3-.3 0-.2-.1-.3-.3-.3s-.3.1-.3.3c0 .2.1.3.3.3zm2.2.8c.2 0 .3-.1.3-.3 0-.2-.1-.3-.3-.3s-.3.1-.3.3c0 .2.2.3.3.3zm-.5-.6c.2 0 .3-.1.3-.3 0-.2-.1-.3-.3-.3s-.3.1-.3.3c-.1.2 0 .3.3.3zm-.9-.2c.2 0 .3-.1.3-.3 0-.2-.1-.3-.3-.3s-.3.1-.3.3c-.1.1.2.3.3.3zm1.8 2.4c-.2 0-.3.1-.3.3 0 .2.1.3.3.3s.3-.1.3-.3c0-.2-.1-.3-.3-.3zm.1-.7c-.2 0-.3.1-.3.3 0 .2.1.3.3.3s.3-.1.3-.3c0-.2-.1-.3-.3-.3zm-.4-.5c0 .2.1.3.3.3s.4-.1.4-.3c0-.2-.1-.3-.3-.3s-.4.1-.4.3zm-5.9-.5c.2 0 .3-.1.3-.3 0-.2-.1-.3-.3-.3s-.3.1-.3.3c0 0 .2.3.3.3zm-.8-.5c.2 0 .3-.1.3-.3 0-.2-.1-.3-.3-.3s-.3.1-.3.3c.1.2.2.3.3.3zm-.7-.2c.2 0 .3-.1.3-.3 0-.2-.1-.3-.3-.3s-.3.1-.3.3c-.1.2.1.3.3.3zm-2.3.8c.2 0 .3-.1.3-.3 0-.2-.1-.3-.3-.3s-.3.1-.3.3c0 .2.1.3.3.3zm.6-.6c.2 0 .3-.1.3-.3 0-.2-.1-.3-.3-.3s-.3.1-.3.3c-.1.2.2.3.3.3zm.9-.2c.2 0 .3-.1.3-.3 0-.2-.1-.3-.3-.3s-.3.1-.3.3c-.1.1.1.3.3.3zm-1.5 2.8c0-.2-.1-.3-.3-.3s-.3 0-.3.3c0 .2.1.3.3.3.1 0 .3-.1.3-.3zm-.2-.8c0-.2-.1-.3-.3-.3-.2 0-.3.1-.3.3 0 .2.1.3.3.3.2 0 .3-.2.3-.3zm-.2-.5c.2 0 .3-.1.3-.3 0-.2-.1-.3-.3-.3s-.4.1-.4.3c0 .1.3.3.4.3zm7.7.3c-.1.1-.4.4-.4.8 0 .2.2.6.3.8.1-.3.4-.4.4-.8 0-.3-.2-.5-.3-.8zm-4.9 0c-.2.3-.3.6-.3.9 0 .3.3.4.4.8.1-.3.3-.6.3-.8 0-.5-.3-.8-.4-.9z\"></path>\n                                    <image\n                                            src=\"/assets/images/moj-logotype-crest.png\"\n                                            xlink:href=\"\"\n                                            class=\"moj-header__logotype-crest-fallback-image\"\n                                            width=\"40\"\n                                            height=\"40\"></image>\n                                </svg>\n        \n                                <span class=\"govuk-header__logotype-text\">\n                                    OPG\n                                </span>\n                            </a>\n                        </div>\n    \n                        <a class=\"govuk-header__service-name\">\n                            Sirius\n                        </a>\n                        <div class=\"govuk-header__logo\">\n                            <nav aria-label=\"Menu\" class=\"govuk-header__navigation opg-main-nav-container\">\n                                 <ul id=\"header-navigation\" class=\"govuk-header__navigation-list\">\n                                    <li class=\"govuk-header__navigation-item\">\n                                        <a class=\"govuk-header__link\" href=\"${prefix}/lpa\"> Power of Attorney</a>\n                                    </li>\n                                    <li class=\"govuk-header__navigation-item\">\n                                        <a class=\"govuk-header__link\" href=\"${prefix}/supervision\">\n                                            Supervision\n                                        </a>\n                                    </li>\n                                    <li class=\"govuk-header__navigation-item\">\n                                        <a class=\"govuk-header__link\" href=\"${prefix}/admin\">\n                                            Admin\n                                        </a>\n                                    </li>\n                                    <li class=\"govuk-header__navigation-item\">\n                                        <a class=\"govuk-header__link\" href=\"${prefix}/auth/logout\">\n                                            Sign out\n                                        </a>\n                                    </li>\n                                </ul>\n                            </nav>\n                        </div>\n                    </div>\n                </header>\n                <nav class=govuk-phase-banner\" aria-label=\"feedback-banner-navigation\"> \n                    <div class=\"govuk-phase-banner\">\n                        <p class=\"govuk-phase-banner__content\">\n                           <span id=\"feedback-span\" id=\"feedback-span\" class=\"govuk-phase-banner__text govuk-!-padding-left-5\">\n                                Your <a id=\"feedback-link\" class=\"govuk-link\" href=\"${prefix}/admin/feedback\" target=\"_blank\" rel=\"opener\">feedback</a> will help us to improve this service.\n                            </span>\n                        </p>\n                    </div>\n                </nav>\n                <div id=\"nav-search\">\n                </div>\n                <nav class=\"moj-primary-navigation\" role=\"navigation\" aria-label=\"Primary navigation\">\n                    <ul class=\"moj-primary-navigation__list\">\n                        ${navLinks\n                          .map(({ url, title, hide, openNewTab }) => {\n                            return `<li \n                          class=\"moj-primary-navigation__item ${\n                            hide ? \"hide\" : \"\"\n                          }\"\n                          >\n                            <a\n                              class=\"moj-primary-navigation__link\"\n                              ${\n                                window.location.href.includes(url)\n                                  ? 'aria-current=\"page\"'\n                                  : \"\"\n                              }\n                              href=\"${url}\"\n                              ${openNewTab ? 'target=\"_blank\"' : \"\"}\n                            >\n                              ${title}\n                            </a>\n                          </li>`;\n                        })\n                        .join(\"\")}\n                    </ul>\n                </nav>\n            </div>\n    `;\n  }\n}\ncustomElements.define(\"sirius-header\", SiriusHeader);\n", "var htmx = (function() {\n  'use strict'\n\n  // Public API\n  const htmx = {\n    // Tsc madness here, assigning the functions directly results in an invalid TypeScript output, but reassigning is fine\n    /* Event processing */\n    /** @type {typeof onLoadHelper} */\n    onLoad: null,\n    /** @type {typeof processNode} */\n    process: null,\n    /** @type {typeof addEventListenerImpl} */\n    on: null,\n    /** @type {typeof removeEventListenerImpl} */\n    off: null,\n    /** @type {typeof triggerEvent} */\n    trigger: null,\n    /** @type {typeof ajaxHelper} */\n    ajax: null,\n    /* DOM querying helpers */\n    /** @type {typeof find} */\n    find: null,\n    /** @type {typeof findAll} */\n    findAll: null,\n    /** @type {typeof closest} */\n    closest: null,\n    /**\n     * Returns the input values that would resolve for a given element via the htmx value resolution mechanism\n     *\n     * @see https://htmx.org/api/#values\n     *\n     * @param {Element} elt the element to resolve values on\n     * @param {HttpVerb} type the request type (e.g. **get** or **post**) non-GET's will include the enclosing form of the element. Defaults to **post**\n     * @returns {Object}\n     */\n    values: function(elt, type) {\n      const inputValues = getInputValues(elt, type || 'post')\n      return inputValues.values\n    },\n    /* DOM manipulation helpers */\n    /** @type {typeof removeElement} */\n    remove: null,\n    /** @type {typeof addClassToElement} */\n    addClass: null,\n    /** @type {typeof removeClassFromElement} */\n    removeClass: null,\n    /** @type {typeof toggleClassOnElement} */\n    toggleClass: null,\n    /** @type {typeof takeClassForElement} */\n    takeClass: null,\n    /** @type {typeof swap} */\n    swap: null,\n    /* Extension entrypoints */\n    /** @type {typeof defineExtension} */\n    defineExtension: null,\n    /** @type {typeof removeExtension} */\n    removeExtension: null,\n    /* Debugging */\n    /** @type {typeof logAll} */\n    logAll: null,\n    /** @type {typeof logNone} */\n    logNone: null,\n    /* Debugging */\n    /**\n     * The logger htmx uses to log with\n     *\n     * @see https://htmx.org/api/#logger\n     */\n    logger: null,\n    /**\n     * A property holding the configuration htmx uses at runtime.\n     *\n     * Note that using a [meta tag](https://htmx.org/docs/#config) is the preferred mechanism for setting these properties.\n     *\n     * @see https://htmx.org/api/#config\n     */\n    config: {\n      /**\n       * Whether to use history.\n       * @type boolean\n       * @default true\n       */\n      historyEnabled: true,\n      /**\n       * The number of pages to keep in **sessionStorage** for history support.\n       * @type number\n       * @default 10\n       */\n      historyCacheSize: 10,\n      /**\n       * @type boolean\n       * @default false\n       */\n      refreshOnHistoryMiss: false,\n      /**\n       * The default swap style to use if **[hx-swap](https://htmx.org/attributes/hx-swap)** is omitted.\n       * @type HtmxSwapStyle\n       * @default 'innerHTML'\n       */\n      defaultSwapStyle: 'innerHTML',\n      /**\n       * The default delay between receiving a response from the server and doing the swap.\n       * @type number\n       * @default 0\n       */\n      defaultSwapDelay: 0,\n      /**\n       * The default delay between completing the content swap and settling attributes.\n       * @type number\n       * @default 20\n       */\n      defaultSettleDelay: 20,\n      /**\n       * If true, htmx will inject a small amount of CSS into the page to make indicators invisible unless the **htmx-indicator** class is present.\n       * @type boolean\n       * @default true\n       */\n      includeIndicatorStyles: true,\n      /**\n       * The class to place on indicators when a request is in flight.\n       * @type string\n       * @default 'htmx-indicator'\n       */\n      indicatorClass: 'htmx-indicator',\n      /**\n       * The class to place on triggering elements when a request is in flight.\n       * @type string\n       * @default 'htmx-request'\n       */\n      requestClass: 'htmx-request',\n      /**\n       * The class to temporarily place on elements that htmx has added to the DOM.\n       * @type string\n       * @default 'htmx-added'\n       */\n      addedClass: 'htmx-added',\n      /**\n       * The class to place on target elements when htmx is in the settling phase.\n       * @type string\n       * @default 'htmx-settling'\n       */\n      settlingClass: 'htmx-settling',\n      /**\n       * The class to place on target elements when htmx is in the swapping phase.\n       * @type string\n       * @default 'htmx-swapping'\n       */\n      swappingClass: 'htmx-swapping',\n      /**\n       * Allows the use of eval-like functionality in htmx, to enable **hx-vars**, trigger conditions & script tag evaluation. Can be set to **false** for CSP compatibility.\n       * @type boolean\n       * @default true\n       */\n      allowEval: true,\n      /**\n       * If set to false, disables the interpretation of script tags.\n       * @type boolean\n       * @default true\n       */\n      allowScriptTags: true,\n      /**\n       * If set, the nonce will be added to inline scripts.\n       * @type string\n       * @default ''\n       */\n      inlineScriptNonce: '',\n      /**\n       * If set, the nonce will be added to inline styles.\n       * @type string\n       * @default ''\n       */\n      inlineStyleNonce: '',\n      /**\n       * The attributes to settle during the settling phase.\n       * @type string[]\n       * @default ['class', 'style', 'width', 'height']\n       */\n      attributesToSettle: ['class', 'style', 'width', 'height'],\n      /**\n       * Allow cross-site Access-Control requests using credentials such as cookies, authorization headers or TLS client certificates.\n       * @type boolean\n       * @default false\n       */\n      withCredentials: false,\n      /**\n       * @type number\n       * @default 0\n       */\n      timeout: 0,\n      /**\n       * The default implementation of **getWebSocketReconnectDelay** for reconnecting after unexpected connection loss by the event code **Abnormal Closure**, **Service Restart** or **Try Again Later**.\n       * @type {'full-jitter' | ((retryCount:number) => number)}\n       * @default \"full-jitter\"\n       */\n      wsReconnectDelay: 'full-jitter',\n      /**\n       * The type of binary data being received over the WebSocket connection\n       * @type BinaryType\n       * @default 'blob'\n       */\n      wsBinaryType: 'blob',\n      /**\n       * @type string\n       * @default '[hx-disable], [data-hx-disable]'\n       */\n      disableSelector: '[hx-disable], [data-hx-disable]',\n      /**\n       * @type {'auto' | 'instant' | 'smooth'}\n       * @default 'instant'\n       */\n      scrollBehavior: 'instant',\n      /**\n       * If the focused element should be scrolled into view.\n       * @type boolean\n       * @default false\n       */\n      defaultFocusScroll: false,\n      /**\n       * If set to true htmx will include a cache-busting parameter in GET requests to avoid caching partial responses by the browser\n       * @type boolean\n       * @default false\n       */\n      getCacheBusterParam: false,\n      /**\n       * If set to true, htmx will use the View Transition API when swapping in new content.\n       * @type boolean\n       * @default false\n       */\n      globalViewTransitions: false,\n      /**\n       * htmx will format requests with these methods by encoding their parameters in the URL, not the request body\n       * @type {(HttpVerb)[]}\n       * @default ['get', 'delete']\n       */\n      methodsThatUseUrlParams: ['get', 'delete'],\n      /**\n       * If set to true, disables htmx-based requests to non-origin hosts.\n       * @type boolean\n       * @default false\n       */\n      selfRequestsOnly: true,\n      /**\n       * If set to true htmx will not update the title of the document when a title tag is found in new content\n       * @type boolean\n       * @default false\n       */\n      ignoreTitle: false,\n      /**\n       * Whether the target of a boosted element is scrolled into the viewport.\n       * @type boolean\n       * @default true\n       */\n      scrollIntoViewOnBoost: true,\n      /**\n       * The cache to store evaluated trigger specifications into.\n       * You may define a simple object to use a never-clearing cache, or implement your own system using a [proxy object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Proxy)\n       * @type {Object|null}\n       * @default null\n       */\n      triggerSpecsCache: null,\n      /** @type boolean */\n      disableInheritance: false,\n      /** @type HtmxResponseHandlingConfig[] */\n      responseHandling: [\n        { code: '204', swap: false },\n        { code: '[23]..', swap: true },\n        { code: '[45]..', swap: false, error: true }\n      ],\n      /**\n       * Whether to process OOB swaps on elements that are nested within the main response element.\n       * @type boolean\n       * @default true\n       */\n      allowNestedOobSwaps: true,\n      /**\n       * Whether to treat history cache miss full page reload requests as a \"HX-Request\" by returning this response header\n       * This should always be disabled when using HX-Request header to optionally return partial responses\n       * @type boolean\n       * @default true\n       */\n      historyRestoreAsHxRequest: true,\n      /**\n       * Weather to report input validation errors to the end user and update focus to the first input that fails validation.\n       * This should always be enabled as this matches default browser form submit behaviour\n       * @type boolean\n       * @default false\n       */\n      reportValidityOfForms: false\n    },\n    /** @type {typeof parseInterval} */\n    parseInterval: null,\n    /**\n     * proxy of window.location used for page reload functions\n     * @type location\n     */\n    location,\n    /** @type {typeof internalEval} */\n    _: null,\n    version: '2.0.7'\n  }\n  // Tsc madness part 2\n  htmx.onLoad = onLoadHelper\n  htmx.process = processNode\n  htmx.on = addEventListenerImpl\n  htmx.off = removeEventListenerImpl\n  htmx.trigger = triggerEvent\n  htmx.ajax = ajaxHelper\n  htmx.find = find\n  htmx.findAll = findAll\n  htmx.closest = closest\n  htmx.remove = removeElement\n  htmx.addClass = addClassToElement\n  htmx.removeClass = removeClassFromElement\n  htmx.toggleClass = toggleClassOnElement\n  htmx.takeClass = takeClassForElement\n  htmx.swap = swap\n  htmx.defineExtension = defineExtension\n  htmx.removeExtension = removeExtension\n  htmx.logAll = logAll\n  htmx.logNone = logNone\n  htmx.parseInterval = parseInterval\n  htmx._ = internalEval\n\n  const internalAPI = {\n    addTriggerHandler,\n    bodyContains,\n    canAccessLocalStorage,\n    findThisElement,\n    filterValues,\n    swap,\n    hasAttribute,\n    getAttributeValue,\n    getClosestAttributeValue,\n    getClosestMatch,\n    getExpressionVars,\n    getHeaders,\n    getInputValues,\n    getInternalData,\n    getSwapSpecification,\n    getTriggerSpecs,\n    getTarget,\n    makeFragment,\n    mergeObjects,\n    makeSettleInfo,\n    oobSwap,\n    querySelectorExt,\n    settleImmediately,\n    shouldCancel,\n    triggerEvent,\n    triggerErrorEvent,\n    withExtensions\n  }\n\n  const VERBS = ['get', 'post', 'put', 'delete', 'patch']\n  const VERB_SELECTOR = VERBS.map(function(verb) {\n    return '[hx-' + verb + '], [data-hx-' + verb + ']'\n  }).join(', ')\n\n  //= ===================================================================\n  // Utilities\n  //= ===================================================================\n\n  /**\n   * Parses an interval string consistent with the way htmx does. Useful for plugins that have timing-related attributes.\n   *\n   * Caution: Accepts an int followed by either **s** or **ms**. All other values use **parseFloat**\n   *\n   * @see https://htmx.org/api/#parseInterval\n   *\n   * @param {string} str timing string\n   * @returns {number|undefined}\n   */\n  function parseInterval(str) {\n    if (str == undefined) {\n      return undefined\n    }\n\n    let interval = NaN\n    if (str.slice(-2) == 'ms') {\n      interval = parseFloat(str.slice(0, -2))\n    } else if (str.slice(-1) == 's') {\n      interval = parseFloat(str.slice(0, -1)) * 1000\n    } else if (str.slice(-1) == 'm') {\n      interval = parseFloat(str.slice(0, -1)) * 1000 * 60\n    } else {\n      interval = parseFloat(str)\n    }\n    return isNaN(interval) ? undefined : interval\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {string} name\n   * @returns {(string | null)}\n   */\n  function getRawAttribute(elt, name) {\n    return elt instanceof Element && elt.getAttribute(name)\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} qualifiedName\n   * @returns {boolean}\n   */\n  // resolve with both hx and data-hx prefixes\n  function hasAttribute(elt, qualifiedName) {\n    return !!elt.hasAttribute && (elt.hasAttribute(qualifiedName) ||\n      elt.hasAttribute('data-' + qualifiedName))\n  }\n\n  /**\n   *\n   * @param {Node} elt\n   * @param {string} qualifiedName\n   * @returns {(string | null)}\n   */\n  function getAttributeValue(elt, qualifiedName) {\n    return getRawAttribute(elt, qualifiedName) || getRawAttribute(elt, 'data-' + qualifiedName)\n  }\n\n  /**\n   * @param {Node} elt\n   * @returns {Node | null}\n   */\n  function parentElt(elt) {\n    const parent = elt.parentElement\n    if (!parent && elt.parentNode instanceof ShadowRoot) return elt.parentNode\n    return parent\n  }\n\n  /**\n   * @returns {Document}\n   */\n  function getDocument() {\n    return document\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {boolean} global\n   * @returns {Node|Document}\n   */\n  function getRootNode(elt, global) {\n    return elt.getRootNode ? elt.getRootNode({ composed: global }) : getDocument()\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {(e:Node) => boolean} condition\n   * @returns {Node | null}\n   */\n  function getClosestMatch(elt, condition) {\n    while (elt && !condition(elt)) {\n      elt = parentElt(elt)\n    }\n\n    return elt || null\n  }\n\n  /**\n   * @param {Element} initialElement\n   * @param {Element} ancestor\n   * @param {string} attributeName\n   * @returns {string|null}\n   */\n  function getAttributeValueWithDisinheritance(initialElement, ancestor, attributeName) {\n    const attributeValue = getAttributeValue(ancestor, attributeName)\n    const disinherit = getAttributeValue(ancestor, 'hx-disinherit')\n    var inherit = getAttributeValue(ancestor, 'hx-inherit')\n    if (initialElement !== ancestor) {\n      if (htmx.config.disableInheritance) {\n        if (inherit && (inherit === '*' || inherit.split(' ').indexOf(attributeName) >= 0)) {\n          return attributeValue\n        } else {\n          return null\n        }\n      }\n      if (disinherit && (disinherit === '*' || disinherit.split(' ').indexOf(attributeName) >= 0)) {\n        return 'unset'\n      }\n    }\n    return attributeValue\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} attributeName\n   * @returns {string | null}\n   */\n  function getClosestAttributeValue(elt, attributeName) {\n    let closestAttr = null\n    getClosestMatch(elt, function(e) {\n      return !!(closestAttr = getAttributeValueWithDisinheritance(elt, asElement(e), attributeName))\n    })\n    if (closestAttr !== 'unset') {\n      return closestAttr\n    }\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {string} selector\n   * @returns {boolean}\n   */\n  function matches(elt, selector) {\n    return elt instanceof Element && elt.matches(selector)\n  }\n\n  /**\n   * @param {string} str\n   * @returns {string}\n   */\n  function getStartTag(str) {\n    const tagMatcher = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i\n    const match = tagMatcher.exec(str)\n    if (match) {\n      return match[1].toLowerCase()\n    } else {\n      return ''\n    }\n  }\n\n  /**\n   * @param {string} resp\n   * @returns {Document}\n   */\n  function parseHTML(resp) {\n    const parser = new DOMParser()\n    return parser.parseFromString(resp, 'text/html')\n  }\n\n  /**\n   * @param {DocumentFragment} fragment\n   * @param {Node} elt\n   */\n  function takeChildrenFor(fragment, elt) {\n    while (elt.childNodes.length > 0) {\n      fragment.append(elt.childNodes[0])\n    }\n  }\n\n  /**\n   * @param {HTMLScriptElement} script\n   * @returns {HTMLScriptElement}\n   */\n  function duplicateScript(script) {\n    const newScript = getDocument().createElement('script')\n    forEach(script.attributes, function(attr) {\n      newScript.setAttribute(attr.name, attr.value)\n    })\n    newScript.textContent = script.textContent\n    newScript.async = false\n    if (htmx.config.inlineScriptNonce) {\n      newScript.nonce = htmx.config.inlineScriptNonce\n    }\n    return newScript\n  }\n\n  /**\n   * @param {HTMLScriptElement} script\n   * @returns {boolean}\n   */\n  function isJavaScriptScriptNode(script) {\n    return script.matches('script') && (script.type === 'text/javascript' || script.type === 'module' || script.type === '')\n  }\n\n  /**\n   * we have to make new copies of script tags that we are going to insert because\n   * SOME browsers (not saying who, but it involves an element and an animal) don't\n   * execute scripts created in <template> tags when they are inserted into the DOM\n   * and all the others do lmao\n   * @param {DocumentFragment} fragment\n   */\n  function normalizeScriptTags(fragment) {\n    Array.from(fragment.querySelectorAll('script')).forEach(/** @param {HTMLScriptElement} script */ (script) => {\n      if (isJavaScriptScriptNode(script)) {\n        const newScript = duplicateScript(script)\n        const parent = script.parentNode\n        try {\n          parent.insertBefore(newScript, script)\n        } catch (e) {\n          logError(e)\n        } finally {\n          script.remove()\n        }\n      }\n    })\n  }\n\n  /**\n   * @typedef {DocumentFragment & {title?: string}} DocumentFragmentWithTitle\n   * @description  a document fragment representing the response HTML, including\n   * a `title` property for any title information found\n   */\n\n  /**\n   * @param {string} response HTML\n   * @returns {DocumentFragmentWithTitle}\n   */\n  function makeFragment(response) {\n    // strip head tag to determine shape of response we are dealing with\n    const responseWithNoHead = response.replace(/<head(\\s[^>]*)?>[\\s\\S]*?<\\/head>/i, '')\n    const startTag = getStartTag(responseWithNoHead)\n    /** @type DocumentFragmentWithTitle */\n    let fragment\n    if (startTag === 'html') {\n      // if it is a full document, parse it and return the body\n      fragment = /** @type DocumentFragmentWithTitle */ (new DocumentFragment())\n      const doc = parseHTML(response)\n      takeChildrenFor(fragment, doc.body)\n      fragment.title = doc.title\n    } else if (startTag === 'body') {\n      // parse body w/o wrapping in template\n      fragment = /** @type DocumentFragmentWithTitle */ (new DocumentFragment())\n      const doc = parseHTML(responseWithNoHead)\n      takeChildrenFor(fragment, doc.body)\n      fragment.title = doc.title\n    } else {\n      // otherwise we have non-body partial HTML content, so wrap it in a template to maximize parsing flexibility\n      const doc = parseHTML('<body><template class=\"internal-htmx-wrapper\">' + responseWithNoHead + '</template></body>')\n      fragment = /** @type DocumentFragmentWithTitle */ (doc.querySelector('template').content)\n      // extract title into fragment for later processing\n      fragment.title = doc.title\n\n      // for legacy reasons we support a title tag at the root level of non-body responses, so we need to handle it\n      var titleElement = fragment.querySelector('title')\n      if (titleElement && titleElement.parentNode === fragment) {\n        titleElement.remove()\n        fragment.title = titleElement.innerText\n      }\n    }\n    if (fragment) {\n      if (htmx.config.allowScriptTags) {\n        normalizeScriptTags(fragment)\n      } else {\n        // remove all script tags if scripts are disabled\n        fragment.querySelectorAll('script').forEach((script) => script.remove())\n      }\n    }\n    return fragment\n  }\n\n  /**\n   * @param {Function} func\n   */\n  function maybeCall(func) {\n    if (func) {\n      func()\n    }\n  }\n\n  /**\n   * @param {any} o\n   * @param {string} type\n   * @returns\n   */\n  function isType(o, type) {\n    return Object.prototype.toString.call(o) === '[object ' + type + ']'\n  }\n\n  /**\n   * @param {*} o\n   * @returns {o is Function}\n   */\n  function isFunction(o) {\n    return typeof o === 'function'\n  }\n\n  /**\n   * @param {*} o\n   * @returns {o is Object}\n   */\n  function isRawObject(o) {\n    return isType(o, 'Object')\n  }\n\n  /**\n   * @typedef {Object} OnHandler\n   * @property {(keyof HTMLElementEventMap)|string} event\n   * @property {EventListener} listener\n   */\n\n  /**\n   * @typedef {Object} ListenerInfo\n   * @property {string} trigger\n   * @property {EventListener} listener\n   * @property {EventTarget} on\n   */\n\n  /**\n   * @typedef {Object} HtmxNodeInternalData\n   * Element data\n   * @property {number} [initHash]\n   * @property {boolean} [boosted]\n   * @property {OnHandler[]} [onHandlers]\n   * @property {number} [timeout]\n   * @property {ListenerInfo[]} [listenerInfos]\n   * @property {boolean} [cancelled]\n   * @property {boolean} [triggeredOnce]\n   * @property {number} [delayed]\n   * @property {number|null} [throttle]\n   * @property {WeakMap<HtmxTriggerSpecification,WeakMap<EventTarget,string>>} [lastValue]\n   * @property {boolean} [loaded]\n   * @property {string} [path]\n   * @property {string} [verb]\n   * @property {boolean} [polling]\n   * @property {HTMLButtonElement|HTMLInputElement|null} [lastButtonClicked]\n   * @property {number} [requestCount]\n   * @property {XMLHttpRequest} [xhr]\n   * @property {(() => void)[]} [queuedRequests]\n   * @property {boolean} [abortable]\n   * @property {boolean} [firstInitCompleted]\n   *\n   * Event data\n   * @property {HtmxTriggerSpecification} [triggerSpec]\n   * @property {EventTarget[]} [handledFor]\n   */\n\n  /**\n   * getInternalData retrieves \"private\" data stored by htmx within an element\n   * @param {EventTarget|Event} elt\n   * @returns {HtmxNodeInternalData}\n   */\n  function getInternalData(elt) {\n    const dataProp = 'htmx-internal-data'\n    let data = elt[dataProp]\n    if (!data) {\n      data = elt[dataProp] = {}\n    }\n    return data\n  }\n\n  /**\n   * toArray converts an ArrayLike object into a real array.\n   * @template T\n   * @param {ArrayLike<T>} arr\n   * @returns {T[]}\n   */\n  function toArray(arr) {\n    const returnArr = []\n    if (arr) {\n      for (let i = 0; i < arr.length; i++) {\n        returnArr.push(arr[i])\n      }\n    }\n    return returnArr\n  }\n\n  /**\n   * @template T\n   * @param {T[]|NamedNodeMap|HTMLCollection|HTMLFormControlsCollection|ArrayLike<T>} arr\n   * @param {(T) => void} func\n   */\n  function forEach(arr, func) {\n    if (arr) {\n      for (let i = 0; i < arr.length; i++) {\n        func(arr[i])\n      }\n    }\n  }\n\n  /**\n   * @param {Element} el\n   * @returns {boolean}\n   */\n  function isScrolledIntoView(el) {\n    const rect = el.getBoundingClientRect()\n    const elemTop = rect.top\n    const elemBottom = rect.bottom\n    return elemTop < window.innerHeight && elemBottom >= 0\n  }\n\n  /**\n   * Checks whether the element is in the document (includes shadow roots).\n   * This function this is a slight misnomer; it will return true even for elements in the head.\n   *\n   * @param {Node} elt\n   * @returns {boolean}\n   */\n  function bodyContains(elt) {\n    return elt.getRootNode({ composed: true }) === document\n  }\n\n  /**\n   * @param {string} trigger\n   * @returns {string[]}\n   */\n  function splitOnWhitespace(trigger) {\n    return trigger.trim().split(/\\s+/)\n  }\n\n  /**\n   * mergeObjects takes all the keys from\n   * obj2 and duplicates them into obj1\n   * @template T1\n   * @template T2\n   * @param {T1} obj1\n   * @param {T2} obj2\n   * @returns {T1 & T2}\n   */\n  function mergeObjects(obj1, obj2) {\n    for (const key in obj2) {\n      if (obj2.hasOwnProperty(key)) {\n        // @ts-ignore tsc doesn't seem to properly handle types merging\n        obj1[key] = obj2[key]\n      }\n    }\n    // @ts-ignore tsc doesn't seem to properly handle types merging\n    return obj1\n  }\n\n  /**\n   * @param {string} jString\n   * @returns {any|null}\n   */\n  function parseJSON(jString) {\n    try {\n      return JSON.parse(jString)\n    } catch (error) {\n      logError(error)\n      return null\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  function canAccessLocalStorage() {\n    const test = 'htmx:sessionStorageTest'\n    try {\n      sessionStorage.setItem(test, test)\n      sessionStorage.removeItem(test)\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  function normalizePath(path) {\n    // use dummy base URL to allow normalize on path only\n    const url = new URL(path, 'http://x')\n    if (url) {\n      path = url.pathname + url.search\n    }\n    // remove trailing slash, unless index page\n    if (path != '/') {\n      path = path.replace(/\\/+$/, '')\n    }\n    return path\n  }\n\n  //= =========================================================================================\n  // public API\n  //= =========================================================================================\n\n  /**\n   * @param {string} str\n   * @returns {any}\n   */\n  function internalEval(str) {\n    return maybeEval(getDocument().body, function() {\n      return eval(str)\n    })\n  }\n\n  /**\n   * Adds a callback for the **htmx:load** event. This can be used to process new content, for example initializing the content with a javascript library\n   *\n   * @see https://htmx.org/api/#onLoad\n   *\n   * @param {(elt: Node) => void} callback the callback to call on newly loaded content\n   * @returns {EventListener}\n   */\n  function onLoadHelper(callback) {\n    const value = htmx.on('htmx:load', /** @param {CustomEvent} evt */ function(evt) {\n      callback(evt.detail.elt)\n    })\n    return value\n  }\n\n  /**\n   * Log all htmx events, useful for debugging.\n   *\n   * @see https://htmx.org/api/#logAll\n   */\n  function logAll() {\n    htmx.logger = function(elt, event, data) {\n      if (console) {\n        console.log(event, elt, data)\n      }\n    }\n  }\n\n  function logNone() {\n    htmx.logger = null\n  }\n\n  /**\n   * Finds an element matching the selector\n   *\n   * @see https://htmx.org/api/#find\n   *\n   * @param {ParentNode|string} eltOrSelector  the root element to find the matching element in, inclusive | the selector to match\n   * @param {string} [selector] the selector to match\n   * @returns {Element|null}\n   */\n  function find(eltOrSelector, selector) {\n    if (typeof eltOrSelector !== 'string') {\n      return eltOrSelector.querySelector(selector)\n    } else {\n      return find(getDocument(), eltOrSelector)\n    }\n  }\n\n  /**\n   * Finds all elements matching the selector\n   *\n   * @see https://htmx.org/api/#findAll\n   *\n   * @param {ParentNode|string} eltOrSelector the root element to find the matching elements in, inclusive | the selector to match\n   * @param {string} [selector] the selector to match\n   * @returns {NodeListOf<Element>}\n   */\n  function findAll(eltOrSelector, selector) {\n    if (typeof eltOrSelector !== 'string') {\n      return eltOrSelector.querySelectorAll(selector)\n    } else {\n      return findAll(getDocument(), eltOrSelector)\n    }\n  }\n\n  /**\n   * @returns Window\n   */\n  function getWindow() {\n    return window\n  }\n\n  /**\n   * Removes an element from the DOM\n   *\n   * @see https://htmx.org/api/#remove\n   *\n   * @param {Node} elt\n   * @param {number} [delay]\n   */\n  function removeElement(elt, delay) {\n    elt = resolveTarget(elt)\n    if (delay) {\n      getWindow().setTimeout(function() {\n        removeElement(elt)\n        elt = null\n      }, delay)\n    } else {\n      parentElt(elt).removeChild(elt)\n    }\n  }\n\n  /**\n   * @param {any} elt\n   * @return {Element|null}\n   */\n  function asElement(elt) {\n    return elt instanceof Element ? elt : null\n  }\n\n  /**\n   * @param {any} elt\n   * @return {HTMLElement|null}\n   */\n  function asHtmlElement(elt) {\n    return elt instanceof HTMLElement ? elt : null\n  }\n\n  /**\n   * @param {any} value\n   * @return {string|null}\n   */\n  function asString(value) {\n    return typeof value === 'string' ? value : null\n  }\n\n  /**\n   * @param {EventTarget} elt\n   * @return {ParentNode|null}\n   */\n  function asParentNode(elt) {\n    return elt instanceof Element || elt instanceof Document || elt instanceof DocumentFragment ? elt : null\n  }\n\n  /**\n   * This method adds a class to the given element.\n   *\n   * @see https://htmx.org/api/#addClass\n   *\n   * @param {Element|string} elt the element to add the class to\n   * @param {string} clazz the class to add\n   * @param {number} [delay] the delay (in milliseconds) before class is added\n   */\n  function addClassToElement(elt, clazz, delay) {\n    elt = asElement(resolveTarget(elt))\n    if (!elt) {\n      return\n    }\n    if (delay) {\n      getWindow().setTimeout(function() {\n        addClassToElement(elt, clazz)\n        elt = null\n      }, delay)\n    } else {\n      elt.classList && elt.classList.add(clazz)\n    }\n  }\n\n  /**\n   * Removes a class from the given element\n   *\n   * @see https://htmx.org/api/#removeClass\n   *\n   * @param {Node|string} node element to remove the class from\n   * @param {string} clazz the class to remove\n   * @param {number} [delay] the delay (in milliseconds before class is removed)\n   */\n  function removeClassFromElement(node, clazz, delay) {\n    let elt = asElement(resolveTarget(node))\n    if (!elt) {\n      return\n    }\n    if (delay) {\n      getWindow().setTimeout(function() {\n        removeClassFromElement(elt, clazz)\n        elt = null\n      }, delay)\n    } else {\n      if (elt.classList) {\n        elt.classList.remove(clazz)\n        // if there are no classes left, remove the class attribute\n        if (elt.classList.length === 0) {\n          elt.removeAttribute('class')\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles the given class on an element\n   *\n   * @see https://htmx.org/api/#toggleClass\n   *\n   * @param {Element|string} elt the element to toggle the class on\n   * @param {string} clazz the class to toggle\n   */\n  function toggleClassOnElement(elt, clazz) {\n    elt = resolveTarget(elt)\n    elt.classList.toggle(clazz)\n  }\n\n  /**\n   * Takes the given class from its siblings, so that among its siblings, only the given element will have the class.\n   *\n   * @see https://htmx.org/api/#takeClass\n   *\n   * @param {Node|string} elt the element that will take the class\n   * @param {string} clazz the class to take\n   */\n  function takeClassForElement(elt, clazz) {\n    elt = resolveTarget(elt)\n    forEach(elt.parentElement.children, function(child) {\n      removeClassFromElement(child, clazz)\n    })\n    addClassToElement(asElement(elt), clazz)\n  }\n\n  /**\n   * Finds the closest matching element in the given elements parentage, inclusive of the element\n   *\n   * @see https://htmx.org/api/#closest\n   *\n   * @param {Element|string} elt the element to find the selector from\n   * @param {string} selector the selector to find\n   * @returns {Element|null}\n   */\n  function closest(elt, selector) {\n    elt = asElement(resolveTarget(elt))\n    if (elt) {\n      return elt.closest(selector)\n    }\n    return null\n  }\n\n  /**\n   * @param {string} str\n   * @param {string} prefix\n   * @returns {boolean}\n   */\n  function startsWith(str, prefix) {\n    return str.substring(0, prefix.length) === prefix\n  }\n\n  /**\n   * @param {string} str\n   * @param {string} suffix\n   * @returns {boolean}\n   */\n  function endsWith(str, suffix) {\n    return str.substring(str.length - suffix.length) === suffix\n  }\n\n  /**\n   * @param {string} selector\n   * @returns {string}\n   */\n  function normalizeSelector(selector) {\n    const trimmedSelector = selector.trim()\n    if (startsWith(trimmedSelector, '<') && endsWith(trimmedSelector, '/>')) {\n      return trimmedSelector.substring(1, trimmedSelector.length - 2)\n    } else {\n      return trimmedSelector\n    }\n  }\n\n  /**\n   * @param {Node|Element|Document|string} elt\n   * @param {string} selector\n   * @param {boolean=} global\n   * @returns {(Node|Window)[]}\n   */\n  function querySelectorAllExt(elt, selector, global) {\n    if (selector.indexOf('global ') === 0) {\n      return querySelectorAllExt(elt, selector.slice(7), true)\n    }\n\n    elt = resolveTarget(elt)\n\n    const parts = []\n    {\n      let chevronsCount = 0\n      let offset = 0\n      for (let i = 0; i < selector.length; i++) {\n        const char = selector[i]\n        if (char === ',' && chevronsCount === 0) {\n          parts.push(selector.substring(offset, i))\n          offset = i + 1\n          continue\n        }\n        if (char === '<') {\n          chevronsCount++\n        } else if (char === '/' && i < selector.length - 1 && selector[i + 1] === '>') {\n          chevronsCount--\n        }\n      }\n      if (offset < selector.length) {\n        parts.push(selector.substring(offset))\n      }\n    }\n\n    const result = []\n    const unprocessedParts = []\n    while (parts.length > 0) {\n      const selector = normalizeSelector(parts.shift())\n      let item\n      if (selector.indexOf('closest ') === 0) {\n        item = closest(asElement(elt), normalizeSelector(selector.slice(8)))\n      } else if (selector.indexOf('find ') === 0) {\n        item = find(asParentNode(elt), normalizeSelector(selector.slice(5)))\n      } else if (selector === 'next' || selector === 'nextElementSibling') {\n        item = asElement(elt).nextElementSibling\n      } else if (selector.indexOf('next ') === 0) {\n        item = scanForwardQuery(elt, normalizeSelector(selector.slice(5)), !!global)\n      } else if (selector === 'previous' || selector === 'previousElementSibling') {\n        item = asElement(elt).previousElementSibling\n      } else if (selector.indexOf('previous ') === 0) {\n        item = scanBackwardsQuery(elt, normalizeSelector(selector.slice(9)), !!global)\n      } else if (selector === 'document') {\n        item = document\n      } else if (selector === 'window') {\n        item = window\n      } else if (selector === 'body') {\n        item = document.body\n      } else if (selector === 'root') {\n        item = getRootNode(elt, !!global)\n      } else if (selector === 'host') {\n        item = (/** @type ShadowRoot */(elt.getRootNode())).host\n      } else {\n        unprocessedParts.push(selector)\n      }\n\n      if (item) {\n        result.push(item)\n      }\n    }\n\n    if (unprocessedParts.length > 0) {\n      const standardSelector = unprocessedParts.join(',')\n      const rootNode = asParentNode(getRootNode(elt, !!global))\n      result.push(...toArray(rootNode.querySelectorAll(standardSelector)))\n    }\n\n    return result\n  }\n\n  /**\n   * @param {Node} start\n   * @param {string} match\n   * @param {boolean} global\n   * @returns {Element}\n   */\n  var scanForwardQuery = function(start, match, global) {\n    const results = asParentNode(getRootNode(start, global)).querySelectorAll(match)\n    for (let i = 0; i < results.length; i++) {\n      const elt = results[i]\n      if (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_PRECEDING) {\n        return elt\n      }\n    }\n  }\n\n  /**\n   * @param {Node} start\n   * @param {string} match\n   * @param {boolean} global\n   * @returns {Element}\n   */\n  var scanBackwardsQuery = function(start, match, global) {\n    const results = asParentNode(getRootNode(start, global)).querySelectorAll(match)\n    for (let i = results.length - 1; i >= 0; i--) {\n      const elt = results[i]\n      if (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_FOLLOWING) {\n        return elt\n      }\n    }\n  }\n\n  /**\n   * @param {Node|string} eltOrSelector\n   * @param {string=} selector\n   * @returns {Node|Window}\n   */\n  function querySelectorExt(eltOrSelector, selector) {\n    if (typeof eltOrSelector !== 'string') {\n      return querySelectorAllExt(eltOrSelector, selector)[0]\n    } else {\n      return querySelectorAllExt(getDocument().body, eltOrSelector)[0]\n    }\n  }\n\n  /**\n   * @template {EventTarget} T\n   * @param {T|string} eltOrSelector\n   * @param {T} [context]\n   * @returns {Element|T|null}\n   */\n  function resolveTarget(eltOrSelector, context) {\n    if (typeof eltOrSelector === 'string') {\n      return find(asParentNode(context) || document, eltOrSelector)\n    } else {\n      return eltOrSelector\n    }\n  }\n\n  /**\n   * @typedef {keyof HTMLElementEventMap|string} AnyEventName\n   */\n\n  /**\n   * @typedef {Object} EventArgs\n   * @property {EventTarget} target\n   * @property {AnyEventName} event\n   * @property {EventListener} listener\n   * @property {Object|boolean} options\n   */\n\n  /**\n   * @param {EventTarget|AnyEventName} arg1\n   * @param {AnyEventName|EventListener} arg2\n   * @param {EventListener|Object|boolean} [arg3]\n   * @param {Object|boolean} [arg4]\n   * @returns {EventArgs}\n   */\n  function processEventArgs(arg1, arg2, arg3, arg4) {\n    if (isFunction(arg2)) {\n      return {\n        target: getDocument().body,\n        event: asString(arg1),\n        listener: arg2,\n        options: arg3\n      }\n    } else {\n      return {\n        target: resolveTarget(arg1),\n        event: asString(arg2),\n        listener: arg3,\n        options: arg4\n      }\n    }\n  }\n\n  /**\n   * Adds an event listener to an element\n   *\n   * @see https://htmx.org/api/#on\n   *\n   * @param {EventTarget|string} arg1 the element to add the listener to | the event name to add the listener for\n   * @param {string|EventListener} arg2 the event name to add the listener for | the listener to add\n   * @param {EventListener|Object|boolean} [arg3] the listener to add | options to add\n   * @param {Object|boolean} [arg4] options to add\n   * @returns {EventListener}\n   */\n  function addEventListenerImpl(arg1, arg2, arg3, arg4) {\n    ready(function() {\n      const eventArgs = processEventArgs(arg1, arg2, arg3, arg4)\n      eventArgs.target.addEventListener(eventArgs.event, eventArgs.listener, eventArgs.options)\n    })\n    const b = isFunction(arg2)\n    return b ? arg2 : arg3\n  }\n\n  /**\n   * Removes an event listener from an element\n   *\n   * @see https://htmx.org/api/#off\n   *\n   * @param {EventTarget|string} arg1 the element to remove the listener from | the event name to remove the listener from\n   * @param {string|EventListener} arg2 the event name to remove the listener from | the listener to remove\n   * @param {EventListener} [arg3] the listener to remove\n   * @returns {EventListener}\n   */\n  function removeEventListenerImpl(arg1, arg2, arg3) {\n    ready(function() {\n      const eventArgs = processEventArgs(arg1, arg2, arg3)\n      eventArgs.target.removeEventListener(eventArgs.event, eventArgs.listener)\n    })\n    return isFunction(arg2) ? arg2 : arg3\n  }\n\n  //= ===================================================================\n  // Node processing\n  //= ===================================================================\n\n  const DUMMY_ELT = getDocument().createElement('output') // dummy element for bad selectors\n  /**\n   * @param {Element} elt\n   * @param {string} attrName\n   * @returns {(Node|Window)[]}\n   */\n  function findAttributeTargets(elt, attrName) {\n    const attrTarget = getClosestAttributeValue(elt, attrName)\n    if (attrTarget) {\n      if (attrTarget === 'this') {\n        return [findThisElement(elt, attrName)]\n      } else {\n        const result = querySelectorAllExt(elt, attrTarget)\n        // find `inherit` whole word in value, make sure it's surrounded by commas or is at the start/end of string\n        const shouldInherit = /(^|,)(\\s*)inherit(\\s*)($|,)/.test(attrTarget)\n        if (shouldInherit) {\n          const eltToInheritFrom = asElement(getClosestMatch(elt, function(parent) {\n            return parent !== elt && hasAttribute(asElement(parent), attrName)\n          }))\n          if (eltToInheritFrom) {\n            result.push(...findAttributeTargets(eltToInheritFrom, attrName))\n          }\n        }\n        if (result.length === 0) {\n          logError('The selector \"' + attrTarget + '\" on ' + attrName + ' returned no matches!')\n          return [DUMMY_ELT]\n        } else {\n          return result\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} attribute\n   * @returns {Element|null}\n   */\n  function findThisElement(elt, attribute) {\n    return asElement(getClosestMatch(elt, function(elt) {\n      return getAttributeValue(asElement(elt), attribute) != null\n    }))\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {Node|Window|null}\n   */\n  function getTarget(elt) {\n    const targetStr = getClosestAttributeValue(elt, 'hx-target')\n    if (targetStr) {\n      if (targetStr === 'this') {\n        return findThisElement(elt, 'hx-target')\n      } else {\n        return querySelectorExt(elt, targetStr)\n      }\n    } else {\n      const data = getInternalData(elt)\n      if (data.boosted) {\n        return getDocument().body\n      } else {\n        return elt\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @returns {boolean}\n   */\n  function shouldSettleAttribute(name) {\n    return htmx.config.attributesToSettle.includes(name)\n  }\n\n  /**\n   * @param {Element} mergeTo\n   * @param {Element} mergeFrom\n   */\n  function cloneAttributes(mergeTo, mergeFrom) {\n    forEach(Array.from(mergeTo.attributes), function(attr) {\n      if (!mergeFrom.hasAttribute(attr.name) && shouldSettleAttribute(attr.name)) {\n        mergeTo.removeAttribute(attr.name)\n      }\n    })\n    forEach(mergeFrom.attributes, function(attr) {\n      if (shouldSettleAttribute(attr.name)) {\n        mergeTo.setAttribute(attr.name, attr.value)\n      }\n    })\n  }\n\n  /**\n   * @param {HtmxSwapStyle} swapStyle\n   * @param {Element} target\n   * @returns {boolean}\n   */\n  function isInlineSwap(swapStyle, target) {\n    const extensions = getExtensions(target)\n    for (let i = 0; i < extensions.length; i++) {\n      const extension = extensions[i]\n      try {\n        if (extension.isInlineSwap(swapStyle)) {\n          return true\n        }\n      } catch (e) {\n        logError(e)\n      }\n    }\n    return swapStyle === 'outerHTML'\n  }\n\n  /**\n   * @param {string} oobValue\n   * @param {Element} oobElement\n   * @param {HtmxSettleInfo} settleInfo\n   * @param {Node|Document} [rootNode]\n   * @returns\n   */\n  function oobSwap(oobValue, oobElement, settleInfo, rootNode) {\n    rootNode = rootNode || getDocument()\n    let selector = '#' + CSS.escape(getRawAttribute(oobElement, 'id'))\n    /** @type HtmxSwapStyle */\n    let swapStyle = 'outerHTML'\n    if (oobValue === 'true') {\n      // do nothing\n    } else if (oobValue.indexOf(':') > 0) {\n      swapStyle = oobValue.substring(0, oobValue.indexOf(':'))\n      selector = oobValue.substring(oobValue.indexOf(':') + 1)\n    } else {\n      swapStyle = oobValue\n    }\n    oobElement.removeAttribute('hx-swap-oob')\n    oobElement.removeAttribute('data-hx-swap-oob')\n\n    const targets = querySelectorAllExt(rootNode, selector, false)\n    if (targets.length) {\n      forEach(\n        targets,\n        function(target) {\n          let fragment\n          const oobElementClone = oobElement.cloneNode(true)\n          fragment = getDocument().createDocumentFragment()\n          fragment.appendChild(oobElementClone)\n          if (!isInlineSwap(swapStyle, target)) {\n            fragment = asParentNode(oobElementClone) // if this is not an inline swap, we use the content of the node, not the node itself\n          }\n\n          const beforeSwapDetails = { shouldSwap: true, target, fragment }\n          if (!triggerEvent(target, 'htmx:oobBeforeSwap', beforeSwapDetails)) return\n\n          target = beforeSwapDetails.target // allow re-targeting\n          if (beforeSwapDetails.shouldSwap) {\n            handlePreservedElements(fragment)\n            swapWithStyle(swapStyle, target, target, fragment, settleInfo)\n            restorePreservedElements()\n          }\n          forEach(settleInfo.elts, function(elt) {\n            triggerEvent(elt, 'htmx:oobAfterSwap', beforeSwapDetails)\n          })\n        }\n      )\n      oobElement.parentNode.removeChild(oobElement)\n    } else {\n      oobElement.parentNode.removeChild(oobElement)\n      triggerErrorEvent(getDocument().body, 'htmx:oobErrorNoTarget', { content: oobElement })\n    }\n    return oobValue\n  }\n\n  function restorePreservedElements() {\n    const pantry = find('#--htmx-preserve-pantry--')\n    if (pantry) {\n      for (const preservedElt of [...pantry.children]) {\n        const existingElement = find('#' + preservedElt.id)\n        // @ts-ignore - use proposed moveBefore feature\n        existingElement.parentNode.moveBefore(preservedElt, existingElement)\n        existingElement.remove()\n      }\n      pantry.remove()\n    }\n  }\n\n  /**\n   * @param {DocumentFragment|ParentNode} fragment\n   */\n  function handlePreservedElements(fragment) {\n    forEach(findAll(fragment, '[hx-preserve], [data-hx-preserve]'), function(preservedElt) {\n      const id = getAttributeValue(preservedElt, 'id')\n      const existingElement = getDocument().getElementById(id)\n      if (existingElement != null) {\n        if (preservedElt.moveBefore) { // if the moveBefore API exists, use it\n          // get or create a storage spot for stuff\n          let pantry = find('#--htmx-preserve-pantry--')\n          if (pantry == null) {\n            getDocument().body.insertAdjacentHTML('afterend', \"<div id='--htmx-preserve-pantry--'></div>\")\n            pantry = find('#--htmx-preserve-pantry--')\n          }\n          // @ts-ignore - use proposed moveBefore feature\n          pantry.moveBefore(existingElement, null)\n        } else {\n          preservedElt.parentNode.replaceChild(existingElement, preservedElt)\n        }\n      }\n    })\n  }\n\n  /**\n   * @param {Node} parentNode\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function handleAttributes(parentNode, fragment, settleInfo) {\n    forEach(fragment.querySelectorAll('[id]'), function(newNode) {\n      const id = getRawAttribute(newNode, 'id')\n      if (id && id.length > 0) {\n        const normalizedId = id.replace(\"'\", \"\\\\'\")\n        const normalizedTag = newNode.tagName.replace(':', '\\\\:')\n        const parentElt = asParentNode(parentNode)\n        const oldNode = parentElt && parentElt.querySelector(normalizedTag + \"[id='\" + normalizedId + \"']\")\n        if (oldNode && oldNode !== parentElt) {\n          const newAttributes = newNode.cloneNode()\n          cloneAttributes(newNode, oldNode)\n          settleInfo.tasks.push(function() {\n            cloneAttributes(newNode, newAttributes)\n          })\n        }\n      }\n    })\n  }\n\n  /**\n   * @param {Node} child\n   * @returns {HtmxSettleTask}\n   */\n  function makeAjaxLoadTask(child) {\n    return function() {\n      removeClassFromElement(child, htmx.config.addedClass)\n      processNode(asElement(child))\n      processFocus(asParentNode(child))\n      triggerEvent(child, 'htmx:load')\n    }\n  }\n\n  /**\n   * @param {ParentNode} child\n   */\n  function processFocus(child) {\n    const autofocus = '[autofocus]'\n    const autoFocusedElt = asHtmlElement(matches(child, autofocus) ? child : child.querySelector(autofocus))\n    if (autoFocusedElt != null) {\n      autoFocusedElt.focus()\n    }\n  }\n\n  /**\n   * @param {Node} parentNode\n   * @param {Node} insertBefore\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function insertNodesBefore(parentNode, insertBefore, fragment, settleInfo) {\n    handleAttributes(parentNode, fragment, settleInfo)\n    while (fragment.childNodes.length > 0) {\n      const child = fragment.firstChild\n      addClassToElement(asElement(child), htmx.config.addedClass)\n      parentNode.insertBefore(child, insertBefore)\n      if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n        settleInfo.tasks.push(makeAjaxLoadTask(child))\n      }\n    }\n  }\n\n  /**\n   * based on https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0,\n   * derived from Java's string hashcode implementation\n   * @param {string} string\n   * @param {number} hash\n   * @returns {number}\n   */\n  function stringHash(string, hash) {\n    let char = 0\n    while (char < string.length) {\n      hash = (hash << 5) - hash + string.charCodeAt(char++) | 0 // bitwise or ensures we have a 32-bit int\n    }\n    return hash\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {number}\n   */\n  function attributeHash(elt) {\n    let hash = 0\n    for (let i = 0; i < elt.attributes.length; i++) {\n      const attribute = elt.attributes[i]\n      if (attribute.value) { // only include attributes w/ actual values (empty is same as non-existent)\n        hash = stringHash(attribute.name, hash)\n        hash = stringHash(attribute.value, hash)\n      }\n    }\n    return hash\n  }\n\n  /**\n   * @param {EventTarget} elt\n   */\n  function deInitOnHandlers(elt) {\n    const internalData = getInternalData(elt)\n    if (internalData.onHandlers) {\n      for (let i = 0; i < internalData.onHandlers.length; i++) {\n        const handlerInfo = internalData.onHandlers[i]\n        removeEventListenerImpl(elt, handlerInfo.event, handlerInfo.listener)\n      }\n      delete internalData.onHandlers\n    }\n  }\n\n  /**\n   * @param {Node} element\n   */\n  function deInitNode(element) {\n    const internalData = getInternalData(element)\n    if (internalData.timeout) {\n      clearTimeout(internalData.timeout)\n    }\n    if (internalData.listenerInfos) {\n      forEach(internalData.listenerInfos, function(info) {\n        if (info.on) {\n          removeEventListenerImpl(info.on, info.trigger, info.listener)\n        }\n      })\n    }\n    deInitOnHandlers(element)\n    forEach(Object.keys(internalData), function(key) { if (key !== 'firstInitCompleted') delete internalData[key] })\n  }\n\n  /**\n   * @param {Node} element\n   */\n  function cleanUpElement(element) {\n    triggerEvent(element, 'htmx:beforeCleanupElement')\n    deInitNode(element)\n    // @ts-ignore\n    forEach(element.children, function(child) { cleanUpElement(child) })\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapOuterHTML(target, fragment, settleInfo) {\n    if (target.tagName === 'BODY') { // special case the body to innerHTML because DocumentFragments can't contain a body elt unfortunately\n      return swapInnerHTML(target, fragment, settleInfo)\n    }\n    /** @type {Node} */\n    let newElt\n    const eltBeforeNewContent = target.previousSibling\n    const parentNode = parentElt(target)\n    if (!parentNode) { // when parent node disappears, we can't do anything\n      return\n    }\n    insertNodesBefore(parentNode, target, fragment, settleInfo)\n    if (eltBeforeNewContent == null) {\n      newElt = parentNode.firstChild\n    } else {\n      newElt = eltBeforeNewContent.nextSibling\n    }\n    settleInfo.elts = settleInfo.elts.filter(function(e) { return e !== target })\n    // scan through all newly added content and add all elements to the settle info so we trigger\n    // events properly on them\n    while (newElt && newElt !== target) {\n      if (newElt instanceof Element) {\n        settleInfo.elts.push(newElt)\n      }\n      newElt = newElt.nextSibling\n    }\n    cleanUpElement(target)\n    target.remove()\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapAfterBegin(target, fragment, settleInfo) {\n    return insertNodesBefore(target, target.firstChild, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapBeforeBegin(target, fragment, settleInfo) {\n    return insertNodesBefore(parentElt(target), target, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapBeforeEnd(target, fragment, settleInfo) {\n    return insertNodesBefore(target, null, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapAfterEnd(target, fragment, settleInfo) {\n    return insertNodesBefore(parentElt(target), target.nextSibling, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Element} target\n   */\n  function swapDelete(target) {\n    cleanUpElement(target)\n    const parent = parentElt(target)\n    if (parent) {\n      return parent.removeChild(target)\n    }\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapInnerHTML(target, fragment, settleInfo) {\n    const firstChild = target.firstChild\n    insertNodesBefore(target, firstChild, fragment, settleInfo)\n    if (firstChild) {\n      while (firstChild.nextSibling) {\n        cleanUpElement(firstChild.nextSibling)\n        target.removeChild(firstChild.nextSibling)\n      }\n      cleanUpElement(firstChild)\n      target.removeChild(firstChild)\n    }\n  }\n\n  /**\n   * @param {HtmxSwapStyle} swapStyle\n   * @param {Element} elt\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapWithStyle(swapStyle, elt, target, fragment, settleInfo) {\n    switch (swapStyle) {\n      case 'none':\n        return\n      case 'outerHTML':\n        swapOuterHTML(target, fragment, settleInfo)\n        return\n      case 'afterbegin':\n        swapAfterBegin(target, fragment, settleInfo)\n        return\n      case 'beforebegin':\n        swapBeforeBegin(target, fragment, settleInfo)\n        return\n      case 'beforeend':\n        swapBeforeEnd(target, fragment, settleInfo)\n        return\n      case 'afterend':\n        swapAfterEnd(target, fragment, settleInfo)\n        return\n      case 'delete':\n        swapDelete(target)\n        return\n      default:\n        var extensions = getExtensions(elt)\n        for (let i = 0; i < extensions.length; i++) {\n          const ext = extensions[i]\n          try {\n            const newElements = ext.handleSwap(swapStyle, target, fragment, settleInfo)\n            if (newElements) {\n              if (Array.isArray(newElements)) {\n                // if handleSwap returns an array (like) of elements, we handle them\n                for (let j = 0; j < newElements.length; j++) {\n                  const child = newElements[j]\n                  if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n                    settleInfo.tasks.push(makeAjaxLoadTask(child))\n                  }\n                }\n              }\n              return\n            }\n          } catch (e) {\n            logError(e)\n          }\n        }\n        if (swapStyle === 'innerHTML') {\n          swapInnerHTML(target, fragment, settleInfo)\n        } else {\n          swapWithStyle(htmx.config.defaultSwapStyle, elt, target, fragment, settleInfo)\n        }\n    }\n  }\n\n  /**\n   * @param {DocumentFragment} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   * @param {Node|Document} [rootNode]\n   */\n  function findAndSwapOobElements(fragment, settleInfo, rootNode) {\n    var oobElts = findAll(fragment, '[hx-swap-oob], [data-hx-swap-oob]')\n    forEach(oobElts, function(oobElement) {\n      if (htmx.config.allowNestedOobSwaps || oobElement.parentElement === null) {\n        const oobValue = getAttributeValue(oobElement, 'hx-swap-oob')\n        if (oobValue != null) {\n          oobSwap(oobValue, oobElement, settleInfo, rootNode)\n        }\n      } else {\n        oobElement.removeAttribute('hx-swap-oob')\n        oobElement.removeAttribute('data-hx-swap-oob')\n      }\n    })\n    return oobElts.length > 0\n  }\n\n  /**\n   * Implements complete swapping pipeline, including: delay, view transitions, focus and selection preservation,\n   * title updates, scroll, OOB swapping, normal swapping and settling\n   * @param {string|Element} target\n   * @param {string} content\n   * @param {HtmxSwapSpecification} swapSpec\n   * @param {SwapOptions} [swapOptions]\n   */\n  function swap(target, content, swapSpec, swapOptions) {\n    if (!swapOptions) {\n      swapOptions = {}\n    }\n    // optional transition API promise callbacks\n    let settleResolve = null\n    let settleReject = null\n\n    let doSwap = function() {\n      maybeCall(swapOptions.beforeSwapCallback)\n\n      target = resolveTarget(target)\n      const rootNode = swapOptions.contextElement ? getRootNode(swapOptions.contextElement, false) : getDocument()\n\n      // preserve focus and selection\n      const activeElt = document.activeElement\n      let selectionInfo = {}\n      selectionInfo = {\n        elt: activeElt,\n        // @ts-ignore\n        start: activeElt ? activeElt.selectionStart : null,\n        // @ts-ignore\n        end: activeElt ? activeElt.selectionEnd : null\n      }\n      const settleInfo = makeSettleInfo(target)\n\n      // For text content swaps, don't parse the response as HTML, just insert it\n      if (swapSpec.swapStyle === 'textContent') {\n        target.textContent = content\n      // Otherwise, make the fragment and process it\n      } else {\n        let fragment = makeFragment(content)\n\n        settleInfo.title = swapOptions.title || fragment.title\n        if (swapOptions.historyRequest) {\n          // @ts-ignore fragment can be a parentNode Element\n          fragment = fragment.querySelector('[hx-history-elt],[data-hx-history-elt]') || fragment\n        }\n\n        // select-oob swaps\n        if (swapOptions.selectOOB) {\n          const oobSelectValues = swapOptions.selectOOB.split(',')\n          for (let i = 0; i < oobSelectValues.length; i++) {\n            const oobSelectValue = oobSelectValues[i].split(':', 2)\n            let id = oobSelectValue[0].trim()\n            if (id.indexOf('#') === 0) {\n              id = id.substring(1)\n            }\n            const oobValue = oobSelectValue[1] || 'true'\n            const oobElement = fragment.querySelector('#' + id)\n            if (oobElement) {\n              oobSwap(oobValue, oobElement, settleInfo, rootNode)\n            }\n          }\n        }\n        // oob swaps\n        findAndSwapOobElements(fragment, settleInfo, rootNode)\n        forEach(findAll(fragment, 'template'), /** @param {HTMLTemplateElement} template */function(template) {\n          if (template.content && findAndSwapOobElements(template.content, settleInfo, rootNode)) {\n            // Avoid polluting the DOM with empty templates that were only used to encapsulate oob swap\n            template.remove()\n          }\n        })\n\n        // normal swap\n        if (swapOptions.select) {\n          const newFragment = getDocument().createDocumentFragment()\n          forEach(fragment.querySelectorAll(swapOptions.select), function(node) {\n            newFragment.appendChild(node)\n          })\n          fragment = newFragment\n        }\n        handlePreservedElements(fragment)\n        swapWithStyle(swapSpec.swapStyle, swapOptions.contextElement, target, fragment, settleInfo)\n        restorePreservedElements()\n      }\n\n      // apply saved focus and selection information to swapped content\n      if (selectionInfo.elt &&\n        !bodyContains(selectionInfo.elt) &&\n        getRawAttribute(selectionInfo.elt, 'id')) {\n        const newActiveElt = document.getElementById(getRawAttribute(selectionInfo.elt, 'id'))\n        const focusOptions = { preventScroll: swapSpec.focusScroll !== undefined ? !swapSpec.focusScroll : !htmx.config.defaultFocusScroll }\n        if (newActiveElt) {\n          // @ts-ignore\n          if (selectionInfo.start && newActiveElt.setSelectionRange) {\n            try {\n              // @ts-ignore\n              newActiveElt.setSelectionRange(selectionInfo.start, selectionInfo.end)\n            } catch (e) {\n              // the setSelectionRange method is present on fields that don't support it, so just let this fail\n            }\n          }\n          newActiveElt.focus(focusOptions)\n        }\n      }\n\n      target.classList.remove(htmx.config.swappingClass)\n      forEach(settleInfo.elts, function(elt) {\n        if (elt.classList) {\n          elt.classList.add(htmx.config.settlingClass)\n        }\n        triggerEvent(elt, 'htmx:afterSwap', swapOptions.eventInfo)\n      })\n      maybeCall(swapOptions.afterSwapCallback)\n\n      // merge in new title after swap but before settle\n      if (!swapSpec.ignoreTitle) {\n        handleTitle(settleInfo.title)\n      }\n\n      // settle\n      const doSettle = function() {\n        forEach(settleInfo.tasks, function(task) {\n          task.call()\n        })\n        forEach(settleInfo.elts, function(elt) {\n          if (elt.classList) {\n            elt.classList.remove(htmx.config.settlingClass)\n          }\n          triggerEvent(elt, 'htmx:afterSettle', swapOptions.eventInfo)\n        })\n\n        if (swapOptions.anchor) {\n          const anchorTarget = asElement(resolveTarget('#' + swapOptions.anchor))\n          if (anchorTarget) {\n            anchorTarget.scrollIntoView({ block: 'start', behavior: 'auto' })\n          }\n        }\n\n        updateScrollState(settleInfo.elts, swapSpec)\n        maybeCall(swapOptions.afterSettleCallback)\n        maybeCall(settleResolve)\n      }\n\n      if (swapSpec.settleDelay > 0) {\n        getWindow().setTimeout(doSettle, swapSpec.settleDelay)\n      } else {\n        doSettle()\n      }\n    }\n    let shouldTransition = htmx.config.globalViewTransitions\n    if (swapSpec.hasOwnProperty('transition')) {\n      shouldTransition = swapSpec.transition\n    }\n\n    const elt = swapOptions.contextElement || getDocument()\n\n    if (shouldTransition &&\n            triggerEvent(elt, 'htmx:beforeTransition', swapOptions.eventInfo) &&\n            typeof Promise !== 'undefined' &&\n            // @ts-ignore experimental feature atm\n            document.startViewTransition) {\n      const settlePromise = new Promise(function(_resolve, _reject) {\n        settleResolve = _resolve\n        settleReject = _reject\n      })\n      // wrap the original doSwap() in a call to startViewTransition()\n      const innerDoSwap = doSwap\n      doSwap = function() {\n        // @ts-ignore experimental feature atm\n        document.startViewTransition(function() {\n          innerDoSwap()\n          return settlePromise\n        })\n      }\n    }\n\n    try {\n      if (swapSpec?.swapDelay && swapSpec.swapDelay > 0) {\n        getWindow().setTimeout(doSwap, swapSpec.swapDelay)\n      } else {\n        doSwap()\n      }\n    } catch (e) {\n      triggerErrorEvent(elt, 'htmx:swapError', swapOptions.eventInfo)\n      maybeCall(settleReject)\n      throw e\n    }\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {string} header\n   * @param {EventTarget} elt\n   */\n  function handleTriggerHeader(xhr, header, elt) {\n    const triggerBody = xhr.getResponseHeader(header)\n    if (triggerBody.indexOf('{') === 0) {\n      const triggers = parseJSON(triggerBody)\n      for (const eventName in triggers) {\n        if (triggers.hasOwnProperty(eventName)) {\n          let detail = triggers[eventName]\n          if (isRawObject(detail)) {\n            // @ts-ignore\n            elt = detail.target !== undefined ? detail.target : elt\n          } else {\n            detail = { value: detail }\n          }\n          triggerEvent(elt, eventName, detail)\n        }\n      }\n    } else {\n      const eventNames = triggerBody.split(',')\n      for (let i = 0; i < eventNames.length; i++) {\n        triggerEvent(elt, eventNames[i].trim(), [])\n      }\n    }\n  }\n\n  const WHITESPACE = /\\s/\n  const WHITESPACE_OR_COMMA = /[\\s,]/\n  const SYMBOL_START = /[_$a-zA-Z]/\n  const SYMBOL_CONT = /[_$a-zA-Z0-9]/\n  const STRINGISH_START = ['\"', \"'\", '/']\n  const NOT_WHITESPACE = /[^\\s]/\n  const COMBINED_SELECTOR_START = /[{(]/\n  const COMBINED_SELECTOR_END = /[})]/\n\n  /**\n   * @param {string} str\n   * @returns {string[]}\n   */\n  function tokenizeString(str) {\n    /** @type string[] */\n    const tokens = []\n    let position = 0\n    while (position < str.length) {\n      if (SYMBOL_START.exec(str.charAt(position))) {\n        var startPosition = position\n        while (SYMBOL_CONT.exec(str.charAt(position + 1))) {\n          position++\n        }\n        tokens.push(str.substring(startPosition, position + 1))\n      } else if (STRINGISH_START.indexOf(str.charAt(position)) !== -1) {\n        const startChar = str.charAt(position)\n        var startPosition = position\n        position++\n        while (position < str.length && str.charAt(position) !== startChar) {\n          if (str.charAt(position) === '\\\\') {\n            position++\n          }\n          position++\n        }\n        tokens.push(str.substring(startPosition, position + 1))\n      } else {\n        const symbol = str.charAt(position)\n        tokens.push(symbol)\n      }\n      position++\n    }\n    return tokens\n  }\n\n  /**\n   * @param {string} token\n   * @param {string|null} last\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  function isPossibleRelativeReference(token, last, paramName) {\n    return SYMBOL_START.exec(token.charAt(0)) &&\n      token !== 'true' &&\n      token !== 'false' &&\n      token !== 'this' &&\n      token !== paramName &&\n      last !== '.'\n  }\n\n  /**\n   * @param {EventTarget|string} elt\n   * @param {string[]} tokens\n   * @param {string} paramName\n   * @returns {ConditionalFunction|null}\n   */\n  function maybeGenerateConditional(elt, tokens, paramName) {\n    if (tokens[0] === '[') {\n      tokens.shift()\n      let bracketCount = 1\n      let conditionalSource = ' return (function(' + paramName + '){ return ('\n      let last = null\n      while (tokens.length > 0) {\n        const token = tokens[0]\n        // @ts-ignore For some reason tsc doesn't understand the shift call, and thinks we're comparing the same value here, i.e. '[' vs ']'\n        if (token === ']') {\n          bracketCount--\n          if (bracketCount === 0) {\n            if (last === null) {\n              conditionalSource = conditionalSource + 'true'\n            }\n            tokens.shift()\n            conditionalSource += ')})'\n            try {\n              const conditionFunction = maybeEval(elt, function() {\n                return Function(conditionalSource)()\n              },\n              function() { return true })\n              conditionFunction.source = conditionalSource\n              return conditionFunction\n            } catch (e) {\n              triggerErrorEvent(getDocument().body, 'htmx:syntax:error', { error: e, source: conditionalSource })\n              return null\n            }\n          }\n        } else if (token === '[') {\n          bracketCount++\n        }\n        if (isPossibleRelativeReference(token, last, paramName)) {\n          conditionalSource += '((' + paramName + '.' + token + ') ? (' + paramName + '.' + token + ') : (window.' + token + '))'\n        } else {\n          conditionalSource = conditionalSource + token\n        }\n        last = tokens.shift()\n      }\n    }\n  }\n\n  /**\n   * @param {string[]} tokens\n   * @param {RegExp} match\n   * @returns {string}\n   */\n  function consumeUntil(tokens, match) {\n    let result = ''\n    while (tokens.length > 0 && !match.test(tokens[0])) {\n      result += tokens.shift()\n    }\n    return result\n  }\n\n  /**\n   * @param {string[]} tokens\n   * @returns {string}\n   */\n  function consumeCSSSelector(tokens) {\n    let result\n    if (tokens.length > 0 && COMBINED_SELECTOR_START.test(tokens[0])) {\n      tokens.shift()\n      result = consumeUntil(tokens, COMBINED_SELECTOR_END).trim()\n      tokens.shift()\n    } else {\n      result = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n    }\n    return result\n  }\n\n  const INPUT_SELECTOR = 'input, textarea, select'\n\n  /**\n   * @param {Element} elt\n   * @param {string} explicitTrigger\n   * @param {Object} cache for trigger specs\n   * @returns {HtmxTriggerSpecification[]}\n   */\n  function parseAndCacheTrigger(elt, explicitTrigger, cache) {\n    /** @type HtmxTriggerSpecification[] */\n    const triggerSpecs = []\n    const tokens = tokenizeString(explicitTrigger)\n    do {\n      consumeUntil(tokens, NOT_WHITESPACE)\n      const initialLength = tokens.length\n      const trigger = consumeUntil(tokens, /[,\\[\\s]/)\n      if (trigger !== '') {\n        if (trigger === 'every') {\n          /** @type HtmxTriggerSpecification */\n          const every = { trigger: 'every' }\n          consumeUntil(tokens, NOT_WHITESPACE)\n          every.pollInterval = parseInterval(consumeUntil(tokens, /[,\\[\\s]/))\n          consumeUntil(tokens, NOT_WHITESPACE)\n          var eventFilter = maybeGenerateConditional(elt, tokens, 'event')\n          if (eventFilter) {\n            every.eventFilter = eventFilter\n          }\n          triggerSpecs.push(every)\n        } else {\n          /** @type HtmxTriggerSpecification */\n          const triggerSpec = { trigger }\n          var eventFilter = maybeGenerateConditional(elt, tokens, 'event')\n          if (eventFilter) {\n            triggerSpec.eventFilter = eventFilter\n          }\n          consumeUntil(tokens, NOT_WHITESPACE)\n          while (tokens.length > 0 && tokens[0] !== ',') {\n            const token = tokens.shift()\n            if (token === 'changed') {\n              triggerSpec.changed = true\n            } else if (token === 'once') {\n              triggerSpec.once = true\n            } else if (token === 'consume') {\n              triggerSpec.consume = true\n            } else if (token === 'delay' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec.delay = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA))\n            } else if (token === 'from' && tokens[0] === ':') {\n              tokens.shift()\n              if (COMBINED_SELECTOR_START.test(tokens[0])) {\n                var from_arg = consumeCSSSelector(tokens)\n              } else {\n                var from_arg = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n                if (from_arg === 'closest' || from_arg === 'find' || from_arg === 'next' || from_arg === 'previous') {\n                  tokens.shift()\n                  const selector = consumeCSSSelector(tokens)\n                  // `next` and `previous` allow a selector-less syntax\n                  if (selector.length > 0) {\n                    from_arg += ' ' + selector\n                  }\n                }\n              }\n              triggerSpec.from = from_arg\n            } else if (token === 'target' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec.target = consumeCSSSelector(tokens)\n            } else if (token === 'throttle' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec.throttle = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA))\n            } else if (token === 'queue' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec.queue = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n            } else if (token === 'root' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec[token] = consumeCSSSelector(tokens)\n            } else if (token === 'threshold' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec[token] = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n            } else {\n              triggerErrorEvent(elt, 'htmx:syntax:error', { token: tokens.shift() })\n            }\n            consumeUntil(tokens, NOT_WHITESPACE)\n          }\n          triggerSpecs.push(triggerSpec)\n        }\n      }\n      if (tokens.length === initialLength) {\n        triggerErrorEvent(elt, 'htmx:syntax:error', { token: tokens.shift() })\n      }\n      consumeUntil(tokens, NOT_WHITESPACE)\n    } while (tokens[0] === ',' && tokens.shift())\n    if (cache) {\n      cache[explicitTrigger] = triggerSpecs\n    }\n    return triggerSpecs\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {HtmxTriggerSpecification[]}\n   */\n  function getTriggerSpecs(elt) {\n    const explicitTrigger = getAttributeValue(elt, 'hx-trigger')\n    let triggerSpecs = []\n    if (explicitTrigger) {\n      const cache = htmx.config.triggerSpecsCache\n      triggerSpecs = (cache && cache[explicitTrigger]) || parseAndCacheTrigger(elt, explicitTrigger, cache)\n    }\n\n    if (triggerSpecs.length > 0) {\n      return triggerSpecs\n    } else if (matches(elt, 'form')) {\n      return [{ trigger: 'submit' }]\n    } else if (matches(elt, 'input[type=\"button\"], input[type=\"submit\"]')) {\n      return [{ trigger: 'click' }]\n    } else if (matches(elt, INPUT_SELECTOR)) {\n      return [{ trigger: 'change' }]\n    } else {\n      return [{ trigger: 'click' }]\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function cancelPolling(elt) {\n    getInternalData(elt).cancelled = true\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxTriggerSpecification} spec\n   */\n  function processPolling(elt, handler, spec) {\n    const nodeData = getInternalData(elt)\n    nodeData.timeout = getWindow().setTimeout(function() {\n      if (bodyContains(elt) && nodeData.cancelled !== true) {\n        if (!maybeFilterEvent(spec, elt, makeEvent('hx:poll:trigger', {\n          triggerSpec: spec,\n          target: elt\n        }))) {\n          handler(elt)\n        }\n        processPolling(elt, handler, spec)\n      }\n    }, spec.pollInterval)\n  }\n\n  /**\n   * @param {HTMLAnchorElement} elt\n   * @returns {boolean}\n   */\n  function isLocalLink(elt) {\n    return location.hostname === elt.hostname &&\n      getRawAttribute(elt, 'href') &&\n      getRawAttribute(elt, 'href').indexOf('#') !== 0\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function eltIsDisabled(elt) {\n    return closest(elt, htmx.config.disableSelector)\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification[]} triggerSpecs\n   */\n  function boostElement(elt, nodeData, triggerSpecs) {\n    if ((elt instanceof HTMLAnchorElement && isLocalLink(elt) && (elt.target === '' || elt.target === '_self')) || (elt.tagName === 'FORM' && String(getRawAttribute(elt, 'method')).toLowerCase() !== 'dialog')) {\n      nodeData.boosted = true\n      let verb, path\n      if (elt.tagName === 'A') {\n        verb = (/** @type HttpVerb */('get'))\n        path = getRawAttribute(elt, 'href')\n      } else {\n        const rawAttribute = getRawAttribute(elt, 'method')\n        verb = (/** @type HttpVerb */(rawAttribute ? rawAttribute.toLowerCase() : 'get'))\n        path = getRawAttribute(elt, 'action')\n        if (path == null || path === '') {\n          // if there is no action attribute on the form set path to current href before the\n          // following logic to properly clear parameters on a GET (not on a POST!)\n          path = location.href\n        }\n        if (verb === 'get' && path.includes('?')) {\n          path = path.replace(/\\?[^#]+/, '')\n        }\n      }\n      triggerSpecs.forEach(function(triggerSpec) {\n        addEventListener(elt, function(node, evt) {\n          const elt = asElement(node)\n          if (eltIsDisabled(elt)) {\n            cleanUpElement(elt)\n            return\n          }\n          issueAjaxRequest(verb, path, elt, evt)\n        }, nodeData, triggerSpec, true)\n      })\n    }\n  }\n\n  /**\n   * @param {Event} evt\n   * @param {Element} elt\n   * @returns {boolean}\n   */\n  function shouldCancel(evt, elt) {\n    if (evt.type === 'submit' && elt.tagName === 'FORM') {\n      return true\n    } else if (evt.type === 'click') {\n      // find button wrapping the trigger element\n      const btn = /** @type {HTMLButtonElement|HTMLInputElement|null} */ (elt.closest('input[type=\"submit\"], button'))\n      // Do not cancel on buttons that 1) don't have a related form or 2) have a type attribute of 'reset'/'button'.\n      if (btn && btn.form && btn.type === 'submit') {\n        return true\n      }\n\n      // find link wrapping the trigger element\n      const link = elt.closest('a')\n      // Allow links with href=\"#fragment\" (anchors with content after #) to perform normal fragment navigation.\n      // Cancel default action for links with href=\"#\" (bare hash) to prevent scrolling to top and unwanted URL changes.\n      const samePageAnchor = /^#.+/\n      if (link && link.href && !samePageAnchor.test(link.getAttribute('href'))) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {Event|MouseEvent|KeyboardEvent|TouchEvent} evt\n   * @returns {boolean}\n   */\n  function ignoreBoostedAnchorCtrlClick(elt, evt) {\n    return getInternalData(elt).boosted && elt instanceof HTMLAnchorElement && evt.type === 'click' &&\n      // @ts-ignore this will resolve to undefined for events that don't define those properties, which is fine\n      (evt.ctrlKey || evt.metaKey)\n  }\n\n  /**\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {Node} elt\n   * @param {Event} evt\n   * @returns {boolean}\n   */\n  function maybeFilterEvent(triggerSpec, elt, evt) {\n    const eventFilter = triggerSpec.eventFilter\n    if (eventFilter) {\n      try {\n        return eventFilter.call(elt, evt) !== true\n      } catch (e) {\n        const source = eventFilter.source\n        triggerErrorEvent(getDocument().body, 'htmx:eventFilter:error', { error: e, source })\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {boolean} [explicitCancel]\n   */\n  function addEventListener(elt, handler, nodeData, triggerSpec, explicitCancel) {\n    const elementData = getInternalData(elt)\n    /** @type {(Node|Window)[]} */\n    let eltsToListenOn\n    if (triggerSpec.from) {\n      eltsToListenOn = querySelectorAllExt(elt, triggerSpec.from)\n    } else {\n      eltsToListenOn = [elt]\n    }\n    // store the initial values of the elements, so we can tell if they change\n    if (triggerSpec.changed) {\n      if (!('lastValue' in elementData)) {\n        elementData.lastValue = new WeakMap()\n      }\n      eltsToListenOn.forEach(function(eltToListenOn) {\n        if (!elementData.lastValue.has(triggerSpec)) {\n          elementData.lastValue.set(triggerSpec, new WeakMap())\n        }\n        // @ts-ignore value will be undefined for non-input elements, which is fine\n        elementData.lastValue.get(triggerSpec).set(eltToListenOn, eltToListenOn.value)\n      })\n    }\n    forEach(eltsToListenOn, function(eltToListenOn) {\n      /** @type EventListener */\n      const eventListener = function(evt) {\n        if (!bodyContains(elt)) {\n          eltToListenOn.removeEventListener(triggerSpec.trigger, eventListener)\n          return\n        }\n        if (ignoreBoostedAnchorCtrlClick(elt, evt)) {\n          return\n        }\n        if (explicitCancel || shouldCancel(evt, eltToListenOn)) {\n          evt.preventDefault()\n        }\n        if (maybeFilterEvent(triggerSpec, elt, evt)) {\n          return\n        }\n        const eventData = getInternalData(evt)\n        eventData.triggerSpec = triggerSpec\n        if (eventData.handledFor == null) {\n          eventData.handledFor = []\n        }\n        if (eventData.handledFor.indexOf(elt) < 0) {\n          eventData.handledFor.push(elt)\n          if (triggerSpec.consume) {\n            evt.stopPropagation()\n          }\n          if (triggerSpec.target && evt.target) {\n            if (!matches(asElement(evt.target), triggerSpec.target)) {\n              return\n            }\n          }\n          if (triggerSpec.once) {\n            if (elementData.triggeredOnce) {\n              return\n            } else {\n              elementData.triggeredOnce = true\n            }\n          }\n          if (triggerSpec.changed) {\n            const node = evt.target\n            // @ts-ignore value will be undefined for non-input elements, which is fine\n            const value = node.value\n            const lastValue = elementData.lastValue.get(triggerSpec)\n            if (lastValue.has(node) && lastValue.get(node) === value) {\n              return\n            }\n            lastValue.set(node, value)\n          }\n          if (elementData.delayed) {\n            clearTimeout(elementData.delayed)\n          }\n          if (elementData.throttle) {\n            return\n          }\n\n          if (triggerSpec.throttle > 0) {\n            if (!elementData.throttle) {\n              triggerEvent(elt, 'htmx:trigger')\n              handler(elt, evt)\n              elementData.throttle = getWindow().setTimeout(function() {\n                elementData.throttle = null\n              }, triggerSpec.throttle)\n            }\n          } else if (triggerSpec.delay > 0) {\n            elementData.delayed = getWindow().setTimeout(function() {\n              triggerEvent(elt, 'htmx:trigger')\n              handler(elt, evt)\n            }, triggerSpec.delay)\n          } else {\n            triggerEvent(elt, 'htmx:trigger')\n            handler(elt, evt)\n          }\n        }\n      }\n      if (nodeData.listenerInfos == null) {\n        nodeData.listenerInfos = []\n      }\n      nodeData.listenerInfos.push({\n        trigger: triggerSpec.trigger,\n        listener: eventListener,\n        on: eltToListenOn\n      })\n      eltToListenOn.addEventListener(triggerSpec.trigger, eventListener)\n    })\n  }\n\n  let windowIsScrolling = false // used by initScrollHandler\n  let scrollHandler = null\n  function initScrollHandler() {\n    if (!scrollHandler) {\n      scrollHandler = function() {\n        windowIsScrolling = true\n      }\n      window.addEventListener('scroll', scrollHandler)\n      window.addEventListener('resize', scrollHandler)\n      setInterval(function() {\n        if (windowIsScrolling) {\n          windowIsScrolling = false\n          forEach(getDocument().querySelectorAll(\"[hx-trigger*='revealed'],[data-hx-trigger*='revealed']\"), function(elt) {\n            maybeReveal(elt)\n          })\n        }\n      }, 200)\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function maybeReveal(elt) {\n    if (!hasAttribute(elt, 'data-hx-revealed') && isScrolledIntoView(elt)) {\n      elt.setAttribute('data-hx-revealed', 'true')\n      const nodeData = getInternalData(elt)\n      if (nodeData.initHash) {\n        triggerEvent(elt, 'revealed')\n      } else {\n        // if the node isn't initialized, wait for it before triggering the request\n        elt.addEventListener('htmx:afterProcessNode', function() { triggerEvent(elt, 'revealed') }, { once: true })\n      }\n    }\n  }\n\n  //= ===================================================================\n\n  /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {number} delay\n   */\n  function loadImmediately(elt, handler, nodeData, delay) {\n    const load = function() {\n      if (!nodeData.loaded) {\n        nodeData.loaded = true\n        triggerEvent(elt, 'htmx:trigger')\n        handler(elt)\n      }\n    }\n    if (delay > 0) {\n      getWindow().setTimeout(load, delay)\n    } else {\n      load()\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification[]} triggerSpecs\n   * @returns {boolean}\n   */\n  function processVerbs(elt, nodeData, triggerSpecs) {\n    let explicitAction = false\n    forEach(VERBS, function(verb) {\n      if (hasAttribute(elt, 'hx-' + verb)) {\n        const path = getAttributeValue(elt, 'hx-' + verb)\n        explicitAction = true\n        nodeData.path = path\n        nodeData.verb = verb\n        triggerSpecs.forEach(function(triggerSpec) {\n          addTriggerHandler(elt, triggerSpec, nodeData, function(node, evt) {\n            const elt = asElement(node)\n            if (eltIsDisabled(elt)) {\n              cleanUpElement(elt)\n              return\n            }\n            issueAjaxRequest(verb, path, elt, evt)\n          })\n        })\n      }\n    })\n    return explicitAction\n  }\n\n  /**\n   * @callback TriggerHandler\n   * @param {Element} elt\n   * @param {Event} [evt]\n   */\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {TriggerHandler} handler\n   */\n  function addTriggerHandler(elt, triggerSpec, nodeData, handler) {\n    if (triggerSpec.trigger === 'revealed') {\n      initScrollHandler()\n      addEventListener(elt, handler, nodeData, triggerSpec)\n      maybeReveal(asElement(elt))\n    } else if (triggerSpec.trigger === 'intersect') {\n      const observerOptions = {}\n      if (triggerSpec.root) {\n        observerOptions.root = querySelectorExt(elt, triggerSpec.root)\n      }\n      if (triggerSpec.threshold) {\n        observerOptions.threshold = parseFloat(triggerSpec.threshold)\n      }\n      const observer = new IntersectionObserver(function(entries) {\n        for (let i = 0; i < entries.length; i++) {\n          const entry = entries[i]\n          if (entry.isIntersecting) {\n            triggerEvent(elt, 'intersect')\n            break\n          }\n        }\n      }, observerOptions)\n      observer.observe(asElement(elt))\n      addEventListener(asElement(elt), handler, nodeData, triggerSpec)\n    } else if (!nodeData.firstInitCompleted && triggerSpec.trigger === 'load') {\n      if (!maybeFilterEvent(triggerSpec, elt, makeEvent('load', { elt }))) {\n        loadImmediately(asElement(elt), handler, nodeData, triggerSpec.delay)\n      }\n    } else if (triggerSpec.pollInterval > 0) {\n      nodeData.polling = true\n      processPolling(asElement(elt), handler, triggerSpec)\n    } else {\n      addEventListener(elt, handler, nodeData, triggerSpec)\n    }\n  }\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function shouldProcessHxOn(node) {\n    const elt = asElement(node)\n    if (!elt) {\n      return false\n    }\n    const attributes = elt.attributes\n    for (let j = 0; j < attributes.length; j++) {\n      const attrName = attributes[j].name\n      if (startsWith(attrName, 'hx-on:') || startsWith(attrName, 'data-hx-on:') ||\n        startsWith(attrName, 'hx-on-') || startsWith(attrName, 'data-hx-on-')) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Node} elt\n   * @returns {Element[]}\n   */\n  const HX_ON_QUERY = new XPathEvaluator()\n    .createExpression('.//*[@*[ starts-with(name(), \"hx-on:\") or starts-with(name(), \"data-hx-on:\") or' +\n      ' starts-with(name(), \"hx-on-\") or starts-with(name(), \"data-hx-on-\") ]]')\n\n  function processHXOnRoot(elt, elements) {\n    if (shouldProcessHxOn(elt)) {\n      elements.push(asElement(elt))\n    }\n    const iter = HX_ON_QUERY.evaluate(elt)\n    let node = null\n    while (node = iter.iterateNext()) elements.push(asElement(node))\n  }\n\n  function findHxOnWildcardElements(elt) {\n    /** @type {Element[]} */\n    const elements = []\n    if (elt instanceof DocumentFragment) {\n      for (const child of elt.childNodes) {\n        processHXOnRoot(child, elements)\n      }\n    } else {\n      processHXOnRoot(elt, elements)\n    }\n    return elements\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {NodeListOf<Element>|[]}\n   */\n  function findElementsToProcess(elt) {\n    if (elt.querySelectorAll) {\n      const boostedSelector = ', [hx-boost] a, [data-hx-boost] a, a[hx-boost], a[data-hx-boost]'\n\n      const extensionSelectors = []\n      for (const e in extensions) {\n        const extension = extensions[e]\n        if (extension.getSelectors) {\n          var selectors = extension.getSelectors()\n          if (selectors) {\n            extensionSelectors.push(selectors)\n          }\n        }\n      }\n\n      const results = elt.querySelectorAll(VERB_SELECTOR + boostedSelector + \", form, [type='submit'],\" +\n        ' [hx-ext], [data-hx-ext], [hx-trigger], [data-hx-trigger]' + extensionSelectors.flat().map(s => ', ' + s).join(''))\n\n      return results\n    } else {\n      return []\n    }\n  }\n\n  /**\n   * Handle submit buttons/inputs that have the form attribute set\n   * see https://developer.mozilla.org/docs/Web/HTML/Element/button\n   * @param {Event} evt\n   */\n  function maybeSetLastButtonClicked(evt) {\n    const elt = getTargetButton(evt.target)\n    const internalData = getRelatedFormData(evt)\n    if (internalData) {\n      internalData.lastButtonClicked = elt\n    }\n  }\n\n  /**\n   * @param {Event} evt\n   */\n  function maybeUnsetLastButtonClicked(evt) {\n    const internalData = getRelatedFormData(evt)\n    if (internalData) {\n      internalData.lastButtonClicked = null\n    }\n  }\n\n  /**\n   * @param {EventTarget} target\n   * @returns {HTMLButtonElement|HTMLInputElement|null}\n   */\n  function getTargetButton(target) {\n    return /** @type {HTMLButtonElement|HTMLInputElement|null} */ (closest(asElement(target), \"button, input[type='submit']\"))\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {HTMLFormElement|null}\n   */\n  function getRelatedForm(elt) {\n    // @ts-ignore Get the related form if available, else find the closest parent form\n    return elt.form || closest(elt, 'form')\n  }\n\n  /**\n   * @param {Event} evt\n   * @returns {HtmxNodeInternalData|undefined}\n   */\n  function getRelatedFormData(evt) {\n    const elt = getTargetButton(evt.target)\n    if (!elt) {\n      return\n    }\n    const form = getRelatedForm(elt)\n    if (!form) {\n      return\n    }\n    return getInternalData(form)\n  }\n\n  /**\n   * @param {EventTarget} elt\n   */\n  function initButtonTracking(elt) {\n    // need to handle both click and focus in:\n    //   focusin - in case someone tabs in to a button and hits the space bar\n    //   click - on OSX buttons do not focus on click see https://bugs.webkit.org/show_bug.cgi?id=13724\n    elt.addEventListener('click', maybeSetLastButtonClicked)\n    elt.addEventListener('focusin', maybeSetLastButtonClicked)\n    elt.addEventListener('focusout', maybeUnsetLastButtonClicked)\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} eventName\n   * @param {string} code\n   */\n  function addHxOnEventHandler(elt, eventName, code) {\n    const nodeData = getInternalData(elt)\n    if (!Array.isArray(nodeData.onHandlers)) {\n      nodeData.onHandlers = []\n    }\n    let func\n    /** @type EventListener */\n    const listener = function(e) {\n      maybeEval(elt, function() {\n        if (eltIsDisabled(elt)) {\n          return\n        }\n        if (!func) {\n          func = new Function('event', code)\n        }\n        func.call(elt, e)\n      })\n    }\n    elt.addEventListener(eventName, listener)\n    nodeData.onHandlers.push({ event: eventName, listener })\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function processHxOnWildcard(elt) {\n    // wipe any previous on handlers so that this function takes precedence\n    deInitOnHandlers(elt)\n\n    for (let i = 0; i < elt.attributes.length; i++) {\n      const name = elt.attributes[i].name\n      const value = elt.attributes[i].value\n      if (startsWith(name, 'hx-on') || startsWith(name, 'data-hx-on')) {\n        const afterOnPosition = name.indexOf('-on') + 3\n        const nextChar = name.slice(afterOnPosition, afterOnPosition + 1)\n        if (nextChar === '-' || nextChar === ':') {\n          let eventName = name.slice(afterOnPosition + 1)\n          // if the eventName starts with a colon or dash, prepend \"htmx\" for shorthand support\n          if (startsWith(eventName, ':')) {\n            eventName = 'htmx' + eventName\n          } else if (startsWith(eventName, '-')) {\n            eventName = 'htmx:' + eventName.slice(1)\n          } else if (startsWith(eventName, 'htmx-')) {\n            eventName = 'htmx:' + eventName.slice(5)\n          }\n\n          addHxOnEventHandler(elt, eventName, value)\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Element|HTMLInputElement} elt\n   */\n  function initNode(elt) {\n    triggerEvent(elt, 'htmx:beforeProcessNode')\n\n    const nodeData = getInternalData(elt)\n    const triggerSpecs = getTriggerSpecs(elt)\n    const hasExplicitHttpAction = processVerbs(elt, nodeData, triggerSpecs)\n\n    if (!hasExplicitHttpAction) {\n      if (getClosestAttributeValue(elt, 'hx-boost') === 'true') {\n        boostElement(elt, nodeData, triggerSpecs)\n      } else if (hasAttribute(elt, 'hx-trigger')) {\n        triggerSpecs.forEach(function(triggerSpec) {\n          // For \"naked\" triggers, don't do anything at all\n          addTriggerHandler(elt, triggerSpec, nodeData, function() {\n          })\n        })\n      }\n    }\n\n    // Handle submit buttons/inputs that have the form attribute set\n    // see https://developer.mozilla.org/docs/Web/HTML/Element/button\n    if (elt.tagName === 'FORM' || (getRawAttribute(elt, 'type') === 'submit' && hasAttribute(elt, 'form'))) {\n      initButtonTracking(elt)\n    }\n\n    nodeData.firstInitCompleted = true\n    triggerEvent(elt, 'htmx:afterProcessNode')\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {boolean}\n   */\n  function maybeDeInitAndHash(elt) {\n    // Ensure only valid Elements and not shadow DOM roots are inited\n    if (!(elt instanceof Element)) {\n      return false\n    }\n\n    const nodeData = getInternalData(elt)\n    const hash = attributeHash(elt)\n    if (nodeData.initHash !== hash) {\n      deInitNode(elt)\n      nodeData.initHash = hash\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Processes new content, enabling htmx behavior. This can be useful if you have content that is added to the DOM outside of the normal htmx request cycle but still want htmx attributes to work.\n   *\n   * @see https://htmx.org/api/#process\n   *\n   * @param {Element|string} elt element to process\n   */\n  function processNode(elt) {\n    elt = resolveTarget(elt)\n    if (eltIsDisabled(elt)) {\n      cleanUpElement(elt)\n      return\n    }\n\n    const elementsToInit = []\n    if (maybeDeInitAndHash(elt)) {\n      elementsToInit.push(elt)\n    }\n    forEach(findElementsToProcess(elt), function(child) {\n      if (eltIsDisabled(child)) {\n        cleanUpElement(child)\n        return\n      }\n      if (maybeDeInitAndHash(child)) {\n        elementsToInit.push(child)\n      }\n    })\n\n    forEach(findHxOnWildcardElements(elt), processHxOnWildcard)\n    forEach(elementsToInit, initNode)\n  }\n\n  //= ===================================================================\n  // Event/Log Support\n  //= ===================================================================\n\n  /**\n   * @param {string} str\n   * @returns {string}\n   */\n  function kebabEventName(str) {\n    return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {any} detail\n   * @returns {CustomEvent}\n   */\n  function makeEvent(eventName, detail) {\n    // TODO: `composed: true` here is a hack to make global event handlers work with events in shadow DOM\n    // This breaks expected encapsulation but needs to be here until decided otherwise by core devs\n    return new CustomEvent(eventName, { bubbles: true, cancelable: true, composed: true, detail })\n  }\n\n  /**\n   * @param {EventTarget|string} elt\n   * @param {string} eventName\n   * @param {any=} detail\n   */\n  function triggerErrorEvent(elt, eventName, detail) {\n    triggerEvent(elt, eventName, mergeObjects({ error: eventName }, detail))\n  }\n\n  /**\n   * @param {string} eventName\n   * @returns {boolean}\n   */\n  function ignoreEventForLogging(eventName) {\n    return eventName === 'htmx:afterProcessNode'\n  }\n\n  /**\n   * `withExtensions` locates all active extensions for a provided element, then\n   * executes the provided function using each of the active extensions. You can filter\n   * the element's extensions by giving it a list of extensions to ignore. It should\n   * be called internally at every extendable execution point in htmx.\n   *\n   * @param {Element} elt\n   * @param {(extension:HtmxExtension) => void} toDo\n   * @param {string[]=} extensionsToIgnore\n   * @returns void\n   */\n  function withExtensions(elt, toDo, extensionsToIgnore) {\n    forEach(getExtensions(elt, [], extensionsToIgnore), function(extension) {\n      try {\n        toDo(extension)\n      } catch (e) {\n        logError(e)\n      }\n    })\n  }\n\n  function logError(msg) {\n    console.error(msg)\n  }\n\n  /**\n   * Triggers a given event on an element\n   *\n   * @see https://htmx.org/api/#trigger\n   *\n   * @param {EventTarget|string} elt the element to trigger the event on\n   * @param {string} eventName the name of the event to trigger\n   * @param {any=} detail details for the event\n   * @returns {boolean}\n   */\n  function triggerEvent(elt, eventName, detail) {\n    elt = resolveTarget(elt)\n    if (detail == null) {\n      detail = {}\n    }\n    detail.elt = elt\n    const event = makeEvent(eventName, detail)\n    if (htmx.logger && !ignoreEventForLogging(eventName)) {\n      htmx.logger(elt, eventName, detail)\n    }\n    if (detail.error) {\n      logError(detail.error)\n      triggerEvent(elt, 'htmx:error', { errorInfo: detail })\n    }\n    let eventResult = elt.dispatchEvent(event)\n    const kebabName = kebabEventName(eventName)\n    if (eventResult && kebabName !== eventName) {\n      const kebabedEvent = makeEvent(kebabName, event.detail)\n      eventResult = eventResult && elt.dispatchEvent(kebabedEvent)\n    }\n    withExtensions(asElement(elt), function(extension) {\n      eventResult = eventResult && (extension.onEvent(eventName, event) !== false && !event.defaultPrevented)\n    })\n    return eventResult\n  }\n\n  //= ===================================================================\n  // History Support\n  //= ===================================================================\n  let currentPathForHistory = location.pathname + location.search\n\n  /**\n   * @param {string} path\n   */\n  function setCurrentPathForHistory(path) {\n    currentPathForHistory = path\n    if (canAccessLocalStorage()) {\n      sessionStorage.setItem('htmx-current-path-for-history', path)\n    }\n  }\n\n  /**\n   * @returns {Element}\n   */\n  function getHistoryElement() {\n    const historyElt = getDocument().querySelector('[hx-history-elt],[data-hx-history-elt]')\n    return historyElt || getDocument().body\n  }\n\n  /**\n   * @param {string} url\n   * @param {Element} rootElt\n   */\n  function saveToHistoryCache(url, rootElt) {\n    if (!canAccessLocalStorage()) {\n      return\n    }\n\n    // get state to save\n    const innerHTML = cleanInnerHtmlForHistory(rootElt)\n    const title = getDocument().title\n    const scroll = window.scrollY\n\n    if (htmx.config.historyCacheSize <= 0) {\n      // make sure that an eventually already existing cache is purged\n      sessionStorage.removeItem('htmx-history-cache')\n      return\n    }\n\n    url = normalizePath(url)\n\n    const historyCache = parseJSON(sessionStorage.getItem('htmx-history-cache')) || []\n    for (let i = 0; i < historyCache.length; i++) {\n      if (historyCache[i].url === url) {\n        historyCache.splice(i, 1)\n        break\n      }\n    }\n\n    /** @type HtmxHistoryItem */\n    const newHistoryItem = { url, content: innerHTML, title, scroll }\n\n    triggerEvent(getDocument().body, 'htmx:historyItemCreated', { item: newHistoryItem, cache: historyCache })\n\n    historyCache.push(newHistoryItem)\n    while (historyCache.length > htmx.config.historyCacheSize) {\n      historyCache.shift()\n    }\n\n    // keep trying to save the cache until it succeeds or is empty\n    while (historyCache.length > 0) {\n      try {\n        sessionStorage.setItem('htmx-history-cache', JSON.stringify(historyCache))\n        break\n      } catch (e) {\n        triggerErrorEvent(getDocument().body, 'htmx:historyCacheError', { cause: e, cache: historyCache })\n        historyCache.shift() // shrink the cache and retry\n      }\n    }\n  }\n\n  /**\n   * @typedef {Object} HtmxHistoryItem\n   * @property {string} url\n   * @property {string} content\n   * @property {string} title\n   * @property {number} scroll\n   */\n\n  /**\n   * @param {string} url\n   * @returns {HtmxHistoryItem|null}\n   */\n  function getCachedHistory(url) {\n    if (!canAccessLocalStorage()) {\n      return null\n    }\n\n    url = normalizePath(url)\n\n    const historyCache = parseJSON(sessionStorage.getItem('htmx-history-cache')) || []\n    for (let i = 0; i < historyCache.length; i++) {\n      if (historyCache[i].url === url) {\n        return historyCache[i]\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {string}\n   */\n  function cleanInnerHtmlForHistory(elt) {\n    const className = htmx.config.requestClass\n    const clone = /** @type Element */ (elt.cloneNode(true))\n    forEach(findAll(clone, '.' + className), function(child) {\n      removeClassFromElement(child, className)\n    })\n    // remove the disabled attribute for any element disabled due to an htmx request\n    forEach(findAll(clone, '[data-disabled-by-htmx]'), function(child) {\n      child.removeAttribute('disabled')\n    })\n    return clone.innerHTML\n  }\n\n  function saveCurrentPageToHistory() {\n    const elt = getHistoryElement()\n    let path = currentPathForHistory\n    if (canAccessLocalStorage()) {\n      path = sessionStorage.getItem('htmx-current-path-for-history')\n    }\n    path = path || location.pathname + location.search\n\n    // Allow history snapshot feature to be disabled where hx-history=\"false\"\n    // is present *anywhere* in the current document we're about to save,\n    // so we can prevent privileged data entering the cache.\n    // The page will still be reachable as a history entry, but htmx will fetch it\n    // live from the server onpopstate rather than look in the sessionStorage cache\n    const disableHistoryCache = getDocument().querySelector('[hx-history=\"false\" i],[data-hx-history=\"false\" i]')\n    if (!disableHistoryCache) {\n      triggerEvent(getDocument().body, 'htmx:beforeHistorySave', { path, historyElt: elt })\n      saveToHistoryCache(path, elt)\n    }\n\n    if (htmx.config.historyEnabled) history.replaceState({ htmx: true }, getDocument().title, location.href)\n  }\n\n  /**\n   * @param {string} path\n   */\n  function pushUrlIntoHistory(path) {\n  // remove the cache buster parameter, if any\n    if (htmx.config.getCacheBusterParam) {\n      path = path.replace(/org\\.htmx\\.cache-buster=[^&]*&?/, '')\n      if (endsWith(path, '&') || endsWith(path, '?')) {\n        path = path.slice(0, -1)\n      }\n    }\n    if (htmx.config.historyEnabled) {\n      history.pushState({ htmx: true }, '', path)\n    }\n    setCurrentPathForHistory(path)\n  }\n\n  /**\n   * @param {string} path\n   */\n  function replaceUrlInHistory(path) {\n    if (htmx.config.historyEnabled) history.replaceState({ htmx: true }, '', path)\n    setCurrentPathForHistory(path)\n  }\n\n  /**\n   * @param {HtmxSettleTask[]} tasks\n   */\n  function settleImmediately(tasks) {\n    forEach(tasks, function(task) {\n      task.call(undefined)\n    })\n  }\n\n  /**\n   * @param {string} path\n   */\n  function loadHistoryFromServer(path) {\n    const request = new XMLHttpRequest()\n    const swapSpec = { swapStyle: 'innerHTML', swapDelay: 0, settleDelay: 0 }\n    const details = { path, xhr: request, historyElt: getHistoryElement(), swapSpec }\n    request.open('GET', path, true)\n    if (htmx.config.historyRestoreAsHxRequest) {\n      request.setRequestHeader('HX-Request', 'true')\n    }\n    request.setRequestHeader('HX-History-Restore-Request', 'true')\n    request.setRequestHeader('HX-Current-URL', location.href)\n    request.onload = function() {\n      if (this.status >= 200 && this.status < 400) {\n        details.response = this.response\n        triggerEvent(getDocument().body, 'htmx:historyCacheMissLoad', details)\n        swap(details.historyElt, details.response, swapSpec, {\n          contextElement: details.historyElt,\n          historyRequest: true\n        })\n        setCurrentPathForHistory(details.path)\n        triggerEvent(getDocument().body, 'htmx:historyRestore', { path, cacheMiss: true, serverResponse: details.response })\n      } else {\n        triggerErrorEvent(getDocument().body, 'htmx:historyCacheMissLoadError', details)\n      }\n    }\n    if (triggerEvent(getDocument().body, 'htmx:historyCacheMiss', details)) {\n      request.send() // only send request if event not prevented\n    }\n  }\n\n  /**\n   * @param {string} [path]\n   */\n  function restoreHistory(path) {\n    saveCurrentPageToHistory()\n    path = path || location.pathname + location.search\n    const cached = getCachedHistory(path)\n    if (cached) {\n      const swapSpec = { swapStyle: 'innerHTML', swapDelay: 0, settleDelay: 0, scroll: cached.scroll }\n      const details = { path, item: cached, historyElt: getHistoryElement(), swapSpec }\n      if (triggerEvent(getDocument().body, 'htmx:historyCacheHit', details)) {\n        swap(details.historyElt, cached.content, swapSpec, {\n          contextElement: details.historyElt,\n          title: cached.title\n        })\n        setCurrentPathForHistory(details.path)\n        triggerEvent(getDocument().body, 'htmx:historyRestore', details)\n      }\n    } else {\n      if (htmx.config.refreshOnHistoryMiss) {\n        // @ts-ignore: optional parameter in reload() function throws error\n        // noinspection JSUnresolvedReference\n        htmx.location.reload(true)\n      } else {\n        loadHistoryFromServer(path)\n      }\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {Element[]}\n   */\n  function addRequestIndicatorClasses(elt) {\n    let indicators = /** @type Element[] */ (findAttributeTargets(elt, 'hx-indicator'))\n    if (indicators == null) {\n      indicators = [elt]\n    }\n    forEach(indicators, function(ic) {\n      const internalData = getInternalData(ic)\n      internalData.requestCount = (internalData.requestCount || 0) + 1\n      ic.classList.add.call(ic.classList, htmx.config.requestClass)\n    })\n    return indicators\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {Element[]}\n   */\n  function disableElements(elt) {\n    let disabledElts = /** @type Element[] */ (findAttributeTargets(elt, 'hx-disabled-elt'))\n    if (disabledElts == null) {\n      disabledElts = []\n    }\n    forEach(disabledElts, function(disabledElement) {\n      const internalData = getInternalData(disabledElement)\n      internalData.requestCount = (internalData.requestCount || 0) + 1\n      disabledElement.setAttribute('disabled', '')\n      disabledElement.setAttribute('data-disabled-by-htmx', '')\n    })\n    return disabledElts\n  }\n\n  /**\n   * @param {Element[]} indicators\n   * @param {Element[]} disabled\n   */\n  function removeRequestIndicators(indicators, disabled) {\n    forEach(indicators.concat(disabled), function(ele) {\n      const internalData = getInternalData(ele)\n      internalData.requestCount = (internalData.requestCount || 1) - 1\n    })\n    forEach(indicators, function(ic) {\n      const internalData = getInternalData(ic)\n      if (internalData.requestCount === 0) {\n        ic.classList.remove.call(ic.classList, htmx.config.requestClass)\n      }\n    })\n    forEach(disabled, function(disabledElement) {\n      const internalData = getInternalData(disabledElement)\n      if (internalData.requestCount === 0) {\n        disabledElement.removeAttribute('disabled')\n        disabledElement.removeAttribute('data-disabled-by-htmx')\n      }\n    })\n  }\n\n  //= ===================================================================\n  // Input Value Processing\n  //= ===================================================================\n\n  /**\n   * @param {Element[]} processed\n   * @param {Element} elt\n   * @returns {boolean}\n   */\n  function haveSeenNode(processed, elt) {\n    for (let i = 0; i < processed.length; i++) {\n      const node = processed[i]\n      if (node.isSameNode(elt)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Element} element\n   * @return {boolean}\n   */\n  function shouldInclude(element) {\n    // Cast to trick tsc, undefined values will work fine here\n    const elt = /** @type {HTMLInputElement} */ (element)\n    if (elt.name === '' || elt.name == null || elt.disabled || closest(elt, 'fieldset[disabled]')) {\n      return false\n    }\n    // ignore \"submitter\" types (see jQuery src/serialize.js)\n    if (elt.type === 'button' || elt.type === 'submit' || elt.tagName === 'image' || elt.tagName === 'reset' || elt.tagName === 'file') {\n      return false\n    }\n    if (elt.type === 'checkbox' || elt.type === 'radio') {\n      return elt.checked\n    }\n    return true\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|Array|FormDataEntryValue} value\n   * @param {FormData} formData */\n  function addValueToFormData(name, value, formData) {\n    if (name != null && value != null) {\n      if (Array.isArray(value)) {\n        value.forEach(function(v) { formData.append(name, v) })\n      } else {\n        formData.append(name, value)\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|Array} value\n   * @param {FormData} formData */\n  function removeValueFromFormData(name, value, formData) {\n    if (name != null && value != null) {\n      let values = formData.getAll(name)\n      if (Array.isArray(value)) {\n        values = values.filter(v => value.indexOf(v) < 0)\n      } else {\n        values = values.filter(v => v !== value)\n      }\n      formData.delete(name)\n      forEach(values, v => formData.append(name, v))\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {string|Array}\n   */\n  function getValueFromInput(elt) {\n    if (elt instanceof HTMLSelectElement && elt.multiple) {\n      return toArray(elt.querySelectorAll('option:checked')).map(function(e) { return (/** @type HTMLOptionElement */(e)).value })\n    }\n    // include file inputs\n    if (elt instanceof HTMLInputElement && elt.files) {\n      return toArray(elt.files)\n    }\n    // @ts-ignore value will be undefined for non-input elements, which is fine\n    return elt.value\n  }\n\n  /**\n   * @param {Element[]} processed\n   * @param {FormData} formData\n   * @param {HtmxElementValidationError[]} errors\n   * @param {Element|HTMLInputElement|HTMLSelectElement|HTMLFormElement} elt\n   * @param {boolean} validate\n   */\n  function processInputValue(processed, formData, errors, elt, validate) {\n    if (elt == null || haveSeenNode(processed, elt)) {\n      return\n    } else {\n      processed.push(elt)\n    }\n    if (shouldInclude(elt)) {\n      const name = getRawAttribute(elt, 'name')\n      addValueToFormData(name, getValueFromInput(elt), formData)\n      if (validate) {\n        validateElement(elt, errors)\n      }\n    }\n    if (elt instanceof HTMLFormElement) {\n      forEach(elt.elements, function(input) {\n        if (processed.indexOf(input) >= 0) {\n          // The input has already been processed and added to the values, but the FormData that will be\n          //  constructed right after on the form, will include it once again. So remove that input's value\n          //  now to avoid duplicates\n          removeValueFromFormData(input.name, getValueFromInput(input), formData)\n        } else {\n          processed.push(input)\n        }\n        if (validate) {\n          validateElement(input, errors)\n        }\n      })\n      new FormData(elt).forEach(function(value, name) {\n        if (value instanceof File && value.name === '') {\n          return // ignore no-name files\n        }\n        addValueToFormData(name, value, formData)\n      })\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxElementValidationError[]} errors\n   */\n  function validateElement(elt, errors) {\n    const element = /** @type {HTMLElement & ElementInternals} */ (elt)\n    if (element.willValidate) {\n      triggerEvent(element, 'htmx:validation:validate')\n      if (!element.checkValidity()) {\n        if (\n          triggerEvent(element, 'htmx:validation:failed', {\n            message: element.validationMessage,\n            validity: element.validity\n          }) &&\n          !errors.length &&\n          htmx.config.reportValidityOfForms\n        ) {\n          element.reportValidity()\n        }\n        errors.push({ elt: element, message: element.validationMessage, validity: element.validity })\n      }\n    }\n  }\n\n  /**\n   * Override values in the one FormData with those from another.\n   * @param {FormData} receiver the formdata that will be mutated\n   * @param {FormData} donor the formdata that will provide the overriding values\n   * @returns {FormData} the {@linkcode receiver}\n   */\n  function overrideFormData(receiver, donor) {\n    for (const key of donor.keys()) {\n      receiver.delete(key)\n    }\n    donor.forEach(function(value, key) {\n      receiver.append(key, value)\n    })\n    return receiver\n  }\n\n  /**\n * @param {Element|HTMLFormElement} elt\n * @param {HttpVerb} verb\n * @returns {{errors: HtmxElementValidationError[], formData: FormData, values: Object}}\n */\n  function getInputValues(elt, verb) {\n    /** @type Element[] */\n    const processed = []\n    const formData = new FormData()\n    const priorityFormData = new FormData()\n    /** @type HtmxElementValidationError[] */\n    const errors = []\n    const internalData = getInternalData(elt)\n    if (internalData.lastButtonClicked && !bodyContains(internalData.lastButtonClicked)) {\n      internalData.lastButtonClicked = null\n    }\n\n    // only validate when form is directly submitted and novalidate or formnovalidate are not set\n    // or if the element has an explicit hx-validate=\"true\" on it\n    let validate = (elt instanceof HTMLFormElement && elt.noValidate !== true) || getAttributeValue(elt, 'hx-validate') === 'true'\n    if (internalData.lastButtonClicked) {\n      validate = validate && internalData.lastButtonClicked.formNoValidate !== true\n    }\n\n    // for a non-GET include the related form, which may or may not be a parent element of elt\n    if (verb !== 'get') {\n      processInputValue(processed, priorityFormData, errors, getRelatedForm(elt), validate)\n    }\n\n    // include the element itself\n    processInputValue(processed, formData, errors, elt, validate)\n\n    // if a button or submit was clicked last, include its value\n    if (internalData.lastButtonClicked || elt.tagName === 'BUTTON' ||\n    (elt.tagName === 'INPUT' && getRawAttribute(elt, 'type') === 'submit')) {\n      const button = internalData.lastButtonClicked || (/** @type HTMLInputElement|HTMLButtonElement */(elt))\n      const name = getRawAttribute(button, 'name')\n      addValueToFormData(name, button.value, priorityFormData)\n    }\n\n    // include any explicit includes\n    const includes = findAttributeTargets(elt, 'hx-include')\n    forEach(includes, function(node) {\n      processInputValue(processed, formData, errors, asElement(node), validate)\n      // if a non-form is included, include any input values within it\n      if (!matches(node, 'form')) {\n        forEach(asParentNode(node).querySelectorAll(INPUT_SELECTOR), function(descendant) {\n          processInputValue(processed, formData, errors, descendant, validate)\n        })\n      }\n    })\n\n    // values from a <form> take precedence, overriding the regular values\n    overrideFormData(formData, priorityFormData)\n\n    return { errors, formData, values: formDataProxy(formData) }\n  }\n\n  /**\n   * @param {string} returnStr\n   * @param {string} name\n   * @param {any} realValue\n   * @returns {string}\n   */\n  function appendParam(returnStr, name, realValue) {\n    if (returnStr !== '') {\n      returnStr += '&'\n    }\n    if (String(realValue) === '[object Object]') {\n      realValue = JSON.stringify(realValue)\n    }\n    const s = encodeURIComponent(realValue)\n    returnStr += encodeURIComponent(name) + '=' + s\n    return returnStr\n  }\n\n  /**\n   * @param {FormData|Object} values\n   * @returns string\n   */\n  function urlEncode(values) {\n    values = formDataFromObject(values)\n    let returnStr = ''\n    values.forEach(function(value, key) {\n      returnStr = appendParam(returnStr, key, value)\n    })\n    return returnStr\n  }\n\n  //= ===================================================================\n  // Ajax\n  //= ===================================================================\n\n  /**\n * @param {Element} elt\n * @param {Element} target\n * @param {string} prompt\n * @returns {HtmxHeaderSpecification}\n */\n  function getHeaders(elt, target, prompt) {\n    /** @type HtmxHeaderSpecification */\n    const headers = {\n      'HX-Request': 'true',\n      'HX-Trigger': getRawAttribute(elt, 'id'),\n      'HX-Trigger-Name': getRawAttribute(elt, 'name'),\n      'HX-Target': getAttributeValue(target, 'id'),\n      'HX-Current-URL': location.href\n    }\n    getValuesForElement(elt, 'hx-headers', false, headers)\n    if (prompt !== undefined) {\n      headers['HX-Prompt'] = prompt\n    }\n    if (getInternalData(elt).boosted) {\n      headers['HX-Boosted'] = 'true'\n    }\n    return headers\n  }\n\n  /**\n * filterValues takes an object containing form input values\n * and returns a new object that only contains keys that are\n * specified by the closest \"hx-params\" attribute\n * @param {FormData} inputValues\n * @param {Element} elt\n * @returns {FormData}\n */\n  function filterValues(inputValues, elt) {\n    const paramsValue = getClosestAttributeValue(elt, 'hx-params')\n    if (paramsValue) {\n      if (paramsValue === 'none') {\n        return new FormData()\n      } else if (paramsValue === '*') {\n        return inputValues\n      } else if (paramsValue.indexOf('not ') === 0) {\n        forEach(paramsValue.slice(4).split(','), function(name) {\n          name = name.trim()\n          inputValues.delete(name)\n        })\n        return inputValues\n      } else {\n        const newValues = new FormData()\n        forEach(paramsValue.split(','), function(name) {\n          name = name.trim()\n          if (inputValues.has(name)) {\n            inputValues.getAll(name).forEach(function(value) { newValues.append(name, value) })\n          }\n        })\n        return newValues\n      }\n    } else {\n      return inputValues\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @return {boolean}\n   */\n  function isAnchorLink(elt) {\n    return !!getRawAttribute(elt, 'href') && getRawAttribute(elt, 'href').indexOf('#') >= 0\n  }\n\n  /**\n * @param {Element} elt\n * @param {HtmxSwapStyle} [swapInfoOverride]\n * @returns {HtmxSwapSpecification}\n */\n  function getSwapSpecification(elt, swapInfoOverride) {\n    const swapInfo = swapInfoOverride || getClosestAttributeValue(elt, 'hx-swap')\n    /** @type HtmxSwapSpecification */\n    const swapSpec = {\n      swapStyle: getInternalData(elt).boosted ? 'innerHTML' : htmx.config.defaultSwapStyle,\n      swapDelay: htmx.config.defaultSwapDelay,\n      settleDelay: htmx.config.defaultSettleDelay\n    }\n    if (htmx.config.scrollIntoViewOnBoost && getInternalData(elt).boosted && !isAnchorLink(elt)) {\n      swapSpec.show = 'top'\n    }\n    if (swapInfo) {\n      const split = splitOnWhitespace(swapInfo)\n      if (split.length > 0) {\n        for (let i = 0; i < split.length; i++) {\n          const value = split[i]\n          if (value.indexOf('swap:') === 0) {\n            swapSpec.swapDelay = parseInterval(value.slice(5))\n          } else if (value.indexOf('settle:') === 0) {\n            swapSpec.settleDelay = parseInterval(value.slice(7))\n          } else if (value.indexOf('transition:') === 0) {\n            swapSpec.transition = value.slice(11) === 'true'\n          } else if (value.indexOf('ignoreTitle:') === 0) {\n            swapSpec.ignoreTitle = value.slice(12) === 'true'\n          } else if (value.indexOf('scroll:') === 0) {\n            const scrollSpec = value.slice(7)\n            var splitSpec = scrollSpec.split(':')\n            const scrollVal = splitSpec.pop()\n            var selectorVal = splitSpec.length > 0 ? splitSpec.join(':') : null\n            // @ts-ignore\n            swapSpec.scroll = scrollVal\n            swapSpec.scrollTarget = selectorVal\n          } else if (value.indexOf('show:') === 0) {\n            const showSpec = value.slice(5)\n            var splitSpec = showSpec.split(':')\n            const showVal = splitSpec.pop()\n            var selectorVal = splitSpec.length > 0 ? splitSpec.join(':') : null\n            swapSpec.show = showVal\n            swapSpec.showTarget = selectorVal\n          } else if (value.indexOf('focus-scroll:') === 0) {\n            const focusScrollVal = value.slice('focus-scroll:'.length)\n            swapSpec.focusScroll = focusScrollVal == 'true'\n          } else if (i == 0) {\n            swapSpec.swapStyle = value\n          } else {\n            logError('Unknown modifier in hx-swap: ' + value)\n          }\n        }\n      }\n    }\n    return swapSpec\n  }\n\n  /**\n   * @param {Element} elt\n   * @return {boolean}\n   */\n  function usesFormData(elt) {\n    return getClosestAttributeValue(elt, 'hx-encoding') === 'multipart/form-data' ||\n    (matches(elt, 'form') && getRawAttribute(elt, 'enctype') === 'multipart/form-data')\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {Element} elt\n   * @param {FormData} filteredParameters\n   * @returns {*|string|null}\n   */\n  function encodeParamsForBody(xhr, elt, filteredParameters) {\n    let encodedParameters = null\n    withExtensions(elt, function(extension) {\n      if (encodedParameters == null) {\n        encodedParameters = extension.encodeParameters(xhr, filteredParameters, elt)\n      }\n    })\n    if (encodedParameters != null) {\n      return encodedParameters\n    } else {\n      if (usesFormData(elt)) {\n        // Force conversion to an actual FormData object in case filteredParameters is a formDataProxy\n        // See https://github.com/bigskysoftware/htmx/issues/2317\n        return overrideFormData(new FormData(), formDataFromObject(filteredParameters))\n      } else {\n        return urlEncode(filteredParameters)\n      }\n    }\n  }\n\n  /**\n *\n * @param {Element} target\n * @returns {HtmxSettleInfo}\n */\n  function makeSettleInfo(target) {\n    return { tasks: [], elts: [target] }\n  }\n\n  /**\n   * @param {Element[]} content\n   * @param {HtmxSwapSpecification} swapSpec\n   */\n  function updateScrollState(content, swapSpec) {\n    const first = content[0]\n    const last = content[content.length - 1]\n    if (swapSpec.scroll) {\n      var target = null\n      if (swapSpec.scrollTarget) {\n        target = asElement(querySelectorExt(first, swapSpec.scrollTarget))\n      }\n      if (swapSpec.scroll === 'top' && (first || target)) {\n        target = target || first\n        target.scrollTop = 0\n      }\n      if (swapSpec.scroll === 'bottom' && (last || target)) {\n        target = target || last\n        target.scrollTop = target.scrollHeight\n      }\n      if (typeof swapSpec.scroll === 'number') {\n        getWindow().setTimeout(function() {\n          window.scrollTo(0, /** @type number */ (swapSpec.scroll))\n        }, 0) // next 'tick', so browser has time to render layout\n      }\n    }\n    if (swapSpec.show) {\n      var target = null\n      if (swapSpec.showTarget) {\n        let targetStr = swapSpec.showTarget\n        if (swapSpec.showTarget === 'window') {\n          targetStr = 'body'\n        }\n        target = asElement(querySelectorExt(first, targetStr))\n      }\n      if (swapSpec.show === 'top' && (first || target)) {\n        target = target || first\n        // @ts-ignore For some reason tsc doesn't recognize \"instant\" as a valid option for now\n        target.scrollIntoView({ block: 'start', behavior: htmx.config.scrollBehavior })\n      }\n      if (swapSpec.show === 'bottom' && (last || target)) {\n        target = target || last\n        // @ts-ignore For some reason tsc doesn't recognize \"instant\" as a valid option for now\n        target.scrollIntoView({ block: 'end', behavior: htmx.config.scrollBehavior })\n      }\n    }\n  }\n\n  /**\n * @param {Element} elt\n * @param {string} attr\n * @param {boolean=} evalAsDefault\n * @param {Object=} values\n * @param {Event=} event\n * @returns {Object}\n */\n  function getValuesForElement(elt, attr, evalAsDefault, values, event) {\n    if (values == null) {\n      values = {}\n    }\n    if (elt == null) {\n      return values\n    }\n    const attributeValue = getAttributeValue(elt, attr)\n    if (attributeValue) {\n      let str = attributeValue.trim()\n      let evaluateValue = evalAsDefault\n      if (str === 'unset') {\n        return null\n      }\n      if (str.indexOf('javascript:') === 0) {\n        str = str.slice(11)\n        evaluateValue = true\n      } else if (str.indexOf('js:') === 0) {\n        str = str.slice(3)\n        evaluateValue = true\n      }\n      if (str.indexOf('{') !== 0) {\n        str = '{' + str + '}'\n      }\n      let varsValues\n      if (evaluateValue) {\n        varsValues = maybeEval(elt, function() {\n          if (event) {\n            return Function('event', 'return (' + str + ')').call(elt, event)\n          } else { // allow window.event to be accessible\n            return Function('return (' + str + ')').call(elt)\n          }\n        }, {})\n      } else {\n        varsValues = parseJSON(str)\n      }\n      for (const key in varsValues) {\n        if (varsValues.hasOwnProperty(key)) {\n          if (values[key] == null) {\n            values[key] = varsValues[key]\n          }\n        }\n      }\n    }\n    return getValuesForElement(asElement(parentElt(elt)), attr, evalAsDefault, values, event)\n  }\n\n  /**\n   * @param {EventTarget|string} elt\n   * @param {() => any} toEval\n   * @param {any=} defaultVal\n   * @returns {any}\n   */\n  function maybeEval(elt, toEval, defaultVal) {\n    if (htmx.config.allowEval) {\n      return toEval()\n    } else {\n      triggerErrorEvent(elt, 'htmx:evalDisallowedError')\n      return defaultVal\n    }\n  }\n\n  /**\n * @param {Element} elt\n * @param {Event=} event\n * @param {*?=} expressionVars\n * @returns\n */\n  function getHXVarsForElement(elt, event, expressionVars) {\n    return getValuesForElement(elt, 'hx-vars', true, expressionVars, event)\n  }\n\n  /**\n * @param {Element} elt\n * @param {Event=} event\n * @param {*?=} expressionVars\n * @returns\n */\n  function getHXValsForElement(elt, event, expressionVars) {\n    return getValuesForElement(elt, 'hx-vals', false, expressionVars, event)\n  }\n\n  /**\n * @param {Element} elt\n * @param {Event=} event\n * @returns {FormData}\n */\n  function getExpressionVars(elt, event) {\n    return mergeObjects(getHXVarsForElement(elt, event), getHXValsForElement(elt, event))\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {string} header\n   * @param {string|null} headerValue\n   */\n  function safelySetHeaderValue(xhr, header, headerValue) {\n    if (headerValue !== null) {\n      try {\n        xhr.setRequestHeader(header, headerValue)\n      } catch (e) {\n      // On an exception, try to set the header URI encoded instead\n        xhr.setRequestHeader(header, encodeURIComponent(headerValue))\n        xhr.setRequestHeader(header + '-URI-AutoEncoded', 'true')\n      }\n    }\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @return {string}\n   */\n  function getPathFromResponse(xhr) {\n    if (xhr.responseURL) {\n      try {\n        const url = new URL(xhr.responseURL)\n        return url.pathname + url.search\n      } catch (e) {\n        triggerErrorEvent(getDocument().body, 'htmx:badResponseUrl', { url: xhr.responseURL })\n      }\n    }\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {RegExp} regexp\n   * @return {boolean}\n   */\n  function hasHeader(xhr, regexp) {\n    return regexp.test(xhr.getAllResponseHeaders())\n  }\n\n  /**\n   * Issues an htmx-style AJAX request\n   *\n   * @see https://htmx.org/api/#ajax\n   *\n   * @param {HttpVerb} verb\n   * @param {string} path the URL path to make the AJAX\n   * @param {Element|string|HtmxAjaxHelperContext} context the element to target (defaults to the **body**) | a selector for the target | a context object that contains any of the following\n   * @return {Promise<void>} Promise that resolves immediately if no request is sent, or when the request is complete\n   */\n  function ajaxHelper(verb, path, context) {\n    verb = (/** @type HttpVerb */(verb.toLowerCase()))\n    if (context) {\n      if (context instanceof Element || typeof context === 'string') {\n        return issueAjaxRequest(verb, path, null, null, {\n          targetOverride: resolveTarget(context) || DUMMY_ELT,\n          returnPromise: true\n        })\n      } else {\n        let resolvedTarget = resolveTarget(context.target)\n        // If target is supplied but can't resolve OR source is supplied but both target and source can't be resolved\n        // then use DUMMY_ELT to abort the request with htmx:targetError to avoid it replacing body by mistake\n        if ((context.target && !resolvedTarget) || (context.source && !resolvedTarget && !resolveTarget(context.source))) {\n          resolvedTarget = DUMMY_ELT\n        }\n        return issueAjaxRequest(verb, path, resolveTarget(context.source), context.event,\n          {\n            handler: context.handler,\n            headers: context.headers,\n            values: context.values,\n            targetOverride: resolvedTarget,\n            swapOverride: context.swap,\n            select: context.select,\n            returnPromise: true\n          })\n      }\n    } else {\n      return issueAjaxRequest(verb, path, null, null, {\n        returnPromise: true\n      })\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @return {Element[]}\n   */\n  function hierarchyForElt(elt) {\n    const arr = []\n    while (elt) {\n      arr.push(elt)\n      elt = elt.parentElement\n    }\n    return arr\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} path\n   * @param {HtmxRequestConfig} requestConfig\n   * @return {boolean}\n   */\n  function verifyPath(elt, path, requestConfig) {\n    const url = new URL(path, location.protocol !== 'about:' ? location.href : window.origin)\n    const origin = location.protocol !== 'about:' ? location.origin : window.origin\n    const sameHost = origin === url.origin\n\n    if (htmx.config.selfRequestsOnly) {\n      if (!sameHost) {\n        return false\n      }\n    }\n    return triggerEvent(elt, 'htmx:validateUrl', mergeObjects({ url, sameHost }, requestConfig))\n  }\n\n  /**\n   * @param {Object|FormData} obj\n   * @return {FormData}\n   */\n  function formDataFromObject(obj) {\n    if (obj instanceof FormData) return obj\n    const formData = new FormData()\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (obj[key] && typeof obj[key].forEach === 'function') {\n          obj[key].forEach(function(v) { formData.append(key, v) })\n        } else if (typeof obj[key] === 'object' && !(obj[key] instanceof Blob)) {\n          formData.append(key, JSON.stringify(obj[key]))\n        } else {\n          formData.append(key, obj[key])\n        }\n      }\n    }\n    return formData\n  }\n\n  /**\n   * @param {FormData} formData\n   * @param {string} name\n   * @param {Array} array\n   * @returns {Array}\n   */\n  function formDataArrayProxy(formData, name, array) {\n    // mutating the array should mutate the underlying form data\n    return new Proxy(array, {\n      get: function(target, key) {\n        if (typeof key === 'number') return target[key]\n        if (key === 'length') return target.length\n        if (key === 'push') {\n          return function(value) {\n            target.push(value)\n            formData.append(name, value)\n          }\n        }\n        if (typeof target[key] === 'function') {\n          return function() {\n            target[key].apply(target, arguments)\n            formData.delete(name)\n            target.forEach(function(v) { formData.append(name, v) })\n          }\n        }\n\n        if (target[key] && target[key].length === 1) {\n          return target[key][0]\n        } else {\n          return target[key]\n        }\n      },\n      set: function(target, index, value) {\n        target[index] = value\n        formData.delete(name)\n        target.forEach(function(v) { formData.append(name, v) })\n        return true\n      }\n    })\n  }\n\n  /**\n   * @param {FormData} formData\n   * @returns {Object}\n   */\n  function formDataProxy(formData) {\n    return new Proxy(formData, {\n      get: function(target, name) {\n        if (typeof name === 'symbol') {\n          // Forward symbol calls to the FormData itself directly\n          const result = Reflect.get(target, name)\n          // Wrap in function with apply to correctly bind the FormData context, as a direct call would result in an illegal invocation error\n          if (typeof result === 'function') {\n            return function() {\n              return result.apply(formData, arguments)\n            }\n          } else {\n            return result\n          }\n        }\n        if (name === 'toJSON') {\n          // Support JSON.stringify call on proxy\n          return () => Object.fromEntries(formData)\n        }\n        if (name in target) {\n          // Wrap in function with apply to correctly bind the FormData context, as a direct call would result in an illegal invocation error\n          if (typeof target[name] === 'function') {\n            return function() {\n              return formData[name].apply(formData, arguments)\n            }\n          }\n        }\n        const array = formData.getAll(name)\n        // Those 2 undefined & single value returns are for retro-compatibility as we weren't using FormData before\n        if (array.length === 0) {\n          return undefined\n        } else if (array.length === 1) {\n          return array[0]\n        } else {\n          return formDataArrayProxy(target, name, array)\n        }\n      },\n      set: function(target, name, value) {\n        if (typeof name !== 'string') {\n          return false\n        }\n        target.delete(name)\n        if (value && typeof value.forEach === 'function') {\n          value.forEach(function(v) { target.append(name, v) })\n        } else if (typeof value === 'object' && !(value instanceof Blob)) {\n          target.append(name, JSON.stringify(value))\n        } else {\n          target.append(name, value)\n        }\n        return true\n      },\n      deleteProperty: function(target, name) {\n        if (typeof name === 'string') {\n          target.delete(name)\n        }\n        return true\n      },\n      // Support Object.assign call from proxy\n      ownKeys: function(target) {\n        return Reflect.ownKeys(Object.fromEntries(target))\n      },\n      getOwnPropertyDescriptor: function(target, prop) {\n        return Reflect.getOwnPropertyDescriptor(Object.fromEntries(target), prop)\n      }\n    })\n  }\n\n  /**\n   * @param {HttpVerb} verb\n   * @param {string} path\n   * @param {Element} elt\n   * @param {Event} event\n   * @param {HtmxAjaxEtc} [etc]\n   * @param {boolean} [confirmed]\n   * @return {Promise<void>}\n   */\n  function issueAjaxRequest(verb, path, elt, event, etc, confirmed) {\n    let resolve = null\n    let reject = null\n    etc = etc != null ? etc : {}\n    if (etc.returnPromise && typeof Promise !== 'undefined') {\n      var promise = new Promise(function(_resolve, _reject) {\n        resolve = _resolve\n        reject = _reject\n      })\n    }\n    if (elt == null) {\n      elt = getDocument().body\n    }\n    const responseHandler = etc.handler || handleAjaxResponse\n    const select = etc.select || null\n\n    if (!bodyContains(elt)) {\n    // do not issue requests for elements removed from the DOM\n      maybeCall(resolve)\n      return promise\n    }\n    const target = etc.targetOverride || asElement(getTarget(elt))\n    if (target == null || target == DUMMY_ELT) {\n      triggerErrorEvent(elt, 'htmx:targetError', { target: getClosestAttributeValue(elt, 'hx-target') })\n      maybeCall(reject)\n      return promise\n    }\n\n    let eltData = getInternalData(elt)\n    const submitter = eltData.lastButtonClicked\n\n    if (submitter) {\n      const buttonPath = getRawAttribute(submitter, 'formaction')\n      if (buttonPath != null) {\n        path = buttonPath\n      }\n\n      const buttonVerb = getRawAttribute(submitter, 'formmethod')\n      if (buttonVerb != null) {\n        if (VERBS.includes(buttonVerb.toLowerCase())) {\n          verb = (/** @type HttpVerb */(buttonVerb))\n        } else {\n          maybeCall(resolve)\n          return promise\n        }\n      }\n    }\n\n    const confirmQuestion = getClosestAttributeValue(elt, 'hx-confirm')\n    // allow event-based confirmation w/ a callback\n    if (confirmed === undefined) {\n      const issueRequest = function(skipConfirmation) {\n        return issueAjaxRequest(verb, path, elt, event, etc, !!skipConfirmation)\n      }\n      const confirmDetails = { target, elt, path, verb, triggeringEvent: event, etc, issueRequest, question: confirmQuestion }\n      if (triggerEvent(elt, 'htmx:confirm', confirmDetails) === false) {\n        maybeCall(resolve)\n        return promise\n      }\n    }\n\n    let syncElt = elt\n    let syncStrategy = getClosestAttributeValue(elt, 'hx-sync')\n    let queueStrategy = null\n    let abortable = false\n    if (syncStrategy) {\n      const syncStrings = syncStrategy.split(':')\n      const selector = syncStrings[0].trim()\n      if (selector === 'this') {\n        syncElt = findThisElement(elt, 'hx-sync')\n      } else {\n        syncElt = asElement(querySelectorExt(elt, selector))\n      }\n      // default to the drop strategy\n      syncStrategy = (syncStrings[1] || 'drop').trim()\n      eltData = getInternalData(syncElt)\n      if (syncStrategy === 'drop' && eltData.xhr && eltData.abortable !== true) {\n        maybeCall(resolve)\n        return promise\n      } else if (syncStrategy === 'abort') {\n        if (eltData.xhr) {\n          maybeCall(resolve)\n          return promise\n        } else {\n          abortable = true\n        }\n      } else if (syncStrategy === 'replace') {\n        triggerEvent(syncElt, 'htmx:abort') // abort the current request and continue\n      } else if (syncStrategy.indexOf('queue') === 0) {\n        const queueStrArray = syncStrategy.split(' ')\n        queueStrategy = (queueStrArray[1] || 'last').trim()\n      }\n    }\n\n    if (eltData.xhr) {\n      if (eltData.abortable) {\n        triggerEvent(syncElt, 'htmx:abort') // abort the current request and continue\n      } else {\n        if (queueStrategy == null) {\n          if (event) {\n            const eventData = getInternalData(event)\n            if (eventData && eventData.triggerSpec && eventData.triggerSpec.queue) {\n              queueStrategy = eventData.triggerSpec.queue\n            }\n          }\n          if (queueStrategy == null) {\n            queueStrategy = 'last'\n          }\n        }\n        if (eltData.queuedRequests == null) {\n          eltData.queuedRequests = []\n        }\n        if (queueStrategy === 'first' && eltData.queuedRequests.length === 0) {\n          eltData.queuedRequests.push(function() {\n            issueAjaxRequest(verb, path, elt, event, etc)\n          })\n        } else if (queueStrategy === 'all') {\n          eltData.queuedRequests.push(function() {\n            issueAjaxRequest(verb, path, elt, event, etc)\n          })\n        } else if (queueStrategy === 'last') {\n          eltData.queuedRequests = [] // dump existing queue\n          eltData.queuedRequests.push(function() {\n            issueAjaxRequest(verb, path, elt, event, etc)\n          })\n        }\n        maybeCall(resolve)\n        return promise\n      }\n    }\n\n    const xhr = new XMLHttpRequest()\n    eltData.xhr = xhr\n    eltData.abortable = abortable\n    const endRequestLock = function() {\n      eltData.xhr = null\n      eltData.abortable = false\n      if (eltData.queuedRequests != null &&\n      eltData.queuedRequests.length > 0) {\n        const queuedRequest = eltData.queuedRequests.shift()\n        queuedRequest()\n      }\n    }\n    const promptQuestion = getClosestAttributeValue(elt, 'hx-prompt')\n    if (promptQuestion) {\n      var promptResponse = prompt(promptQuestion)\n      // prompt returns null if cancelled and empty string if accepted with no entry\n      if (promptResponse === null ||\n      !triggerEvent(elt, 'htmx:prompt', { prompt: promptResponse, target })) {\n        maybeCall(resolve)\n        endRequestLock()\n        return promise\n      }\n    }\n\n    if (confirmQuestion && !confirmed) {\n      if (!confirm(confirmQuestion)) {\n        maybeCall(resolve)\n        endRequestLock()\n        return promise\n      }\n    }\n\n    let headers = getHeaders(elt, target, promptResponse)\n\n    if (verb !== 'get' && !usesFormData(elt)) {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded'\n    }\n\n    if (etc.headers) {\n      headers = mergeObjects(headers, etc.headers)\n    }\n    const results = getInputValues(elt, verb)\n    let errors = results.errors\n    const rawFormData = results.formData\n    if (etc.values) {\n      overrideFormData(rawFormData, formDataFromObject(etc.values))\n    }\n    const expressionVars = formDataFromObject(getExpressionVars(elt, event))\n    const allFormData = overrideFormData(rawFormData, expressionVars)\n    let filteredFormData = filterValues(allFormData, elt)\n\n    if (htmx.config.getCacheBusterParam && verb === 'get') {\n      filteredFormData.set('org.htmx.cache-buster', getRawAttribute(target, 'id') || 'true')\n    }\n\n    // behavior of anchors w/ empty href is to use the current URL\n    if (path == null || path === '') {\n      path = location.href\n    }\n\n    /**\n     * @type {Object}\n     * @property {boolean} [credentials]\n     * @property {number} [timeout]\n     * @property {boolean} [noHeaders]\n     */\n    const requestAttrValues = getValuesForElement(elt, 'hx-request')\n\n    const eltIsBoosted = getInternalData(elt).boosted\n\n    let useUrlParams = htmx.config.methodsThatUseUrlParams.indexOf(verb) >= 0\n\n    /** @type HtmxRequestConfig */\n    const requestConfig = {\n      boosted: eltIsBoosted,\n      useUrlParams,\n      formData: filteredFormData,\n      parameters: formDataProxy(filteredFormData),\n      unfilteredFormData: allFormData,\n      unfilteredParameters: formDataProxy(allFormData),\n      headers,\n      elt,\n      target,\n      verb,\n      errors,\n      withCredentials: etc.credentials || requestAttrValues.credentials || htmx.config.withCredentials,\n      timeout: etc.timeout || requestAttrValues.timeout || htmx.config.timeout,\n      path,\n      triggeringEvent: event\n    }\n\n    if (!triggerEvent(elt, 'htmx:configRequest', requestConfig)) {\n      maybeCall(resolve)\n      endRequestLock()\n      return promise\n    }\n\n    // copy out in case the object was overwritten\n    path = requestConfig.path\n    verb = requestConfig.verb\n    headers = requestConfig.headers\n    filteredFormData = formDataFromObject(requestConfig.parameters)\n    errors = requestConfig.errors\n    useUrlParams = requestConfig.useUrlParams\n\n    if (errors && errors.length > 0) {\n      triggerEvent(elt, 'htmx:validation:halted', requestConfig)\n      maybeCall(resolve)\n      endRequestLock()\n      return promise\n    }\n\n    const splitPath = path.split('#')\n    const pathNoAnchor = splitPath[0]\n    const anchor = splitPath[1]\n\n    let finalPath = path\n    if (useUrlParams) {\n      finalPath = pathNoAnchor\n      const hasValues = !filteredFormData.keys().next().done\n      if (hasValues) {\n        if (finalPath.indexOf('?') < 0) {\n          finalPath += '?'\n        } else {\n          finalPath += '&'\n        }\n        finalPath += urlEncode(filteredFormData)\n        if (anchor) {\n          finalPath += '#' + anchor\n        }\n      }\n    }\n\n    if (!verifyPath(elt, finalPath, requestConfig)) {\n      triggerErrorEvent(elt, 'htmx:invalidPath', requestConfig)\n      maybeCall(reject)\n      endRequestLock()\n      return promise\n    }\n\n    xhr.open(verb.toUpperCase(), finalPath, true)\n    xhr.overrideMimeType('text/html')\n    xhr.withCredentials = requestConfig.withCredentials\n    xhr.timeout = requestConfig.timeout\n\n    // request headers\n    if (requestAttrValues.noHeaders) {\n    // ignore all headers\n    } else {\n      for (const header in headers) {\n        if (headers.hasOwnProperty(header)) {\n          const headerValue = headers[header]\n          safelySetHeaderValue(xhr, header, headerValue)\n        }\n      }\n    }\n\n    /** @type {HtmxResponseInfo} */\n    const responseInfo = {\n      xhr,\n      target,\n      requestConfig,\n      etc,\n      boosted: eltIsBoosted,\n      select,\n      pathInfo: {\n        requestPath: path,\n        finalRequestPath: finalPath,\n        responsePath: null,\n        anchor\n      }\n    }\n\n    xhr.onload = function() {\n      try {\n        const hierarchy = hierarchyForElt(elt)\n        responseInfo.pathInfo.responsePath = getPathFromResponse(xhr)\n        responseHandler(elt, responseInfo)\n        if (responseInfo.keepIndicators !== true) {\n          removeRequestIndicators(indicators, disableElts)\n        }\n        triggerEvent(elt, 'htmx:afterRequest', responseInfo)\n        triggerEvent(elt, 'htmx:afterOnLoad', responseInfo)\n        // if the body no longer contains the element, trigger the event on the closest parent\n        // remaining in the DOM\n        if (!bodyContains(elt)) {\n          let secondaryTriggerElt = null\n          while (hierarchy.length > 0 && secondaryTriggerElt == null) {\n            const parentEltInHierarchy = hierarchy.shift()\n            if (bodyContains(parentEltInHierarchy)) {\n              secondaryTriggerElt = parentEltInHierarchy\n            }\n          }\n          if (secondaryTriggerElt) {\n            triggerEvent(secondaryTriggerElt, 'htmx:afterRequest', responseInfo)\n            triggerEvent(secondaryTriggerElt, 'htmx:afterOnLoad', responseInfo)\n          }\n        }\n        maybeCall(resolve)\n      } catch (e) {\n        triggerErrorEvent(elt, 'htmx:onLoadError', mergeObjects({ error: e }, responseInfo))\n        throw e\n      } finally {\n        endRequestLock()\n      }\n    }\n    xhr.onerror = function() {\n      removeRequestIndicators(indicators, disableElts)\n      triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo)\n      triggerErrorEvent(elt, 'htmx:sendError', responseInfo)\n      maybeCall(reject)\n      endRequestLock()\n    }\n    xhr.onabort = function() {\n      removeRequestIndicators(indicators, disableElts)\n      triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo)\n      triggerErrorEvent(elt, 'htmx:sendAbort', responseInfo)\n      maybeCall(reject)\n      endRequestLock()\n    }\n    xhr.ontimeout = function() {\n      removeRequestIndicators(indicators, disableElts)\n      triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo)\n      triggerErrorEvent(elt, 'htmx:timeout', responseInfo)\n      maybeCall(reject)\n      endRequestLock()\n    }\n    if (!triggerEvent(elt, 'htmx:beforeRequest', responseInfo)) {\n      maybeCall(resolve)\n      endRequestLock()\n      return promise\n    }\n    var indicators = addRequestIndicatorClasses(elt)\n    var disableElts = disableElements(elt)\n\n    forEach(['loadstart', 'loadend', 'progress', 'abort'], function(eventName) {\n      forEach([xhr, xhr.upload], function(target) {\n        target.addEventListener(eventName, function(event) {\n          triggerEvent(elt, 'htmx:xhr:' + eventName, {\n            lengthComputable: event.lengthComputable,\n            loaded: event.loaded,\n            total: event.total\n          })\n        })\n      })\n    })\n    triggerEvent(elt, 'htmx:beforeSend', responseInfo)\n    const params = useUrlParams ? null : encodeParamsForBody(xhr, elt, filteredFormData)\n    xhr.send(params)\n    return promise\n  }\n\n  /**\n   * @typedef {Object} HtmxHistoryUpdate\n   * @property {string|null} [type]\n   * @property {string|null} [path]\n   */\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxResponseInfo} responseInfo\n   * @return {HtmxHistoryUpdate}\n   */\n  function determineHistoryUpdates(elt, responseInfo) {\n    const xhr = responseInfo.xhr\n\n    //= ==========================================\n    // First consult response headers\n    //= ==========================================\n    let pathFromHeaders = null\n    let typeFromHeaders = null\n    if (hasHeader(xhr, /HX-Push:/i)) {\n      pathFromHeaders = xhr.getResponseHeader('HX-Push')\n      typeFromHeaders = 'push'\n    } else if (hasHeader(xhr, /HX-Push-Url:/i)) {\n      pathFromHeaders = xhr.getResponseHeader('HX-Push-Url')\n      typeFromHeaders = 'push'\n    } else if (hasHeader(xhr, /HX-Replace-Url:/i)) {\n      pathFromHeaders = xhr.getResponseHeader('HX-Replace-Url')\n      typeFromHeaders = 'replace'\n    }\n\n    // if there was a response header, that has priority\n    if (pathFromHeaders) {\n      if (pathFromHeaders === 'false') {\n        return {}\n      } else {\n        return {\n          type: typeFromHeaders,\n          path: pathFromHeaders\n        }\n      }\n    }\n\n    //= ==========================================\n    // Next resolve via DOM values\n    //= ==========================================\n    const requestPath = responseInfo.pathInfo.finalRequestPath\n    const responsePath = responseInfo.pathInfo.responsePath\n\n    const pushUrl = getClosestAttributeValue(elt, 'hx-push-url')\n    const replaceUrl = getClosestAttributeValue(elt, 'hx-replace-url')\n    const elementIsBoosted = getInternalData(elt).boosted\n\n    let saveType = null\n    let path = null\n\n    if (pushUrl) {\n      saveType = 'push'\n      path = pushUrl\n    } else if (replaceUrl) {\n      saveType = 'replace'\n      path = replaceUrl\n    } else if (elementIsBoosted) {\n      saveType = 'push'\n      path = responsePath || requestPath // if there is no response path, go with the original request path\n    }\n\n    if (path) {\n    // false indicates no push, return empty object\n      if (path === 'false') {\n        return {}\n      }\n\n      // true indicates we want to follow wherever the server ended up sending us\n      if (path === 'true') {\n        path = responsePath || requestPath // if there is no response path, go with the original request path\n      }\n\n      // restore any anchor associated with the request\n      if (responseInfo.pathInfo.anchor && path.indexOf('#') === -1) {\n        path = path + '#' + responseInfo.pathInfo.anchor\n      }\n\n      return {\n        type: saveType,\n        path\n      }\n    } else {\n      return {}\n    }\n  }\n\n  /**\n   * @param {HtmxResponseHandlingConfig} responseHandlingConfig\n   * @param {number} status\n   * @return {boolean}\n   */\n  function codeMatches(responseHandlingConfig, status) {\n    var regExp = new RegExp(responseHandlingConfig.code)\n    return regExp.test(status.toString(10))\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @return {HtmxResponseHandlingConfig}\n   */\n  function resolveResponseHandling(xhr) {\n    for (var i = 0; i < htmx.config.responseHandling.length; i++) {\n      /** @type HtmxResponseHandlingConfig */\n      var responseHandlingElement = htmx.config.responseHandling[i]\n      if (codeMatches(responseHandlingElement, xhr.status)) {\n        return responseHandlingElement\n      }\n    }\n    // no matches, return no swap\n    return {\n      swap: false\n    }\n  }\n\n  /**\n   * @param {string} title\n   */\n  function handleTitle(title) {\n    if (title) {\n      const titleElt = find('title')\n      if (titleElt) {\n        titleElt.textContent = title\n      } else {\n        window.document.title = title\n      }\n    }\n  }\n\n  /**\n   * Resove the Retarget selector and throw if not found\n   * @param {Element} elt\n   * @param {String} target\n   * @returns {Element}\n   */\n  function resolveRetarget(elt, target) {\n    if (target === 'this') {\n      return elt\n    }\n    const resolvedTarget = asElement(querySelectorExt(elt, target))\n    if (resolvedTarget == null) {\n      triggerErrorEvent(elt, 'htmx:targetError', { target })\n      throw new Error(`Invalid re-target ${target}`)\n    }\n    return resolvedTarget\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxResponseInfo} responseInfo\n   */\n  function handleAjaxResponse(elt, responseInfo) {\n    const xhr = responseInfo.xhr\n    let target = responseInfo.target\n    const etc = responseInfo.etc\n    const responseInfoSelect = responseInfo.select\n\n    if (!triggerEvent(elt, 'htmx:beforeOnLoad', responseInfo)) return\n\n    if (hasHeader(xhr, /HX-Trigger:/i)) {\n      handleTriggerHeader(xhr, 'HX-Trigger', elt)\n    }\n\n    if (hasHeader(xhr, /HX-Location:/i)) {\n      saveCurrentPageToHistory()\n      let redirectPath = xhr.getResponseHeader('HX-Location')\n      /** @type {HtmxAjaxHelperContext&{path:string}} */\n      var redirectSwapSpec\n      if (redirectPath.indexOf('{') === 0) {\n        redirectSwapSpec = parseJSON(redirectPath)\n        // what's the best way to throw an error if the user didn't include this\n        redirectPath = redirectSwapSpec.path\n        delete redirectSwapSpec.path\n      }\n      ajaxHelper('get', redirectPath, redirectSwapSpec).then(function() {\n        pushUrlIntoHistory(redirectPath)\n      })\n      return\n    }\n\n    const shouldRefresh = hasHeader(xhr, /HX-Refresh:/i) && xhr.getResponseHeader('HX-Refresh') === 'true'\n\n    if (hasHeader(xhr, /HX-Redirect:/i)) {\n      responseInfo.keepIndicators = true\n      htmx.location.href = xhr.getResponseHeader('HX-Redirect')\n      shouldRefresh && htmx.location.reload()\n      return\n    }\n\n    if (shouldRefresh) {\n      responseInfo.keepIndicators = true\n      htmx.location.reload()\n      return\n    }\n\n    const historyUpdate = determineHistoryUpdates(elt, responseInfo)\n\n    const responseHandling = resolveResponseHandling(xhr)\n    const shouldSwap = responseHandling.swap\n    let isError = !!responseHandling.error\n    let ignoreTitle = htmx.config.ignoreTitle || responseHandling.ignoreTitle\n    let selectOverride = responseHandling.select\n    if (responseHandling.target) {\n      responseInfo.target = resolveRetarget(elt, responseHandling.target)\n    }\n    var swapOverride = etc.swapOverride\n    if (swapOverride == null && responseHandling.swapOverride) {\n      swapOverride = responseHandling.swapOverride\n    }\n\n    // response headers override response handling config\n    if (hasHeader(xhr, /HX-Retarget:/i)) {\n      responseInfo.target = resolveRetarget(elt, xhr.getResponseHeader('HX-Retarget'))\n    }\n\n    if (hasHeader(xhr, /HX-Reswap:/i)) {\n      swapOverride = xhr.getResponseHeader('HX-Reswap')\n    }\n\n    var serverResponse = xhr.response\n    /** @type HtmxBeforeSwapDetails */\n    var beforeSwapDetails = mergeObjects({\n      shouldSwap,\n      serverResponse,\n      isError,\n      ignoreTitle,\n      selectOverride,\n      swapOverride\n    }, responseInfo)\n\n    if (responseHandling.event && !triggerEvent(target, responseHandling.event, beforeSwapDetails)) return\n\n    if (!triggerEvent(target, 'htmx:beforeSwap', beforeSwapDetails)) return\n\n    target = beforeSwapDetails.target // allow re-targeting\n    serverResponse = beforeSwapDetails.serverResponse // allow updating content\n    isError = beforeSwapDetails.isError // allow updating error\n    ignoreTitle = beforeSwapDetails.ignoreTitle // allow updating ignoring title\n    selectOverride = beforeSwapDetails.selectOverride // allow updating select override\n    swapOverride = beforeSwapDetails.swapOverride // allow updating swap override\n\n    responseInfo.target = target // Make updated target available to response events\n    responseInfo.failed = isError // Make failed property available to response events\n    responseInfo.successful = !isError // Make successful property available to response events\n\n    if (beforeSwapDetails.shouldSwap) {\n      if (xhr.status === 286) {\n        cancelPolling(elt)\n      }\n\n      withExtensions(elt, function(extension) {\n        serverResponse = extension.transformResponse(serverResponse, xhr, elt)\n      })\n\n      // Save current page if there will be a history update\n      if (historyUpdate.type) {\n        saveCurrentPageToHistory()\n      }\n\n      var swapSpec = getSwapSpecification(elt, swapOverride)\n\n      if (!swapSpec.hasOwnProperty('ignoreTitle')) {\n        swapSpec.ignoreTitle = ignoreTitle\n      }\n\n      target.classList.add(htmx.config.swappingClass)\n\n      if (responseInfoSelect) {\n        selectOverride = responseInfoSelect\n      }\n\n      if (hasHeader(xhr, /HX-Reselect:/i)) {\n        selectOverride = xhr.getResponseHeader('HX-Reselect')\n      }\n\n      const selectOOB = getClosestAttributeValue(elt, 'hx-select-oob')\n      const select = getClosestAttributeValue(elt, 'hx-select')\n\n      swap(target, serverResponse, swapSpec, {\n        select: selectOverride === 'unset' ? null : selectOverride || select,\n        selectOOB,\n        eventInfo: responseInfo,\n        anchor: responseInfo.pathInfo.anchor,\n        contextElement: elt,\n        afterSwapCallback: function() {\n          if (hasHeader(xhr, /HX-Trigger-After-Swap:/i)) {\n            let finalElt = elt\n            if (!bodyContains(elt)) {\n              finalElt = getDocument().body\n            }\n            handleTriggerHeader(xhr, 'HX-Trigger-After-Swap', finalElt)\n          }\n        },\n        afterSettleCallback: function() {\n          if (hasHeader(xhr, /HX-Trigger-After-Settle:/i)) {\n            let finalElt = elt\n            if (!bodyContains(elt)) {\n              finalElt = getDocument().body\n            }\n            handleTriggerHeader(xhr, 'HX-Trigger-After-Settle', finalElt)\n          }\n        },\n        beforeSwapCallback: function() {\n          // if we need to save history, do so, before swapping so that relative resources have the correct base URL\n          if (historyUpdate.type) {\n            triggerEvent(getDocument().body, 'htmx:beforeHistoryUpdate', mergeObjects({ history: historyUpdate }, responseInfo))\n            if (historyUpdate.type === 'push') {\n              pushUrlIntoHistory(historyUpdate.path)\n              triggerEvent(getDocument().body, 'htmx:pushedIntoHistory', { path: historyUpdate.path })\n            } else {\n              replaceUrlInHistory(historyUpdate.path)\n              triggerEvent(getDocument().body, 'htmx:replacedInHistory', { path: historyUpdate.path })\n            }\n          }\n        }\n      })\n    }\n    if (isError) {\n      triggerErrorEvent(elt, 'htmx:responseError', mergeObjects({ error: 'Response Status Error Code ' + xhr.status + ' from ' + responseInfo.pathInfo.requestPath }, responseInfo))\n    }\n  }\n\n  //= ===================================================================\n  // Extensions API\n  //= ===================================================================\n\n  /** @type {Object<string, HtmxExtension>} */\n  const extensions = {}\n\n  /**\n   * extensionBase defines the default functions for all extensions.\n   * @returns {HtmxExtension}\n   */\n  function extensionBase() {\n    return {\n      init: function(api) { return null },\n      getSelectors: function() { return null },\n      onEvent: function(name, evt) { return true },\n      transformResponse: function(text, xhr, elt) { return text },\n      isInlineSwap: function(swapStyle) { return false },\n      handleSwap: function(swapStyle, target, fragment, settleInfo) { return false },\n      encodeParameters: function(xhr, parameters, elt) { return null }\n    }\n  }\n\n  /**\n   * defineExtension initializes the extension and adds it to the htmx registry\n   *\n   * @see https://htmx.org/api/#defineExtension\n   *\n   * @param {string} name the extension name\n   * @param {Partial<HtmxExtension>} extension the extension definition\n   */\n  function defineExtension(name, extension) {\n    if (extension.init) {\n      extension.init(internalAPI)\n    }\n    extensions[name] = mergeObjects(extensionBase(), extension)\n  }\n\n  /**\n   * removeExtension removes an extension from the htmx registry\n   *\n   * @see https://htmx.org/api/#removeExtension\n   *\n   * @param {string} name\n   */\n  function removeExtension(name) {\n    delete extensions[name]\n  }\n\n  /**\n   * getExtensions searches up the DOM tree to return all extensions that can be applied to a given element\n   *\n   * @param {Element} elt\n   * @param {HtmxExtension[]=} extensionsToReturn\n   * @param {string[]=} extensionsToIgnore\n   * @returns {HtmxExtension[]}\n   */\n  function getExtensions(elt, extensionsToReturn, extensionsToIgnore) {\n    if (extensionsToReturn == undefined) {\n      extensionsToReturn = []\n    }\n    if (elt == undefined) {\n      return extensionsToReturn\n    }\n    if (extensionsToIgnore == undefined) {\n      extensionsToIgnore = []\n    }\n    const extensionsForElement = getAttributeValue(elt, 'hx-ext')\n    if (extensionsForElement) {\n      forEach(extensionsForElement.split(','), function(extensionName) {\n        extensionName = extensionName.replace(/ /g, '')\n        if (extensionName.slice(0, 7) == 'ignore:') {\n          extensionsToIgnore.push(extensionName.slice(7))\n          return\n        }\n        if (extensionsToIgnore.indexOf(extensionName) < 0) {\n          const extension = extensions[extensionName]\n          if (extension && extensionsToReturn.indexOf(extension) < 0) {\n            extensionsToReturn.push(extension)\n          }\n        }\n      })\n    }\n    return getExtensions(asElement(parentElt(elt)), extensionsToReturn, extensionsToIgnore)\n  }\n\n  //= ===================================================================\n  // Initialization\n  //= ===================================================================\n  var isReady = false\n  getDocument().addEventListener('DOMContentLoaded', function() {\n    isReady = true\n  })\n\n  /**\n   * Execute a function now if DOMContentLoaded has fired, otherwise listen for it.\n   *\n   * This function uses isReady because there is no reliable way to ask the browser whether\n   * the DOMContentLoaded event has already been fired; there's a gap between DOMContentLoaded\n   * firing and readystate=complete.\n   */\n  function ready(fn) {\n    // Checking readyState here is a failsafe in case the htmx script tag entered the DOM by\n    // some means other than the initial page load.\n    if (isReady || getDocument().readyState === 'complete') {\n      fn()\n    } else {\n      getDocument().addEventListener('DOMContentLoaded', fn)\n    }\n  }\n\n  function insertIndicatorStyles() {\n    if (htmx.config.includeIndicatorStyles !== false) {\n      const nonceAttribute = htmx.config.inlineStyleNonce ? ` nonce=\"${htmx.config.inlineStyleNonce}\"` : ''\n      const indicator = htmx.config.indicatorClass\n      const request = htmx.config.requestClass\n      getDocument().head.insertAdjacentHTML('beforeend',\n        `<style${nonceAttribute}>` +\n        `.${indicator}{opacity:0;visibility: hidden} ` +\n        `.${request} .${indicator}, .${request}.${indicator}{opacity:1;visibility: visible;transition: opacity 200ms ease-in}` +\n        '</style>'\n      )\n    }\n  }\n\n  function getMetaConfig() {\n    /** @type HTMLMetaElement */\n    const element = getDocument().querySelector('meta[name=\"htmx-config\"]')\n    if (element) {\n      return parseJSON(element.content)\n    } else {\n      return null\n    }\n  }\n\n  function mergeMetaConfig() {\n    const metaConfig = getMetaConfig()\n    if (metaConfig) {\n      htmx.config = mergeObjects(htmx.config, metaConfig)\n    }\n  }\n\n  // initialize the document\n  ready(function() {\n    mergeMetaConfig()\n    insertIndicatorStyles()\n    let body = getDocument().body\n    processNode(body)\n    const restoredElts = getDocument().querySelectorAll(\n      \"[hx-trigger='restored'],[data-hx-trigger='restored']\"\n    )\n    body.addEventListener('htmx:abort', function(evt) {\n      const target = evt.target\n      const internalData = getInternalData(target)\n      if (internalData && internalData.xhr) {\n        internalData.xhr.abort()\n      }\n    })\n    /** @type {(ev: PopStateEvent) => any} */\n    const originalPopstate = window.onpopstate ? window.onpopstate.bind(window) : null\n    /** @type {(ev: PopStateEvent) => any} */\n    window.onpopstate = function(event) {\n      if (event.state && event.state.htmx) {\n        restoreHistory()\n        forEach(restoredElts, function(elt) {\n          triggerEvent(elt, 'htmx:restored', {\n            document: getDocument(),\n            triggerEvent\n          })\n        })\n      } else {\n        if (originalPopstate) {\n          originalPopstate(event)\n        }\n      }\n    }\n    getWindow().setTimeout(function() {\n      triggerEvent(body, 'htmx:load', {}) // give ready handlers a chance to load up before firing this event\n      body = null // kill reference for gc\n    }, 0)\n  })\n\n  return htmx\n})()\n\n/** @typedef {'get'|'head'|'post'|'put'|'delete'|'connect'|'options'|'trace'|'patch'} HttpVerb */\n\n/**\n * @typedef {Object} SwapOptions\n * @property {string} [select]\n * @property {string} [selectOOB]\n * @property {*} [eventInfo]\n * @property {string} [anchor]\n * @property {Element} [contextElement]\n * @property {swapCallback} [afterSwapCallback]\n * @property {swapCallback} [afterSettleCallback]\n * @property {swapCallback} [beforeSwapCallback]\n * @property {string} [title]\n * @property {boolean} [historyRequest]\n */\n\n/**\n * @callback swapCallback\n */\n\n/**\n * @typedef {'innerHTML' | 'outerHTML' | 'beforebegin' | 'afterbegin' | 'beforeend' | 'afterend' | 'delete' | 'none' | string} HtmxSwapStyle\n */\n\n/**\n * @typedef HtmxSwapSpecification\n * @property {HtmxSwapStyle} swapStyle\n * @property {number} swapDelay\n * @property {number} settleDelay\n * @property {boolean} [transition]\n * @property {boolean} [ignoreTitle]\n * @property {string} [head]\n * @property {'top' | 'bottom' | number } [scroll]\n * @property {string} [scrollTarget]\n * @property {string} [show]\n * @property {string} [showTarget]\n * @property {boolean} [focusScroll]\n */\n\n/**\n * @typedef {((this:Node, evt:Event) => boolean) & {source: string}} ConditionalFunction\n */\n\n/**\n * @typedef {Object} HtmxTriggerSpecification\n * @property {string} trigger\n * @property {number} [pollInterval]\n * @property {ConditionalFunction} [eventFilter]\n * @property {boolean} [changed]\n * @property {boolean} [once]\n * @property {boolean} [consume]\n * @property {number} [delay]\n * @property {string} [from]\n * @property {string} [target]\n * @property {number} [throttle]\n * @property {string} [queue]\n * @property {string} [root]\n * @property {string} [threshold]\n */\n\n/**\n * @typedef {{elt: Element, message: string, validity: ValidityState}} HtmxElementValidationError\n */\n\n/**\n * @typedef {Record<string, string>} HtmxHeaderSpecification\n * @property {'true'} HX-Request\n * @property {string|null} HX-Trigger\n * @property {string|null} HX-Trigger-Name\n * @property {string|null} HX-Target\n * @property {string} HX-Current-URL\n * @property {string} [HX-Prompt]\n * @property {'true'} [HX-Boosted]\n * @property {string} [Content-Type]\n * @property {'true'} [HX-History-Restore-Request]\n */\n\n/**\n * @typedef HtmxAjaxHelperContext\n * @property {Element|string} [source]\n * @property {Event} [event]\n * @property {HtmxAjaxHandler} [handler]\n * @property {Element|string} [target]\n * @property {HtmxSwapStyle} [swap]\n * @property {Object|FormData} [values]\n * @property {Record<string,string>} [headers]\n * @property {string} [select]\n */\n\n/**\n * @typedef {Object} HtmxRequestConfig\n * @property {boolean} boosted\n * @property {boolean} useUrlParams\n * @property {FormData} formData\n * @property {Object} parameters formData proxy\n * @property {FormData} unfilteredFormData\n * @property {Object} unfilteredParameters unfilteredFormData proxy\n * @property {HtmxHeaderSpecification} headers\n * @property {Element} elt\n * @property {Element} target\n * @property {HttpVerb} verb\n * @property {HtmxElementValidationError[]} errors\n * @property {boolean} withCredentials\n * @property {number} timeout\n * @property {string} path\n * @property {Event} triggeringEvent\n */\n\n/**\n * @typedef {Object} HtmxResponseInfo\n * @property {XMLHttpRequest} xhr\n * @property {Element} target\n * @property {HtmxRequestConfig} requestConfig\n * @property {HtmxAjaxEtc} etc\n * @property {boolean} boosted\n * @property {string} select\n * @property {{requestPath: string, finalRequestPath: string, responsePath: string|null, anchor: string}} pathInfo\n * @property {boolean} [failed]\n * @property {boolean} [successful]\n * @property {boolean} [keepIndicators]\n */\n\n/**\n * @typedef {Object} HtmxAjaxEtc\n * @property {boolean} [returnPromise]\n * @property {HtmxAjaxHandler} [handler]\n * @property {string} [select]\n * @property {Element} [targetOverride]\n * @property {HtmxSwapStyle} [swapOverride]\n * @property {Record<string,string>} [headers]\n * @property {Object|FormData} [values]\n * @property {boolean} [credentials]\n * @property {number} [timeout]\n */\n\n/**\n * @typedef {Object} HtmxResponseHandlingConfig\n * @property {string} [code]\n * @property {boolean} swap\n * @property {boolean} [error]\n * @property {boolean} [ignoreTitle]\n * @property {string} [select]\n * @property {string} [target]\n * @property {string} [swapOverride]\n * @property {string} [event]\n */\n\n/**\n * @typedef {HtmxResponseInfo & {shouldSwap: boolean, serverResponse: any, isError: boolean, ignoreTitle: boolean, selectOverride:string, swapOverride:string}} HtmxBeforeSwapDetails\n */\n\n/**\n * @callback HtmxAjaxHandler\n * @param {Element} elt\n * @param {HtmxResponseInfo} responseInfo\n */\n\n/**\n * @typedef {(() => void)} HtmxSettleTask\n */\n\n/**\n * @typedef {Object} HtmxSettleInfo\n * @property {HtmxSettleTask[]} tasks\n * @property {Element[]} elts\n * @property {string} [title]\n */\n\n/**\n * @see https://github.com/bigskysoftware/htmx-extensions/blob/main/README.md\n * @typedef {Object} HtmxExtension\n * @property {(api: any) => void} init\n * @property {(name: string, event: CustomEvent) => boolean} onEvent\n * @property {(text: string, xhr: XMLHttpRequest, elt: Element) => string} transformResponse\n * @property {(swapStyle: HtmxSwapStyle) => boolean} isInlineSwap\n * @property {(swapStyle: HtmxSwapStyle, target: Node, fragment: Node, settleInfo: HtmxSettleInfo) => boolean|Node[]} handleSwap\n * @property {(xhr: XMLHttpRequest, parameters: FormData, elt: Node) => *|string|null} encodeParameters\n * @property {() => string[]|null} getSelectors\n */\nexport default htmx\n", "import {initAll} from 'govuk-frontend';\nimport \"govuk-frontend/dist/govuk/all.mjs\";\nimport \"opg-sirius-header/sirius-header.js\";\nimport htmx from \"htmx.org/dist/htmx.esm\";\n\ndocument.body.className += ' js-enabled' + ('noModule' in HTMLScriptElement.prototype ? ' govuk-frontend-supported' : '');\ninitAll();\n\nwindow.htmx = htmx\nhtmx.logAll();\nhtmx.config.responseHandling = [{code:\".*\", swap: true}]"],
  "mappings": "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",
  "names": ["getBreakpoint", "name", "property", "value", "window", "getComputedStyle", "document", "documentElement", "getPropertyValue", "undefined", "setFocus", "$element", "options", "_options$onBeforeFocu", "isFocusable", "getAttribute", "setAttribute", "onFocus", "addEventListener", "onBlur", "once", "_options$onBlur", "call", "removeAttribute", "onBeforeFocus", "focus", "isInitialised", "$root", "moduleName", "HTMLElement", "hasAttribute", "isSupported", "$scope", "body", "classList", "contains", "isArray", "option", "Array", "isObject", "isScope", "Element", "Document", "formatErrorMessage", "Component", "message", "GOVUKFrontendError", "Error", "constructor", "args", "name", "SupportError", "$scope", "document", "body", "supportMessage", "HTMLScriptElement", "prototype", "ConfigError", "ElementError", "messageOrOptions", "message", "isObject", "component", "identifier", "element", "expectedType", "formatErrorMessage", "InitError", "componentOrMessage", "Component", "$root", "_$root", "constructor", "childConstructor", "moduleName", "InitError", "elementType", "ElementError", "element", "component", "identifier", "expectedType", "name", "checkSupport", "checkInitialised", "setAttribute", "isInitialised", "isSupported", "SupportError", "HTMLElement", "configOverride", "Symbol", "for", "ConfigurableComponent", "Component", "param", "config", "_config", "constructor", "$root", "childConstructor", "isObject", "defaults", "ConfigError", "formatErrorMessage", "datasetConfig", "normaliseDataset", "_$root", "dataset", "mergeConfigs", "normaliseString", "value", "property", "trimmedValue", "trim", "output", "outputType", "type", "includes", "length", "isFinite", "Number", "schema", "out", "entries", "Object", "properties", "entry", "namespace", "field", "toString", "extractConfigByNamespace", "normaliseOptions", "scopeOrOptions", "$scope", "document", "onError", "options", "isScope", "scope", "configObjects", "formattedConfigObject", "configObject", "key", "keys", "option", "override", "validateConfig", "validationErrors", "name", "conditions", "errors", "Array", "isArray", "required", "errorMessage", "every", "push", "newObject", "current", "keyParts", "split", "index", "I18n", "constructor", "translations", "config", "_config$locale", "locale", "document", "documentElement", "lang", "t", "lookupKey", "options", "Error", "translation", "count", "isObject", "translationPluralForm", "getPluralSuffix", "match", "replacePlaceholders", "translationString", "formatter", "Intl", "NumberFormat", "supportedLocalesOf", "length", "undefined", "replace", "placeholderWithBraces", "placeholderKey", "Object", "prototype", "hasOwnProperty", "call", "placeholderValue", "format", "hasIntlPluralRulesSupport", "Boolean", "window", "PluralRules", "Number", "isFinite", "preferredForm", "select", "console", "warn", "Accordion", "ConfigurableComponent", "constructor", "$root", "config", "i18n", "controlsClass", "showAllClass", "showAllTextClass", "sectionClass", "sectionExpandedClass", "sectionButtonClass", "sectionHeaderClass", "sectionHeadingClass", "sectionHeadingDividerClass", "sectionHeadingTextClass", "sectionHeadingTextFocusClass", "sectionShowHideToggleClass", "sectionShowHideToggleFocusClass", "sectionShowHideTextClass", "upChevronIconClass", "downChevronIconClass", "sectionSummaryClass", "sectionSummaryFocusClass", "sectionContentClass", "$sections", "$showAllButton", "$showAllIcon", "$showAllText", "I18n", "querySelectorAll", "length", "ElementError", "component", "identifier", "initControls", "initSectionHeaders", "updateShowAllButton", "areAllSectionsOpen", "document", "createElement", "setAttribute", "classList", "add", "appendChild", "$accordionControls", "insertBefore", "firstChild", "addEventListener", "onShowOrHideAllToggle", "event", "onBeforeMatch", "forEach", "$section", "i", "$header", "querySelector", "constructHeaderMarkup", "setExpanded", "isExpanded", "onSectionToggle", "setInitialState", "index", "$span", "$heading", "$summary", "$button", "id", "attr", "Array", "from", "attributes", "name", "value", "$headingText", "$headingTextFocus", "childNodes", "$child", "$showHideToggle", "$showHideToggleFocus", "$showHideText", "$showHideIcon", "getButtonPunctuationEl", "$summarySpan", "$summarySpanFocus", "remove", "removeChild", "$fragment", "target", "Element", "closest", "nowExpanded", "storeState", "expanded", "$content", "newButtonText", "t", "textContent", "ariaLabelParts", "push", "trim", "ariaLabelMessage", "join", "removeAttribute", "contains", "every", "toString", "toggle", "getIdentifier", "getAttribute", "rememberExpanded", "window", "sessionStorage", "setItem", "state", "getItem", "$punctuationEl", "moduleName", "defaults", "Object", "freeze", "hideAllSections", "hideSection", "hideSectionAriaLabel", "showAllSections", "showSection", "showSectionAriaLabel", "schema", "properties", "type", "DEBOUNCE_TIMEOUT_IN_SECONDS", "Button", "ConfigurableComponent", "constructor", "$root", "config", "debounceFormSubmitTimer", "addEventListener", "event", "handleKeyDown", "debounce", "$target", "target", "key", "HTMLElement", "getAttribute", "preventDefault", "click", "preventDoubleClick", "window", "setTimeout", "moduleName", "defaults", "Object", "freeze", "schema", "properties", "type", "closestAttributeValue", "$element", "attributeName", "$closestElementWithAttribute", "closest", "getAttribute", "CharacterCount", "ConfigurableComponent", "configOverride", "datasetConfig", "configOverrides", "maxlength", "undefined", "maxwords", "constructor", "$root", "config", "_ref", "_this$config$maxwords", "$textarea", "$visibleCountMessage", "$screenReaderCountMessage", "lastInputTimestamp", "lastInputValue", "valueChecker", "i18n", "maxLength", "querySelector", "HTMLTextAreaElement", "HTMLInputElement", "ElementError", "component", "element", "expectedType", "identifier", "errors", "validateConfig", "schema", "ConfigError", "formatErrorMessage", "I18n", "locale", "closestAttributeValue", "Infinity", "textareaDescriptionId", "id", "$textareaDescription", "document", "getElementById", "$errorMessage", "textContent", "match", "t", "count", "insertAdjacentElement", "createElement", "className", "setAttribute", "classList", "add", "removeAttribute", "bindChangeEvents", "window", "addEventListener", "updateCountMessage", "handleKeyUp", "handleFocus", "handleBlur", "updateVisibleCountMessage", "Date", "now", "setInterval", "updateIfValueChanged", "clearInterval", "value", "updateScreenReaderCountMessage", "isError", "toggle", "isOverThreshold", "getCountMessage", "text", "_text$match", "length", "remainingNumber", "countType", "formatCountMessage", "translationKeySuffix", "Math", "abs", "threshold", "currentLength", "moduleName", "defaults", "Object", "freeze", "charactersUnderLimit", "one", "other", "charactersAtLimit", "charactersOverLimit", "wordsUnderLimit", "wordsAtLimit", "wordsOverLimit", "textareaDescription", "properties", "type", "anyOf", "required", "errorMessage", "Checkboxes", "Component", "constructor", "$root", "$inputs", "querySelectorAll", "length", "ElementError", "component", "identifier", "forEach", "$input", "targetId", "getAttribute", "document", "getElementById", "setAttribute", "removeAttribute", "window", "addEventListener", "syncAllConditionalReveals", "event", "handleClick", "syncConditionalRevealWithInputState", "$target", "classList", "contains", "inputIsChecked", "checked", "toString", "toggle", "unCheckAllInputsExcept", "name", "$inputWithSameName", "form", "unCheckExclusiveInputs", "$exclusiveInput", "$clickedInput", "target", "HTMLInputElement", "type", "moduleName", "ErrorSummary", "ConfigurableComponent", "constructor", "$root", "config", "disableAutoFocus", "setFocus", "addEventListener", "event", "handleClick", "$target", "target", "focusTarget", "preventDefault", "HTMLAnchorElement", "inputId", "hash", "replace", "$input", "document", "getElementById", "$legendOrLabel", "getAssociatedLegendOrLabel", "scrollIntoView", "focus", "preventScroll", "_document$querySelect", "$fieldset", "closest", "$legends", "getElementsByTagName", "length", "$candidateLegend", "HTMLInputElement", "type", "legendTop", "getBoundingClientRect", "top", "inputRect", "height", "window", "innerHeight", "querySelector", "getAttribute", "moduleName", "defaults", "Object", "freeze", "schema", "properties", "ExitThisPage", "ConfigurableComponent", "constructor", "$root", "config", "i18n", "$button", "$skiplinkButton", "$updateSpan", "$indicatorContainer", "$overlay", "keypressCounter", "lastKeyWasModified", "timeoutTime", "keypressTimeoutId", "timeoutMessageId", "querySelector", "HTMLAnchorElement", "ElementError", "component", "element", "expectedType", "identifier", "I18n", "document", "buildIndicator", "initUpdateSpan", "initButtonClickHandler", "body", "dataset", "addEventListener", "handleKeypress", "bind", "govukFrontendExitThisPageKeypress", "window", "resetPage", "createElement", "setAttribute", "className", "appendChild", "handleClick", "i", "$indicator", "updateIndicator", "classList", "toggle", "querySelectorAll", "forEach", "index", "exitPage", "textContent", "add", "t", "location", "href", "event", "preventDefault", "key", "clearTimeout", "setKeypressTimer", "resetKeypressTimer", "shiftKey", "setTimeout", "remove", "moduleName", "defaults", "Object", "freeze", "activated", "timedOut", "pressTwoMoreTimes", "pressOneMoreTime", "schema", "properties", "type", "FileUpload", "ConfigurableComponent", "constructor", "$root", "config", "$input", "$button", "$status", "i18n", "id", "$announcements", "enteredAnotherElement", "querySelector", "ElementError", "component", "identifier", "type", "formatErrorMessage", "I18n", "locale", "closestAttributeValue", "$label", "findLabel", "setAttribute", "document", "createElement", "classList", "add", "ariaDescribedBy", "getAttribute", "className", "innerText", "t", "appendChild", "commaSpan", "containerSpan", "buttonSpan", "insertAdjacentText", "instructionSpan", "addEventListener", "onClick", "bind", "event", "preventDefault", "insertAdjacentElement", "onChange", "updateDisabledState", "observeDisabledState", "onDrop", "updateDropzoneVisibility", "disabled", "hideDraggingState", "target", "Node", "contains", "dataTransfer", "canDrop", "showDraggingState", "remove", "canFillInput", "files", "dispatchEvent", "CustomEvent", "matchesInputCapacity", "length", "items", "countFileItems", "types", "includes", "numberOfFiles", "multiple", "fileCount", "name", "count", "click", "MutationObserver", "mutationList", "mutation", "attributeName", "observe", "attributes", "toggle", "moduleName", "defaults", "Object", "freeze", "chooseFilesButton", "dropInstruction", "noFileChosen", "multipleFilesChosen", "one", "other", "enteredDropZone", "leftDropZone", "schema", "properties", "list", "result", "i", "kind", "Header", "Component", "constructor", "$root", "$menuButton", "$menu", "menuIsOpen", "mql", "querySelector", "classList", "add", "menuId", "getAttribute", "ElementError", "component", "identifier", "document", "getElementById", "element", "setupResponsiveChecks", "addEventListener", "handleMenuButtonClick", "breakpoint", "getBreakpoint", "value", "property", "window", "matchMedia", "checkMode", "addListener", "matches", "removeAttribute", "setAttribute", "toString", "moduleName", "NotificationBanner", "ConfigurableComponent", "constructor", "$root", "config", "getAttribute", "disableAutoFocus", "setFocus", "moduleName", "defaults", "Object", "freeze", "schema", "properties", "type", "PasswordInput", "ConfigurableComponent", "constructor", "$root", "config", "i18n", "$input", "$showHideButton", "$screenReaderStatusMessage", "querySelector", "HTMLInputElement", "ElementError", "component", "element", "expectedType", "identifier", "type", "HTMLButtonElement", "I18n", "locale", "closestAttributeValue", "removeAttribute", "document", "createElement", "className", "setAttribute", "insertAdjacentElement", "addEventListener", "toggle", "bind", "form", "hide", "window", "event", "persisted", "preventDefault", "show", "setType", "isHidden", "prefixButton", "prefixStatus", "innerText", "t", "moduleName", "defaults", "Object", "freeze", "showPassword", "hidePassword", "showPasswordAriaLabel", "hidePasswordAriaLabel", "passwordShownAnnouncement", "passwordHiddenAnnouncement", "schema", "properties", "Radios", "Component", "constructor", "$root", "$inputs", "querySelectorAll", "length", "ElementError", "component", "identifier", "forEach", "$input", "targetId", "getAttribute", "document", "getElementById", "setAttribute", "removeAttribute", "window", "addEventListener", "syncAllConditionalReveals", "event", "handleClick", "syncConditionalRevealWithInputState", "$target", "classList", "contains", "inputIsChecked", "checked", "toString", "toggle", "$clickedInput", "target", "HTMLInputElement", "type", "$allInputs", "$clickedInputForm", "form", "$clickedInputName", "name", "hasSameFormOwner", "moduleName", "ServiceNavigation", "Component", "constructor", "$root", "$menuButton", "$menu", "menuIsOpen", "mql", "querySelector", "menuId", "getAttribute", "ElementError", "component", "identifier", "document", "getElementById", "element", "setupResponsiveChecks", "addEventListener", "handleMenuButtonClick", "breakpoint", "getBreakpoint", "value", "property", "window", "matchMedia", "checkMode", "addListener", "matches", "removeAttribute", "setAttribute", "toString", "moduleName", "SkipLink", "Component", "constructor", "$root", "_this$$root$getAttrib", "hash", "href", "getAttribute", "origin", "window", "location", "pathname", "linkedElementId", "replace", "ElementError", "$linkedElement", "document", "getElementById", "component", "element", "identifier", "addEventListener", "setFocus", "onBeforeFocus", "classList", "add", "onBlur", "remove", "elementType", "HTMLAnchorElement", "moduleName", "Tabs", "Component", "constructor", "$root", "$tabs", "$tabList", "$tabListItems", "jsHiddenClass", "changingHash", "boundTabClick", "boundTabKeydown", "boundOnHashChange", "mql", "querySelectorAll", "length", "ElementError", "component", "identifier", "onTabClick", "bind", "onTabKeydown", "onHashChange", "querySelector", "setupResponsiveChecks", "breakpoint", "getBreakpoint", "value", "property", "window", "matchMedia", "addEventListener", "checkMode", "addListener", "_this$mql", "matches", "setup", "teardown", "_this$getTab", "setAttribute", "forEach", "$item", "$tab", "setAttributes", "hideTab", "$activeTab", "getTab", "location", "hash", "showTab", "removeAttribute", "removeEventListener", "unsetAttributes", "$tabWithHash", "$previousTab", "getCurrentTab", "focus", "unhighlightTab", "hidePanel", "highlightTab", "showPanel", "panelId", "replace", "$panel", "getPanel", "id", "classList", "add", "remove", "event", "$currentTab", "$nextTab", "currentTarget", "HTMLAnchorElement", "preventDefault", "createHistoryEntry", "key", "activatePreviousTab", "activateNextTab", "parentElement", "$nextTabListItem", "nextElementSibling", "$previousTabListItem", "previousElementSibling", "moduleName", "initAll", "scopeOrConfig", "config", "isObject", "options", "normaliseOptions", "isSupported", "SupportError", "scope", "ElementError", "element", "identifier", "error", "onError", "console", "log", "Accordion", "accordion", "Button", "button", "CharacterCount", "characterCount", "Checkboxes", "ErrorSummary", "errorSummary", "ExitThisPage", "exitThisPage", "FileUpload", "fileUpload", "Header", "NotificationBanner", "notificationBanner", "PasswordInput", "passwordInput", "Radios", "ServiceNavigation", "SkipLink", "Tabs", "forEach", "Component", "componentConfig", "createAll", "scopeOrOptions", "$elements", "_options$scope", "component", "querySelectorAll", "moduleName", "Array", "from", "map", "$element", "filter", "Boolean", "SiriusHeader", "prefix", "userRoles", "isFinanceUser", "navLinks", "navElements", "navElement", "url", "title", "hide", "openNewTab", "htmx", "elt", "type", "verb", "str", "interval", "name", "qualifiedName", "parent", "global", "condition", "initialElement", "ancestor", "attributeName", "attributeValue", "disinherit", "inherit", "closestAttr", "e", "selector", "match", "resp", "fragment", "script", "newScript", "attr", "response", "responseWithNoHead", "startTag", "doc", "titleElement", "func", "o", "dataProp", "data", "arr", "returnArr", "i", "el", "rect", "elemTop", "elemBottom", "trigger", "obj1", "obj2", "key", "jString", "error", "test", "path", "url", "callback", "evt", "event", "eltOrSelector", "delay", "value", "clazz", "node", "child", "prefix", "suffix", "trimmedSelector", "parts", "chevronsCount", "offset", "char", "result", "unprocessedParts", "item", "standardSelector", "rootNode", "start", "results", "context", "arg1", "arg2", "arg3", "arg4", "eventArgs", "attrName", "attrTarget", "eltToInheritFrom", "attribute", "targetStr", "mergeTo", "mergeFrom", "swapStyle", "target", "extensions", "extension", "oobValue", "oobElement", "settleInfo", "targets", "oobElementClone", "beforeSwapDetails", "pantry", "preservedElt", "existingElement", "id", "parentNode", "newNode", "normalizedId", "normalizedTag", "parentElt", "oldNode", "newAttributes", "autofocus", "autoFocusedElt", "insertBefore", "string", "hash", "internalData", "handlerInfo", "element", "info", "newElt", "eltBeforeNewContent", "firstChild", "ext", "newElements", "j", "oobElts", "content", "swapSpec", "swapOptions", "settleResolve", "settleReject", "doSwap", "activeElt", "selectionInfo", "oobSelectValues", "oobSelectValue", "template", "newFragment", "newActiveElt", "focusOptions", "doSettle", "task", "anchorTarget", "shouldTransition", "settlePromise", "_resolve", "_reject", "innerDoSwap", "xhr", "header", "triggerBody", "triggers", "eventName", "detail", "eventNames", "tokens", "position", "startPosition", "startChar", "symbol", "token", "last", "paramName", "bracketCount", "conditionalSource", "conditionFunction", "explicitTrigger", "cache", "triggerSpecs", "initialLength", "every", "eventFilter", "triggerSpec", "from_arg", "handler", "spec", "nodeData", "rawAttribute", "btn", "link", "samePageAnchor", "source", "explicitCancel", "elementData", "eltsToListenOn", "eltToListenOn", "eventListener", "eventData", "lastValue", "load", "explicitAction", "observerOptions", "entries", "attributes", "elements", "iter", "boostedSelector", "extensionSelectors", "selectors", "s", "form", "code", "listener", "afterOnPosition", "nextChar", "elementsToInit", "toDo", "extensionsToIgnore", "msg", "eventResult", "kebabName", "kebabedEvent", "rootElt", "innerHTML", "title", "scroll", "historyCache", "newHistoryItem", "className", "clone", "tasks", "request", "details", "cached", "indicators", "ic", "disabledElts", "disabledElement", "disabled", "ele", "processed", "formData", "v", "values", "errors", "validate", "input", "receiver", "donor", "priorityFormData", "button", "includes", "descendant", "returnStr", "realValue", "prompt", "headers", "inputValues", "paramsValue", "newValues", "swapInfoOverride", "swapInfo", "split", "splitSpec", "scrollVal", "selectorVal", "showVal", "focusScrollVal", "filteredParameters", "encodedParameters", "first", "evalAsDefault", "evaluateValue", "varsValues", "toEval", "defaultVal", "expressionVars", "headerValue", "regexp", "resolvedTarget", "requestConfig", "sameHost", "obj", "array", "index", "prop", "etc", "confirmed", "resolve", "reject", "promise", "responseHandler", "select", "eltData", "submitter", "buttonPath", "buttonVerb", "confirmQuestion", "skipConfirmation", "syncElt", "syncStrategy", "queueStrategy", "abortable", "syncStrings", "endRequestLock", "promptQuestion", "promptResponse", "rawFormData", "allFormData", "filteredFormData", "requestAttrValues", "eltIsBoosted", "useUrlParams", "splitPath", "pathNoAnchor", "anchor", "finalPath", "responseInfo", "hierarchy", "disableElts", "secondaryTriggerElt", "parentEltInHierarchy", "params", "pathFromHeaders", "typeFromHeaders", "requestPath", "responsePath", "pushUrl", "replaceUrl", "elementIsBoosted", "saveType", "responseHandlingConfig", "status", "regExp", "responseHandlingElement", "titleElt", "responseInfoSelect", "redirectPath", "redirectSwapSpec", "shouldRefresh", "historyUpdate", "responseHandling", "shouldSwap", "isError", "ignoreTitle", "selectOverride", "swapOverride", "serverResponse", "selectOOB", "finalElt", "api", "text", "parameters", "extensionsToReturn", "extensionsForElement", "extensionName", "fn", "nonceAttribute", "indicator", "metaConfig", "body", "restoredElts", "originalPopstate", "htmx_esm_default", "initAll", "htmx_esm_default"]
}
