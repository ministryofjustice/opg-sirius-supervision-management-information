{
  "version": 3,
  "sources": ["../../../node_modules/govuk-frontend/src/govuk/common/index.mjs", "../../../node_modules/govuk-frontend/src/govuk/errors/index.mjs", "../../../node_modules/govuk-frontend/src/govuk/component.mjs", "../../../node_modules/govuk-frontend/src/govuk/common/configuration.mjs", "../../../node_modules/govuk-frontend/src/govuk/i18n.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/accordion/accordion.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/button/button.mjs", "../../../node_modules/govuk-frontend/src/govuk/common/closest-attribute-value.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/character-count/character-count.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/checkboxes/checkboxes.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/error-summary/error-summary.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/exit-this-page/exit-this-page.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/file-upload/file-upload.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/header/header.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/notification-banner/notification-banner.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/password-input/password-input.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/radios/radios.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/service-navigation/service-navigation.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/skip-link/skip-link.mjs", "../../../node_modules/govuk-frontend/src/govuk/components/tabs/tabs.mjs", "../../../node_modules/govuk-frontend/src/govuk/init.mjs", "../../../node_modules/opg-sirius-header/sirius-header.js", "../../../node_modules/htmx.org/dist/htmx.esm.js", "../../assets/main.js"],
  "sourcesContent": ["/**\n * Common helpers which do not require polyfill.\n *\n * IMPORTANT: If a helper require a polyfill, please isolate it in its own module\n * so that the polyfill can be properly tree-shaken and does not burden\n * the components that do not need that helper\n */\n\n/**\n * Get GOV.UK Frontend breakpoint value from CSS custom property\n *\n * @private\n * @param {string} name - Breakpoint name\n * @returns {{ property: string, value?: string }} Breakpoint object\n */\nexport function getBreakpoint(name) {\n  const property = `--govuk-breakpoint-${name}`\n\n  // Get value from `<html>` with breakpoints on CSS :root\n  const value = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(property)\n\n  return {\n    property,\n    value: value || undefined\n  }\n}\n\n/**\n * Move focus to element\n *\n * Sets tabindex to -1 to make the element programmatically focusable,\n * but removes it on blur as the element doesn't need to be focused again.\n *\n * @private\n * @template {HTMLElement} FocusElement\n * @param {FocusElement} $element - HTML element\n * @param {object} [options] - Handler options\n * @param {function(this: FocusElement): void} [options.onBeforeFocus] - Callback before focus\n * @param {function(this: FocusElement): void} [options.onBlur] - Callback on blur\n */\nexport function setFocus($element, options = {}) {\n  const isFocusable = $element.getAttribute('tabindex')\n\n  if (!isFocusable) {\n    $element.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Handle element focus\n   */\n  function onFocus() {\n    $element.addEventListener('blur', onBlur, { once: true })\n  }\n\n  /**\n   * Handle element blur\n   */\n  function onBlur() {\n    options.onBlur?.call($element)\n\n    if (!isFocusable) {\n      $element.removeAttribute('tabindex')\n    }\n  }\n\n  // Add listener to reset element on blur, after focus\n  $element.addEventListener('focus', onFocus, { once: true })\n\n  // Focus element\n  options.onBeforeFocus?.call($element)\n  $element.focus()\n}\n\n/**\n * Checks if component is already initialised\n *\n * @internal\n * @param {Element} $root - HTML element to be checked\n * @param {string} moduleName - name of component module\n * @returns {boolean} Whether component is already initialised\n */\nexport function isInitialised($root, moduleName) {\n  return (\n    $root instanceof HTMLElement &&\n    $root.hasAttribute(`data-${moduleName}-init`)\n  )\n}\n\n/**\n * Checks if GOV.UK Frontend is supported on this page\n *\n * Some browsers will load and run our JavaScript but GOV.UK Frontend\n * won't be supported.\n *\n * @param {HTMLElement | null} [$scope] - (internal) `<body>` HTML element checked for browser support\n * @returns {boolean} Whether GOV.UK Frontend is supported on this page\n */\nexport function isSupported($scope = document.body) {\n  if (!$scope) {\n    return false\n  }\n\n  return $scope.classList.contains('govuk-frontend-supported')\n}\n\n/**\n * Check for an array\n *\n * @internal\n * @param {unknown} option - Option to check\n * @returns {boolean} Whether the option is an array\n */\nfunction isArray(option) {\n  return Array.isArray(option)\n}\n\n/**\n * Check for an object\n *\n * @internal\n * @template {Partial<Record<keyof ObjectType, unknown>>} ObjectType\n * @param {unknown | ObjectType} option - Option to check\n * @returns {option is ObjectType} Whether the option is an object\n */\nexport function isObject(option) {\n  return !!option && typeof option === 'object' && !isArray(option)\n}\n\n/**\n * Check for valid scope\n *\n * @internal\n * @template {Element | Document} ScopeType\n * @param {unknown | ScopeType} $scope - Scope of the document to search within\n * @returns {$scope is ScopeType} Whether the scope can be queried\n */\nexport function isScope($scope) {\n  return !!$scope && ($scope instanceof Element || $scope instanceof Document)\n}\n\n/**\n * Format error message\n *\n * @internal\n * @param {ComponentWithModuleName} Component - Component that threw the error\n * @param {string} message - Error message\n * @returns {string} - Formatted error message\n */\nexport function formatErrorMessage(Component, message) {\n  return `${Component.moduleName}: ${message}`\n}\n\n/* eslint-disable jsdoc/valid-types --\n * `{new(...args: any[] ): object}` is not recognised as valid\n * https://github.com/gajus/eslint-plugin-jsdoc/issues/145#issuecomment-1308722878\n * https://github.com/jsdoc-type-pratt-parser/jsdoc-type-pratt-parser/issues/131\n **/\n\n/**\n * @typedef ComponentWithModuleName\n * @property {string} moduleName - Name of the component\n */\n\n/* eslint-enable jsdoc/valid-types */\n", "import { formatErrorMessage, isObject } from '../common/index.mjs'\n\n/**\n * GOV.UK Frontend error\n *\n * A base class for `Error`s thrown by GOV.UK Frontend.\n *\n * It is meant to be extended into specific types of errors\n * to be thrown by our code.\n *\n * @example\n * ```js\n * class MissingRootError extends GOVUKFrontendError {\n *   // Setting an explicit name is important as extending the class will not\n *   // set a new `name` on the subclass. The `name` property is important\n *   // to ensure intelligible error names even if the class name gets\n *   // mangled by a minifier\n *   name = \"MissingRootError\"\n * }\n * ```\n * @virtual\n */\nexport class GOVUKFrontendError extends Error {\n  name = 'GOVUKFrontendError'\n}\n\n/**\n * Indicates that GOV.UK Frontend is not supported\n */\nexport class SupportError extends GOVUKFrontendError {\n  name = 'SupportError'\n\n  /**\n   * Checks if GOV.UK Frontend is supported on this page\n   *\n   * @param {HTMLElement | null} [$scope] - HTML element `<body>` checked for browser support\n   */\n  constructor($scope = document.body) {\n    const supportMessage =\n      'noModule' in HTMLScriptElement.prototype\n        ? 'GOV.UK Frontend initialised without `<body class=\"govuk-frontend-supported\">` from template `<script>` snippet'\n        : 'GOV.UK Frontend is not supported in this browser'\n\n    super(\n      $scope\n        ? supportMessage\n        : 'GOV.UK Frontend initialised without `<script type=\"module\">`'\n    )\n  }\n}\n\n/**\n * Indicates that a component has received an illegal configuration\n */\nexport class ConfigError extends GOVUKFrontendError {\n  name = 'ConfigError'\n}\n\n/**\n * Indicates an issue with an element (possibly `null` or `undefined`)\n */\nexport class ElementError extends GOVUKFrontendError {\n  name = 'ElementError'\n\n  /**\n   * @internal\n   * @overload\n   * @param {string} message - Element error message\n   */\n\n  /**\n   * @internal\n   * @overload\n   * @param {ElementErrorOptions} options - Element error options\n   */\n\n  /**\n   * @internal\n   * @param {string | ElementErrorOptions} messageOrOptions - Element error message or options\n   */\n  constructor(messageOrOptions) {\n    let message = typeof messageOrOptions === 'string' ? messageOrOptions : ''\n\n    // Build message from options\n    if (isObject(messageOrOptions)) {\n      const { component, identifier, element, expectedType } = messageOrOptions\n\n      message = identifier\n\n      // Append reason\n      message += element\n        ? ` is not of type ${expectedType ?? 'HTMLElement'}`\n        : ' not found'\n\n      // Prepend with module name (optional)\n      if (component) {\n        message = formatErrorMessage(component, message)\n      }\n    }\n\n    super(message)\n  }\n}\n\n/**\n * Indicates that a component is already initialised\n */\nexport class InitError extends GOVUKFrontendError {\n  name = 'InitError'\n\n  /**\n   * @internal\n   * @param {ComponentWithModuleName | string} componentOrMessage - name of the component module\n   */\n  constructor(componentOrMessage) {\n    const message =\n      typeof componentOrMessage === 'string'\n        ? componentOrMessage\n        : formatErrorMessage(\n            componentOrMessage,\n            `Root element (\\`$root\\`) already initialised`\n          )\n\n    super(message)\n  }\n}\n\n/**\n * Element error options\n *\n * @internal\n * @typedef {object} ElementErrorOptions\n * @property {Element | Document | null} [element] - The element in error (optional)\n * @property {ComponentWithModuleName} [component] - Component throwing the error (optional)\n * @property {string} identifier - An identifier that'll let the user understand which element has an error. This is whatever makes the most sense\n * @property {string} [expectedType] - The type that was expected for the identifier (optional)\n */\n\n/**\n * @import { ComponentWithModuleName } from '../common/index.mjs'\n */\n", "import { isInitialised, isSupported } from './common/index.mjs'\nimport { ElementError, InitError, SupportError } from './errors/index.mjs'\n\n/**\n * Base Component class\n *\n * Centralises the behaviours shared by our components\n *\n * @virtual\n * @template {Element} [RootElementType=HTMLElement]\n */\nexport class Component {\n  /**\n   * @type {typeof Element}\n   */\n  static elementType = HTMLElement\n\n  // allows Typescript user to work around the lack of types\n  // in GOVUKFrontend package, Typescript is not aware of $root\n  // in components that extend GOVUKFrontendComponent\n  /**\n   * Returns the root element of the component\n   *\n   * @protected\n   * @returns {RootElementType} - the root element of component\n   */\n  get $root() {\n    return this._$root\n  }\n\n  /**\n   * @protected\n   * @type {RootElementType}\n   */\n  _$root\n\n  /**\n   * Constructs a new component, validating that GOV.UK Frontend is supported\n   *\n   * @internal\n   * @param {Element | null} [$root] - HTML element to use for component\n   */\n  constructor($root) {\n    const childConstructor = /** @type {ChildClassConstructor} */ (\n      this.constructor\n    )\n\n    // TypeScript does not enforce that inheriting classes will define a `moduleName`\n    // (even if we add a `@virtual` `static moduleName` property to this class).\n    // While we trust users to do this correctly, we do a little check to provide them\n    // a helpful error message.\n    //\n    // After this, we'll be sure that `childConstructor` has a `moduleName`\n    // as expected of the `ChildClassConstructor` we've cast `this.constructor` to.\n    if (typeof childConstructor.moduleName !== 'string') {\n      throw new InitError(`\\`moduleName\\` not defined in component`)\n    }\n\n    if (!($root instanceof childConstructor.elementType)) {\n      throw new ElementError({\n        element: $root,\n        component: childConstructor,\n        identifier: 'Root element (`$root`)',\n        expectedType: childConstructor.elementType.name\n      })\n    } else {\n      this._$root = /** @type {RootElementType} */ ($root)\n    }\n\n    childConstructor.checkSupport()\n\n    this.checkInitialised()\n\n    const moduleName = childConstructor.moduleName\n\n    this.$root.setAttribute(`data-${moduleName}-init`, '')\n  }\n\n  /**\n   * Validates whether component is already initialised\n   *\n   * @private\n   * @throws {InitError} when component is already initialised\n   */\n  checkInitialised() {\n    const constructor = /** @type {ChildClassConstructor} */ (this.constructor)\n    const moduleName = constructor.moduleName\n\n    if (moduleName && isInitialised(this.$root, moduleName)) {\n      throw new InitError(constructor)\n    }\n  }\n\n  /**\n   * Validates whether components are supported\n   *\n   * @throws {SupportError} when the components are not supported\n   */\n  static checkSupport() {\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n  }\n}\n\n/**\n * @typedef ChildClass\n * @property {string} moduleName - The module name that'll be looked for in the DOM when initialising the component\n */\n\n/**\n * @typedef {typeof Component & ChildClass} ChildClassConstructor\n */\n", "import { Component } from '../component.mjs'\nimport { ConfigError } from '../errors/index.mjs'\n\nimport { isObject, isScope, formatErrorMessage } from './index.mjs'\n\nexport const configOverride = Symbol.for('configOverride')\n\n/**\n * Base Component class\n *\n * Centralises the behaviours shared by our components\n *\n * @virtual\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} [ConfigurationType=ObjectNested]\n * @template {Element & { dataset: DOMStringMap }} [RootElementType=HTMLElement]\n * @augments Component<RootElementType>\n */\nexport class ConfigurableComponent extends Component {\n  /**\n   * configOverride\n   *\n   * Function which defines configuration overrides to prioritize\n   * properties from the root element's dataset.\n   *\n   * It should take a subset of configuration as input and return\n   * a new configuration object with properties that should be\n   * overridden based on the root element's dataset. A Symbol\n   * is used for indexing to prevent conflicts.\n   *\n   * @internal\n   * @virtual\n   * @param {Partial<ConfigurationType>} [param] - Configuration object\n   * @returns {Partial<ConfigurationType>} return - Configuration object\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [configOverride](param) {\n    return {}\n  }\n\n  /**\n   * Returns the root element of the component\n   *\n   * @protected\n   * @returns {ConfigurationType} - the root element of component\n   */\n  get config() {\n    return this._config\n  }\n\n  /**\n   *\n   * @type {ConfigurationType}\n   */\n  _config\n\n  /**\n   * Constructs a new component, validating that GOV.UK Frontend is supported\n   *\n   * @internal\n   * @param {Element | null} [$root] - HTML element to use for component\n   * @param {ConfigurationType} [config] - HTML element to use for component\n   */\n  constructor($root, config) {\n    super($root)\n\n    const childConstructor =\n      /** @type {ChildClassConstructor<ConfigurationType>} */ (this.constructor)\n\n    if (!isObject(childConstructor.defaults)) {\n      throw new ConfigError(\n        formatErrorMessage(\n          childConstructor,\n          'Config passed as parameter into constructor but no defaults defined'\n        )\n      )\n    }\n\n    const datasetConfig = /** @type {ConfigurationType} */ (\n      normaliseDataset(childConstructor, this._$root.dataset)\n    )\n\n    this._config = /** @type {ConfigurationType} */ (\n      mergeConfigs(\n        childConstructor.defaults,\n        config ?? {},\n        this[configOverride](datasetConfig),\n        datasetConfig\n      )\n    )\n  }\n}\n\n/**\n * Normalise string\n *\n * 'If it looks like a duck, and it quacks like a duck…' 🦆\n *\n * If the passed value looks like a boolean or a number, convert it to a boolean\n * or number.\n *\n * Designed to be used to convert config passed via data attributes (which are\n * always strings) into something sensible.\n *\n * @internal\n * @param {DOMStringMap[string]} value - The value to normalise\n * @param {SchemaProperty} [property] - Component schema property\n * @returns {string | boolean | number | undefined} Normalised data\n */\nexport function normaliseString(value, property) {\n  const trimmedValue = value ? value.trim() : ''\n\n  let output\n  let outputType = property?.type\n\n  // No schema type set? Determine automatically\n  if (!outputType) {\n    if (['true', 'false'].includes(trimmedValue)) {\n      outputType = 'boolean'\n    }\n\n    // Empty / whitespace-only strings are considered finite so we need to check\n    // the length of the trimmed string as well\n    if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n      outputType = 'number'\n    }\n  }\n\n  switch (outputType) {\n    case 'boolean':\n      output = trimmedValue === 'true'\n      break\n\n    case 'number':\n      output = Number(trimmedValue)\n      break\n\n    default:\n      output = value\n  }\n\n  return output\n}\n\n/**\n * Normalise dataset\n *\n * Loop over an object and normalise each value using {@link normaliseString},\n * optionally expanding nested `i18n.field`\n *\n * @internal\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @template {[keyof ConfigurationType, SchemaProperty | undefined][]} SchemaEntryType\n * @param {{ schema?: Schema<ConfigurationType>, moduleName: string }} Component - Component class\n * @param {DOMStringMap} dataset - HTML element dataset\n * @returns {ObjectNested} Normalised dataset\n */\nexport function normaliseDataset(Component, dataset) {\n  if (!isObject(Component.schema)) {\n    throw new ConfigError(\n      formatErrorMessage(\n        Component,\n        'Config passed as parameter into constructor but no schema defined'\n      )\n    )\n  }\n\n  const out = /** @type {ObjectNested} */ ({})\n  const entries = /** @type {SchemaEntryType} */ (\n    Object.entries(Component.schema.properties)\n  )\n\n  // Normalise top-level dataset ('data-*') values using schema types\n  for (const entry of entries) {\n    const [namespace, property] = entry\n\n    // Cast the `namespace` to string so it can be used to access the dataset\n    const field = namespace.toString()\n\n    if (field in dataset) {\n      out[field] = normaliseString(dataset[field], property)\n    }\n\n    /**\n     * Extract and normalise nested object values automatically using\n     * {@link normaliseString} but only schema object types are allowed\n     */\n    if (property?.type === 'object') {\n      out[field] = extractConfigByNamespace(\n        Component.schema,\n        dataset,\n        namespace\n      )\n    }\n  }\n\n  return out\n}\n\n/**\n * Normalise options passed to `initAll` or `createAll`\n *\n * @internal\n * @template {CompatibleClass} ComponentClass\n * @param {Config | CreateAllOptions<ComponentClass> | OnErrorCallback<ComponentClass> | Element | Document | null} [scopeOrOptions] - Scope of the document to search within, initialisation options or error callback function\n * @returns {CreateAllOptions<ComponentClass>} Normalised options\n */\nexport function normaliseOptions(scopeOrOptions) {\n  let /** @type {Element | Document | null} */ $scope = document\n  let /** @type {OnErrorCallback<ComponentClass> | undefined} */ onError\n\n  // Handle options object\n  if (isObject(scopeOrOptions)) {\n    const options = scopeOrOptions\n\n    // Scope must be valid or null\n    if (isScope(options.scope) || options.scope === null) {\n      $scope = options.scope\n    }\n\n    // Error handler must be a function\n    if (typeof options.onError === 'function') {\n      onError = options.onError\n    }\n  }\n\n  if (isScope(scopeOrOptions)) {\n    $scope = scopeOrOptions\n  } else if (scopeOrOptions === null) {\n    $scope = null\n  } else if (typeof scopeOrOptions === 'function') {\n    onError = scopeOrOptions\n  }\n\n  return {\n    scope: $scope,\n    onError\n  }\n}\n\n/**\n * Config merging function\n *\n * Takes any number of objects and combines them together, with\n * greatest priority on the LAST item passed in.\n *\n * @internal\n * @param {...{ [key: string]: unknown }} configObjects - Config objects to merge\n * @returns {{ [key: string]: unknown }} A merged config object\n */\nexport function mergeConfigs(...configObjects) {\n  // Start with an empty object as our base\n  /** @type {{ [key: string]: unknown }} */\n  const formattedConfigObject = {}\n\n  // Loop through each of the passed objects\n  for (const configObject of configObjects) {\n    for (const key of Object.keys(configObject)) {\n      const option = formattedConfigObject[key]\n      const override = configObject[key]\n\n      // Push their keys one-by-one into formattedConfigObject. Any duplicate\n      // keys with object values will be merged, otherwise the new value will\n      // override the existing value.\n      if (isObject(option) && isObject(override)) {\n        formattedConfigObject[key] = mergeConfigs(option, override)\n      } else {\n        // Apply override\n        formattedConfigObject[key] = override\n      }\n    }\n  }\n\n  return formattedConfigObject\n}\n\n/**\n * Validate component config by schema\n *\n * Follows limited examples in JSON schema for wider support in future\n *\n * {@link https://ajv.js.org/json-schema.html#compound-keywords}\n * {@link https://ajv.js.org/packages/ajv-errors.html#single-message}\n *\n * @internal\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @param {Schema<ConfigurationType>} schema - The schema of a component\n * @param {ConfigurationType} config - Component config\n * @returns {string[]} List of validation errors\n */\nexport function validateConfig(schema, config) {\n  const validationErrors = []\n\n  // Check errors for each schema\n  for (const [name, conditions] of Object.entries(schema)) {\n    const errors = []\n\n    // Check errors for each schema condition\n    if (Array.isArray(conditions)) {\n      for (const { required, errorMessage } of conditions) {\n        if (!required.every((key) => !!config[key])) {\n          errors.push(errorMessage) // Missing config key value\n        }\n      }\n\n      // Check one condition passes or add errors\n      if (name === 'anyOf' && !(conditions.length - errors.length >= 1)) {\n        validationErrors.push(...errors)\n      }\n    }\n  }\n\n  return validationErrors\n}\n\n/**\n * Extracts keys starting with a particular namespace from dataset ('data-*')\n * object, removing the namespace in the process, normalising all values\n *\n * @internal\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @param {Schema<ConfigurationType>} schema - The schema of a component\n * @param {DOMStringMap} dataset - The object to extract key-value pairs from\n * @param {keyof ConfigurationType} namespace - The namespace to filter keys with\n * @returns {ObjectNested | undefined} Nested object with dot-separated key namespace removed\n */\nexport function extractConfigByNamespace(schema, dataset, namespace) {\n  const property = schema.properties[namespace]\n\n  // Only extract configs for object schema properties\n  if (property?.type !== 'object') {\n    return\n  }\n\n  // Add default empty config\n  const newObject = /** @type {Record<typeof namespace, ObjectNested>} */ ({\n    [namespace]: {}\n  })\n\n  for (const [key, value] of Object.entries(dataset)) {\n    /** @type {ObjectNested | ObjectNested[NestedKey]} */\n    let current = newObject\n\n    // Split the key into parts, using . as our namespace separator\n    const keyParts = key.split('.')\n\n    /**\n     * Create new level per part\n     *\n     * e.g. 'i18n.textareaDescription.other' becomes\n     * `{ i18n: { textareaDescription: { other } } }`\n     */\n    for (const [index, name] of keyParts.entries()) {\n      if (isObject(current)) {\n        // Drop down to nested object until the last part\n        if (index < keyParts.length - 1) {\n          // New nested object (optionally) replaces existing value\n          if (!isObject(current[name])) {\n            current[name] = {}\n          }\n\n          // Drop down into new or existing nested object\n          current = current[name]\n        } else if (key !== namespace) {\n          // Normalised value (optionally) replaces existing value\n          current[name] = normaliseString(value)\n        }\n      }\n    }\n  }\n\n  return newObject[namespace]\n}\n\n/**\n * @internal\n * @typedef {keyof ObjectNested} NestedKey\n * @typedef {{ [key: string]: string | boolean | number | ObjectNested | undefined }} ObjectNested\n */\n\n/**\n * Schema for component config\n *\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @typedef {object} Schema\n * @property {Record<keyof ConfigurationType, SchemaProperty | undefined>} properties - Schema properties\n * @property {SchemaCondition<ConfigurationType>[]} [anyOf] - List of schema conditions\n */\n\n/**\n * Schema property for component config\n *\n * @typedef {object} SchemaProperty\n * @property {'string' | 'boolean' | 'number' | 'object'} type - Property type\n */\n\n/**\n * Schema condition for component config\n *\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @typedef {object} SchemaCondition\n * @property {(keyof ConfigurationType)[]} required - List of required config fields\n * @property {string} errorMessage - Error message when required config fields not provided\n */\n\n/**\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} [ConfigurationType=ObjectNested]\n * @typedef ChildClass\n * @property {string} moduleName - The module name that'll be looked for in the DOM when initialising the component\n * @property {Schema<ConfigurationType>} [schema] - The schema of the component configuration\n * @property {ConfigurationType} [defaults] - The default values of the configuration of the component\n */\n\n/**\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} [ConfigurationType=ObjectNested]\n * @typedef {typeof Component & ChildClass<ConfigurationType>} ChildClassConstructor<ConfigurationType>\n */\n\n/**\n * @import { CompatibleClass, Config, CreateAllOptions, OnErrorCallback } from '../init.mjs'\n */\n", "import { isObject } from './common/index.mjs'\n\n/**\n * Internal support for selecting messages to render, with placeholder\n * interpolation and locale-aware number formatting and pluralisation\n *\n * @internal\n */\nexport class I18n {\n  translations\n  locale\n\n  /**\n   * @internal\n   * @param {{ [key: string]: string | TranslationPluralForms }} translations - Key-value pairs of the translation strings to use.\n   * @param {object} [config] - Configuration options for the function.\n   * @param {string | null} [config.locale] - An overriding locale for the PluralRules functionality.\n   */\n  constructor(translations = {}, config = {}) {\n    // Make list of translations available throughout function\n    this.translations = translations\n\n    // The locale to use for PluralRules and NumberFormat\n    this.locale = config.locale ?? (document.documentElement.lang || 'en')\n  }\n\n  /**\n   * The most used function - takes the key for a given piece of UI text and\n   * returns the appropriate string.\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {{ [key: string]: unknown }} [options] - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The appropriate translation string.\n   * @throws {Error} Lookup key required\n   * @throws {Error} Options required for `${}` placeholders\n   */\n  t(lookupKey, options) {\n    if (!lookupKey) {\n      // Print a console error if no lookup key has been provided\n      throw new Error('i18n: lookup key missing')\n    }\n\n    // Fetch the translation for that lookup key\n    let translation = this.translations[lookupKey]\n\n    // If the `count` option is set, determine which plural suffix is needed and\n    // change the lookupKey to match. We check to see if it's numeric instead of\n    // falsy, as this could legitimately be 0.\n    if (typeof options?.count === 'number' && isObject(translation)) {\n      const translationPluralForm =\n        translation[this.getPluralSuffix(lookupKey, options.count)]\n\n      // Update translation with plural suffix\n      if (translationPluralForm) {\n        translation = translationPluralForm\n      }\n    }\n\n    if (typeof translation === 'string') {\n      // Check for ${} placeholders in the translation string\n      // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n      if (translation.match(/%{(.\\S+)}/)) {\n        if (!options) {\n          throw new Error(\n            'i18n: cannot replace placeholders in string if no option data provided'\n          )\n        }\n\n        return this.replacePlaceholders(translation, options)\n      }\n\n      return translation\n    }\n\n    // If the key wasn't found in our translations object,\n    // return the lookup key itself as the fallback\n    return lookupKey\n  }\n\n  /**\n   * Takes a translation string with placeholders, and replaces the placeholders\n   * with the provided data\n   *\n   * @internal\n   * @param {string} translationString - The translation string\n   * @param {{ [key: string]: unknown }} options - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The translation string to output, with $\\{\\} placeholders replaced\n   */\n  replacePlaceholders(translationString, options) {\n    const formatter = Intl.NumberFormat.supportedLocalesOf(this.locale).length\n      ? new Intl.NumberFormat(this.locale)\n      : undefined\n\n    return translationString.replace(\n      /%{(.\\S+)}/g,\n\n      /**\n       * Replace translation string placeholders\n       *\n       * @internal\n       * @param {string} placeholderWithBraces - Placeholder with braces\n       * @param {string} placeholderKey - Placeholder key\n       * @returns {string} Placeholder value\n       */\n      function (placeholderWithBraces, placeholderKey) {\n        if (Object.prototype.hasOwnProperty.call(options, placeholderKey)) {\n          const placeholderValue = options[placeholderKey]\n\n          // If a user has passed `false` as the value for the placeholder\n          // treat it as though the value should not be displayed\n          if (\n            placeholderValue === false ||\n            (typeof placeholderValue !== 'number' &&\n              typeof placeholderValue !== 'string')\n          ) {\n            return ''\n          }\n\n          // If the placeholder's value is a number, localise the number formatting\n          if (typeof placeholderValue === 'number') {\n            return formatter\n              ? formatter.format(placeholderValue)\n              : `${placeholderValue}`\n          }\n\n          return placeholderValue\n        }\n\n        throw new Error(\n          `i18n: no data found to replace ${placeholderWithBraces} placeholder in string`\n        )\n      }\n    )\n  }\n\n  /**\n   * Check to see if the browser supports Intl.PluralRules\n   *\n   * It requires all conditions to be met in order to be supported:\n   * - The implementation of Intl supports PluralRules (NOT true in Safari 10–12)\n   * - The browser/OS has plural rules for the current locale (browser dependent)\n   *\n   * {@link https://browsersl.ist/#q=supports+es6-module+and+not+supports+intl-pluralrules}\n   *\n   * @internal\n   * @returns {boolean} Returns true if all conditions are met. Returns false otherwise.\n   */\n  hasIntlPluralRulesSupport() {\n    return Boolean(\n      'PluralRules' in window.Intl &&\n        Intl.PluralRules.supportedLocalesOf(this.locale).length\n    )\n  }\n\n  /**\n   * Get the appropriate suffix for the plural form.\n   *\n   * Uses Intl.PluralRules (or our own fallback implementation) to get the\n   * 'preferred' form to use for the given count.\n   *\n   * Checks that a translation has been provided for that plural form – if it\n   * hasn't, it'll fall back to the 'other' plural form (unless that doesn't exist\n   * either, in which case an error will be thrown)\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The suffix associated with the correct pluralisation for this locale.\n   * @throws {Error} Plural form `.other` required when preferred plural form is missing\n   */\n  getPluralSuffix(lookupKey, count) {\n    // Validate that the number is actually a number.\n    //\n    // Number(count) will turn anything that can't be converted to a Number type\n    // into 'NaN'. isFinite filters out NaN, as it isn't a finite number.\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-conversion\n    count = Number(count)\n    if (!isFinite(count)) {\n      return 'other'\n    }\n\n    // Fetch the translation for that lookup key\n    const translation = this.translations[lookupKey]\n\n    // Check to verify that all the requirements for Intl.PluralRules are met.\n    // If so, we can use that instead of our custom implementation. Otherwise,\n    // use the hardcoded fallback.\n    const preferredForm = this.hasIntlPluralRulesSupport()\n      ? new Intl.PluralRules(this.locale).select(count)\n      : 'other'\n\n    // Use the correct plural form if provided\n    if (isObject(translation)) {\n      if (preferredForm in translation) {\n        return preferredForm\n        // Fall back to `other` if the plural form is missing, but log a warning\n        // to the console\n      } else if ('other' in translation) {\n        console.warn(\n          `i18n: Missing plural form \".${preferredForm}\" for \"${this.locale}\" locale. Falling back to \".other\".`\n        )\n\n        return 'other'\n      }\n    }\n\n    // If the required `other` plural form is missing, all we can do is error\n    throw new Error(\n      `i18n: Plural form \".other\" is required for \"${this.locale}\" locale`\n    )\n  }\n}\n\n/**\n * Plural rule category mnemonic tags\n *\n * @internal\n * @typedef {'zero' | 'one' | 'two' | 'few' | 'many' | 'other'} PluralRule\n */\n\n/**\n * Translated message by plural rule they correspond to.\n *\n * Allows to group pluralised messages under a single key when passing\n * translations to a component's constructor\n *\n * @internal\n * @typedef {object} TranslationPluralForms\n * @property {string} [other] - General plural form\n * @property {string} [zero] - Plural form used with 0\n * @property {string} [one] - Plural form used with 1\n * @property {string} [two] - Plural form used with 2\n * @property {string} [few] - Plural form used for a few\n * @property {string} [many] - Plural form used for many\n */\n", "import { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Accordion component\n *\n * This allows a collection of sections to be collapsed by default, showing only\n * their headers. Sections can be expanded or collapsed individually by clicking\n * their headers. A \"Show all sections\" button is also added to the top of the\n * accordion, which switches to \"Hide all sections\" when all the sections are\n * expanded.\n *\n * The state of each section is saved to the DOM via the `aria-expanded`\n * attribute, which also provides accessibility.\n *\n * @preserve\n * @augments ConfigurableComponent<AccordionConfig>\n */\nexport class Accordion extends ConfigurableComponent {\n  /** @private */\n  i18n\n\n  /** @private */\n  controlsClass = 'govuk-accordion__controls'\n\n  /** @private */\n  showAllClass = 'govuk-accordion__show-all'\n\n  /** @private */\n  showAllTextClass = 'govuk-accordion__show-all-text'\n\n  /** @private */\n  sectionClass = 'govuk-accordion__section'\n\n  /** @private */\n  sectionExpandedClass = 'govuk-accordion__section--expanded'\n\n  /** @private */\n  sectionButtonClass = 'govuk-accordion__section-button'\n\n  /** @private */\n  sectionHeaderClass = 'govuk-accordion__section-header'\n\n  /** @private */\n  sectionHeadingClass = 'govuk-accordion__section-heading'\n\n  /** @private */\n  sectionHeadingDividerClass = 'govuk-accordion__section-heading-divider'\n\n  /** @private */\n  sectionHeadingTextClass = 'govuk-accordion__section-heading-text'\n\n  /** @private */\n  sectionHeadingTextFocusClass = 'govuk-accordion__section-heading-text-focus'\n\n  /** @private */\n  sectionShowHideToggleClass = 'govuk-accordion__section-toggle'\n\n  /** @private */\n  sectionShowHideToggleFocusClass = 'govuk-accordion__section-toggle-focus'\n\n  /** @private */\n  sectionShowHideTextClass = 'govuk-accordion__section-toggle-text'\n\n  /** @private */\n  upChevronIconClass = 'govuk-accordion-nav__chevron'\n\n  /** @private */\n  downChevronIconClass = 'govuk-accordion-nav__chevron--down'\n\n  /** @private */\n  sectionSummaryClass = 'govuk-accordion__section-summary'\n\n  /** @private */\n  sectionSummaryFocusClass = 'govuk-accordion__section-summary-focus'\n\n  /** @private */\n  sectionContentClass = 'govuk-accordion__section-content'\n\n  /** @private */\n  $sections\n\n  /**\n   * @private\n   * @type {HTMLButtonElement | null}\n   */\n  $showAllButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllIcon = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllText = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for accordion\n   * @param {AccordionConfig} [config] - Accordion config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    this.i18n = new I18n(this.config.i18n)\n\n    const $sections = this.$root.querySelectorAll(`.${this.sectionClass}`)\n    if (!$sections.length) {\n      throw new ElementError({\n        component: Accordion,\n        identifier: `Sections (\\`<div class=\"${this.sectionClass}\">\\`)`\n      })\n    }\n\n    this.$sections = $sections\n\n    this.initControls()\n    this.initSectionHeaders()\n\n    this.updateShowAllButton(this.areAllSectionsOpen())\n  }\n\n  /**\n   * Initialise controls and set attributes\n   *\n   * @private\n   */\n  initControls() {\n    // Create \"Show all\" button and set attributes\n    this.$showAllButton = document.createElement('button')\n    this.$showAllButton.setAttribute('type', 'button')\n    this.$showAllButton.setAttribute('class', this.showAllClass)\n    this.$showAllButton.setAttribute('aria-expanded', 'false')\n\n    // Create icon, add to element\n    this.$showAllIcon = document.createElement('span')\n    this.$showAllIcon.classList.add(this.upChevronIconClass)\n    this.$showAllButton.appendChild(this.$showAllIcon)\n\n    // Create control wrapper and add controls to it\n    const $accordionControls = document.createElement('div')\n    $accordionControls.setAttribute('class', this.controlsClass)\n    $accordionControls.appendChild(this.$showAllButton)\n    this.$root.insertBefore($accordionControls, this.$root.firstChild)\n\n    // Build additional wrapper for Show all toggle text and place after icon\n    this.$showAllText = document.createElement('span')\n    this.$showAllText.classList.add(this.showAllTextClass)\n    this.$showAllButton.appendChild(this.$showAllText)\n\n    // Handle click events on the show/hide all button\n    this.$showAllButton.addEventListener('click', () =>\n      this.onShowOrHideAllToggle()\n    )\n\n    // Handle 'beforematch' events, if the user agent supports them\n    if ('onbeforematch' in document) {\n      document.addEventListener('beforematch', (event) =>\n        this.onBeforeMatch(event)\n      )\n    }\n  }\n\n  /**\n   * Initialise section headers\n   *\n   * @private\n   */\n  initSectionHeaders() {\n    this.$sections.forEach(($section, i) => {\n      const $header = $section.querySelector(`.${this.sectionHeaderClass}`)\n      if (!$header) {\n        throw new ElementError({\n          component: Accordion,\n          identifier: `Section headers (\\`<div class=\"${this.sectionHeaderClass}\">\\`)`\n        })\n      }\n\n      // Set header attributes\n      this.constructHeaderMarkup($header, i)\n      this.setExpanded(this.isExpanded($section), $section)\n\n      // Handle events\n      $header.addEventListener('click', () => this.onSectionToggle($section))\n\n      // See if there is any state stored in sessionStorage and set the sections\n      // to open or closed.\n      this.setInitialState($section)\n    })\n  }\n\n  /**\n   * Construct section header\n   *\n   * @private\n   * @param {Element} $header - Section header\n   * @param {number} index - Section index\n   */\n  constructHeaderMarkup($header, index) {\n    const $span = $header.querySelector(`.${this.sectionButtonClass}`)\n    const $heading = $header.querySelector(`.${this.sectionHeadingClass}`)\n    const $summary = $header.querySelector(`.${this.sectionSummaryClass}`)\n\n    if (!$heading) {\n      throw new ElementError({\n        component: Accordion,\n        identifier: `Section heading (\\`.${this.sectionHeadingClass}\\`)`\n      })\n    }\n\n    if (!$span) {\n      throw new ElementError({\n        component: Accordion,\n        identifier: `Section button placeholder (\\`<span class=\"${this.sectionButtonClass}\">\\`)`\n      })\n    }\n\n    // Create a button element that will replace the\n    // '.govuk-accordion__section-button' span\n    const $button = document.createElement('button')\n    $button.setAttribute('type', 'button')\n    $button.setAttribute(\n      'aria-controls',\n      `${this.$root.id}-content-${index + 1}`\n    )\n\n    // Copy all attributes from $span to $button (except `id`, which gets added\n    // to the `$headingText` element)\n    for (const attr of Array.from($span.attributes)) {\n      if (attr.name !== 'id') {\n        $button.setAttribute(attr.name, attr.value)\n      }\n    }\n\n    // Create container for heading text so it can be styled\n    const $headingText = document.createElement('span')\n    $headingText.classList.add(this.sectionHeadingTextClass)\n    // Copy the span ID to the heading text to allow it to be referenced by\n    // `aria-labelledby` on the hidden content area without \"Show this section\"\n    $headingText.id = $span.id\n\n    // Create an inner heading text container to limit the width of the focus\n    // state\n    const $headingTextFocus = document.createElement('span')\n    $headingTextFocus.classList.add(this.sectionHeadingTextFocusClass)\n    $headingText.appendChild($headingTextFocus)\n    // span could contain HTML elements\n    // (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n    Array.from($span.childNodes).forEach(($child) =>\n      $headingTextFocus.appendChild($child)\n    )\n\n    // Create container for show / hide icons and text.\n    const $showHideToggle = document.createElement('span')\n    $showHideToggle.classList.add(this.sectionShowHideToggleClass)\n    // Tell Google not to index the 'show' text as part of the heading. Must be\n    // set on the element before it's added to the DOM.\n    // See https://developers.google.com/search/docs/advanced/robots/robots_meta_tag#data-nosnippet-attr\n    $showHideToggle.setAttribute('data-nosnippet', '')\n    // Create an inner container to limit the width of the focus state\n    const $showHideToggleFocus = document.createElement('span')\n    $showHideToggleFocus.classList.add(this.sectionShowHideToggleFocusClass)\n    $showHideToggle.appendChild($showHideToggleFocus)\n    // Create wrapper for the show / hide text. Append text after the show/hide icon\n    const $showHideText = document.createElement('span')\n    const $showHideIcon = document.createElement('span')\n    $showHideIcon.classList.add(this.upChevronIconClass)\n    $showHideToggleFocus.appendChild($showHideIcon)\n    $showHideText.classList.add(this.sectionShowHideTextClass)\n    $showHideToggleFocus.appendChild($showHideText)\n\n    // Append elements to the button:\n    // 1. Heading text\n    // 2. Punctuation\n    // 3. (Optional: Summary line followed by punctuation)\n    // 4. Show / hide toggle\n    $button.appendChild($headingText)\n    $button.appendChild(this.getButtonPunctuationEl())\n\n    // If summary content exists add to DOM in correct order\n    if ($summary) {\n      // Create a new `span` element and copy the summary line content from the\n      // original `div` to the new `span`. This is because the summary line text\n      // is now inside a button element, which can only contain phrasing\n      // content.\n      const $summarySpan = document.createElement('span')\n      // Create an inner summary container to limit the width of the summary\n      // focus state\n      const $summarySpanFocus = document.createElement('span')\n      $summarySpanFocus.classList.add(this.sectionSummaryFocusClass)\n      $summarySpan.appendChild($summarySpanFocus)\n\n      // Get original attributes, and pass them to the replacement\n      for (const attr of Array.from($summary.attributes)) {\n        $summarySpan.setAttribute(attr.name, attr.value)\n      }\n\n      // Copy original contents of summary to the new summary span\n      Array.from($summary.childNodes).forEach(($child) =>\n        $summarySpanFocus.appendChild($child)\n      )\n\n      // Replace the original summary `div` with the new summary `span`\n      $summary.remove()\n\n      $button.appendChild($summarySpan)\n      $button.appendChild(this.getButtonPunctuationEl())\n    }\n\n    $button.appendChild($showHideToggle)\n\n    $heading.removeChild($span)\n    $heading.appendChild($button)\n  }\n\n  /**\n   * When a section is opened by the user agent via the 'beforematch' event\n   *\n   * @private\n   * @param {Event} event - Generic event\n   */\n  onBeforeMatch(event) {\n    const $fragment = event.target\n\n    // Handle elements with `.closest()` support only\n    if (!($fragment instanceof Element)) {\n      return\n    }\n\n    // Handle when fragment is inside section\n    const $section = $fragment.closest(`.${this.sectionClass}`)\n    if ($section) {\n      this.setExpanded(true, $section)\n    }\n  }\n\n  /**\n   * When section toggled, set and store state\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  onSectionToggle($section) {\n    const nowExpanded = !this.isExpanded($section)\n    this.setExpanded(nowExpanded, $section)\n\n    // Store the state in sessionStorage when a change is triggered\n    this.storeState($section, nowExpanded)\n  }\n\n  /**\n   * When Open/Close All toggled, set and store state\n   *\n   * @private\n   */\n  onShowOrHideAllToggle() {\n    const nowExpanded = !this.areAllSectionsOpen()\n\n    this.$sections.forEach(($section) => {\n      this.setExpanded(nowExpanded, $section)\n      this.storeState($section, nowExpanded)\n    })\n\n    this.updateShowAllButton(nowExpanded)\n  }\n\n  /**\n   * Set section attributes when opened/closed\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   * @param {Element} $section - Section element\n   */\n  setExpanded(expanded, $section) {\n    const $showHideIcon = $section.querySelector(`.${this.upChevronIconClass}`)\n    const $showHideText = $section.querySelector(\n      `.${this.sectionShowHideTextClass}`\n    )\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n    const $content = $section.querySelector(`.${this.sectionContentClass}`)\n\n    if (!$content) {\n      throw new ElementError({\n        component: Accordion,\n        identifier: `Section content (\\`<div class=\"${this.sectionContentClass}\">\\`)`\n      })\n    }\n\n    if (!$showHideIcon || !$showHideText || !$button) {\n      // Return early for elements we create\n      return\n    }\n\n    const newButtonText = expanded\n      ? this.i18n.t('hideSection')\n      : this.i18n.t('showSection')\n\n    $showHideText.textContent = newButtonText\n    $button.setAttribute('aria-expanded', `${expanded}`)\n\n    // Update aria-label combining\n    const ariaLabelParts = []\n\n    const $headingText = $section.querySelector(\n      `.${this.sectionHeadingTextClass}`\n    )\n    if ($headingText) {\n      ariaLabelParts.push($headingText.textContent.trim())\n    }\n\n    const $summary = $section.querySelector(`.${this.sectionSummaryClass}`)\n    if ($summary) {\n      ariaLabelParts.push($summary.textContent.trim())\n    }\n\n    const ariaLabelMessage = expanded\n      ? this.i18n.t('hideSectionAriaLabel')\n      : this.i18n.t('showSectionAriaLabel')\n    ariaLabelParts.push(ariaLabelMessage)\n\n    /*\n     * Join with a comma to add pause for assistive technology.\n     * Example: [heading]Section A ,[pause] Show this section.\n     * https://accessibility.blog.gov.uk/2017/12/18/what-working-on-gov-uk-navigation-taught-us-about-accessibility/\n     */\n    $button.setAttribute('aria-label', ariaLabelParts.join(' , '))\n\n    // Swap icon, change class\n    if (expanded) {\n      $content.removeAttribute('hidden')\n      $section.classList.add(this.sectionExpandedClass)\n      $showHideIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      $content.setAttribute('hidden', 'until-found')\n      $section.classList.remove(this.sectionExpandedClass)\n      $showHideIcon.classList.add(this.downChevronIconClass)\n    }\n\n    // See if \"Show all sections\" button text should be updated\n    this.updateShowAllButton(this.areAllSectionsOpen())\n  }\n\n  /**\n   * Get state of section\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @returns {boolean} True if expanded\n   */\n  isExpanded($section) {\n    return $section.classList.contains(this.sectionExpandedClass)\n  }\n\n  /**\n   * Check if all sections are open\n   *\n   * @private\n   * @returns {boolean} True if all sections are open\n   */\n  areAllSectionsOpen() {\n    return Array.from(this.$sections).every(($section) =>\n      this.isExpanded($section)\n    )\n  }\n\n  /**\n   * Update \"Show all sections\" button\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   */\n  updateShowAllButton(expanded) {\n    if (!this.$showAllButton || !this.$showAllText || !this.$showAllIcon) {\n      return\n    }\n\n    this.$showAllButton.setAttribute('aria-expanded', expanded.toString())\n    this.$showAllText.textContent = expanded\n      ? this.i18n.t('hideAllSections')\n      : this.i18n.t('showAllSections')\n    this.$showAllIcon.classList.toggle(this.downChevronIconClass, !expanded)\n  }\n\n  /**\n   * Get the identifier for a section\n   *\n   * We need a unique way of identifying each content in the Accordion.\n   * Since an `#id` should be unique and an `id` is required for `aria-`\n   * attributes `id` can be safely used.\n   *\n   * @param {Element} $section - Section element\n   * @returns {string | undefined | null} Identifier for section\n   */\n  getIdentifier($section) {\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n    return $button?.getAttribute('aria-controls')\n  }\n\n  /**\n   * Set the state of the accordions in sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @param {boolean} isExpanded - Whether the section is expanded\n   */\n  storeState($section, isExpanded) {\n    if (!this.config.rememberExpanded) {\n      return\n    }\n\n    const id = this.getIdentifier($section)\n\n    if (id) {\n      try {\n        window.sessionStorage.setItem(id, isExpanded.toString())\n      } catch {}\n    }\n  }\n\n  /**\n   * Read the state of the accordions from sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  setInitialState($section) {\n    if (!this.config.rememberExpanded) {\n      return\n    }\n\n    const id = this.getIdentifier($section)\n\n    if (id) {\n      try {\n        const state = window.sessionStorage.getItem(id)\n\n        if (state !== null) {\n          this.setExpanded(state === 'true', $section)\n        }\n      } catch {}\n    }\n  }\n\n  /**\n   * Create an element to improve semantics of the section button with\n   * punctuation\n   *\n   * Adding punctuation to the button can also improve its general semantics by\n   * dividing its contents into thematic chunks. See\n   * https://github.com/alphagov/govuk-frontend/issues/2327#issuecomment-922957442\n   *\n   * @private\n   * @returns {Element} DOM element\n   */\n  getButtonPunctuationEl() {\n    const $punctuationEl = document.createElement('span')\n    $punctuationEl.classList.add(\n      'govuk-visually-hidden',\n      this.sectionHeadingDividerClass\n    )\n    $punctuationEl.textContent = ', '\n    return $punctuationEl\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-accordion'\n\n  /**\n   * Accordion default config\n   *\n   * @see {@link AccordionConfig}\n   * @constant\n   * @type {AccordionConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      hideAllSections: 'Hide all sections',\n      hideSection: 'Hide',\n      hideSectionAriaLabel: 'Hide this section',\n      showAllSections: 'Show all sections',\n      showSection: 'Show',\n      showSectionAriaLabel: 'Show this section'\n    },\n    rememberExpanded: true\n  })\n\n  /**\n   * Accordion config schema\n   *\n   * @constant\n   * @satisfies {Schema<AccordionConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' },\n      rememberExpanded: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Accordion config\n *\n * @see {@link Accordion.defaults}\n * @typedef {object} AccordionConfig\n * @property {AccordionTranslations} [i18n=Accordion.defaults.i18n] - Accordion translations\n * @property {boolean} [rememberExpanded] - Whether the expanded and collapsed\n *   state of each section is remembered and restored when navigating.\n */\n\n/**\n * Accordion translations\n *\n * @see {@link Accordion.defaults.i18n}\n * @typedef {object} AccordionTranslations\n *\n * Messages used by the component for the labels of its buttons. This includes\n * the visible text shown on screen, and text to help assistive technology users\n * for the buttons toggling each section.\n * @property {string} [hideAllSections] - The text content for the 'Hide all\n *   sections' button, used when at least one section is expanded.\n * @property {string} [hideSection] - The text content for the 'Hide'\n *   button, used when a section is expanded.\n * @property {string} [hideSectionAriaLabel] - The text content appended to the\n *   'Hide' button's accessible name when a section is expanded.\n * @property {string} [showAllSections] - The text content for the 'Show all\n *   sections' button, used when all sections are collapsed.\n * @property {string} [showSection] - The text content for the 'Show'\n *   button, used when a section is collapsed.\n * @property {string} [showSectionAriaLabel] - The text content appended to the\n *   'Show' button's accessible name when a section is expanded.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n", "import { ConfigurableComponent } from '../../common/configuration.mjs'\n\nconst DEBOUNCE_TIMEOUT_IN_SECONDS = 1\n\n/**\n * JavaScript enhancements for the Button component\n *\n * @preserve\n * @augments ConfigurableComponent<ButtonConfig>\n */\nexport class Button extends ConfigurableComponent {\n  /**\n   * @private\n   * @type {number | null}\n   */\n  debounceFormSubmitTimer = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for button\n   * @param {ButtonConfig} [config] - Button config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    this.$root.addEventListener('keydown', (event) => this.handleKeyDown(event))\n    this.$root.addEventListener('click', (event) => this.debounce(event))\n  }\n\n  /**\n   * Trigger a click event when the space key is pressed\n   *\n   * Some screen readers tell users they can use the space bar to activate\n   * things with the 'button' role, so we need to match the functionality of\n   * native HTML buttons.\n   *\n   * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  handleKeyDown(event) {\n    const $target = event.target\n\n    // Handle space bar only\n    if (event.key !== ' ') {\n      return\n    }\n\n    // Handle elements with [role=\"button\"] only\n    if (\n      $target instanceof HTMLElement &&\n      $target.getAttribute('role') === 'button'\n    ) {\n      event.preventDefault() // prevent the page from scrolling\n      $target.click()\n    }\n  }\n\n  /**\n   * Debounce double-clicks\n   *\n   * If the click quickly succeeds a previous click then nothing will happen.\n   * This stops people accidentally causing multiple form submissions by double\n   * clicking buttons.\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {undefined | false} Returns undefined, or false when debounced\n   */\n  debounce(event) {\n    // Check the button that was clicked has preventDoubleClick enabled\n    if (!this.config.preventDoubleClick) {\n      return\n    }\n\n    // If the timer is still running, prevent the click from submitting the form\n    if (this.debounceFormSubmitTimer) {\n      event.preventDefault()\n      return false\n    }\n\n    this.debounceFormSubmitTimer = window.setTimeout(() => {\n      this.debounceFormSubmitTimer = null\n    }, DEBOUNCE_TIMEOUT_IN_SECONDS * 1000)\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-button'\n\n  /**\n   * Button default config\n   *\n   * @see {@link ButtonConfig}\n   * @constant\n   * @type {ButtonConfig}\n   */\n  static defaults = Object.freeze({\n    preventDoubleClick: false\n  })\n\n  /**\n   * Button config schema\n   *\n   * @constant\n   * @satisfies {Schema<ButtonConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      preventDoubleClick: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Button config\n *\n * @typedef {object} ButtonConfig\n * @property {boolean} [preventDoubleClick=false] - Prevent accidental double\n *   clicks on submit buttons from submitting forms multiple times.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n", "/**\n * Returns the value of the given attribute closest to the given element (including itself)\n *\n * @internal\n * @param {Element} $element - The element to start walking the DOM tree up\n * @param {string} attributeName - The name of the attribute\n * @returns {string | null} Attribute value\n */\nexport function closestAttributeValue($element, attributeName) {\n  const $closestElementWithAttribute = $element.closest(`[${attributeName}]`)\n  return $closestElementWithAttribute\n    ? $closestElementWithAttribute.getAttribute(attributeName)\n    : null\n}\n", "import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport {\n  validateConfig,\n  ConfigurableComponent,\n  configOverride\n} from '../../common/configuration.mjs'\nimport { formatErrorMessage } from '../../common/index.mjs'\nimport { ConfigError, ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Character count component\n *\n * Tracks the number of characters or words in the `.govuk-js-character-count`\n * `<textarea>` inside the element. Displays a message with the remaining number\n * of characters/words available, or the number of characters/words in excess.\n *\n * You can configure the message to only appear after a certain percentage\n * of the available characters/words has been entered.\n *\n * @preserve\n * @augments ConfigurableComponent<CharacterCountConfig>\n */\nexport class CharacterCount extends ConfigurableComponent {\n  /** @private */\n  $textarea\n\n  /** @private */\n  $visibleCountMessage\n\n  /** @private */\n  $screenReaderCountMessage\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  lastInputTimestamp = null\n\n  /** @private */\n  lastInputValue = ''\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  valueChecker = null\n\n  /** @private */\n  i18n\n\n  /** @private */\n  maxLength;\n\n  /**\n   * Character count config override\n   *\n   * To ensure data-attributes take complete precedence, even if they change\n   * the type of count, we need to reset the `maxlength` and `maxwords` from\n   * the JavaScript config.\n   *\n   * @internal\n   * @param {CharacterCountConfig} datasetConfig - configuration specified by dataset\n   * @returns {CharacterCountConfig} - configuration to override by dataset\n   */\n  [configOverride](datasetConfig) {\n    let configOverrides = {}\n    if ('maxwords' in datasetConfig || 'maxlength' in datasetConfig) {\n      configOverrides = {\n        maxlength: undefined,\n        maxwords: undefined\n      }\n    }\n\n    return configOverrides\n  }\n\n  /**\n   * @param {Element | null} $root - HTML element to use for character count\n   * @param {CharacterCountConfig} [config] - Character count config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $textarea = this.$root.querySelector('.govuk-js-character-count')\n    if (\n      !(\n        $textarea instanceof HTMLTextAreaElement ||\n        $textarea instanceof HTMLInputElement\n      )\n    ) {\n      throw new ElementError({\n        component: CharacterCount,\n        element: $textarea,\n        expectedType: 'HTMLTextareaElement or HTMLInputElement',\n        identifier: 'Form field (`.govuk-js-character-count`)'\n      })\n    }\n\n    // Check for valid config\n    const errors = validateConfig(CharacterCount.schema, this.config)\n    if (errors[0]) {\n      throw new ConfigError(formatErrorMessage(CharacterCount, errors[0]))\n    }\n\n    this.i18n = new I18n(this.config.i18n, {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue(this.$root, 'lang')\n    })\n\n    // Determine the limit attribute (characters or words)\n    this.maxLength = this.config.maxwords ?? this.config.maxlength ?? Infinity\n\n    this.$textarea = $textarea\n\n    const textareaDescriptionId = `${this.$textarea.id}-info`\n    const $textareaDescription = document.getElementById(textareaDescriptionId)\n    if (!$textareaDescription) {\n      throw new ElementError({\n        component: CharacterCount,\n        element: $textareaDescription,\n        identifier: `Count message (\\`id=\"${textareaDescriptionId}\"\\`)`\n      })\n    }\n\n    // Pre-existing validation error rendered from server\n    this.$errorMessage = this.$root.querySelector('.govuk-error-message')\n\n    // Inject a description for the textarea if none is present already\n    // for when the component was rendered with no maxlength, maxwords\n    // nor custom textareaDescriptionText\n    // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n    if ($textareaDescription.textContent.match(/^\\s*$/)) {\n      $textareaDescription.textContent = this.i18n.t('textareaDescription', {\n        count: this.maxLength\n      })\n    }\n\n    // Move the textarea description to be immediately after the textarea\n    // Kept for backwards compatibility\n    this.$textarea.insertAdjacentElement('afterend', $textareaDescription)\n\n    // Create the *screen reader* specific live-updating counter\n    // This doesn't need any styling classes, as it is never visible\n    const $screenReaderCountMessage = document.createElement('div')\n    $screenReaderCountMessage.className =\n      'govuk-character-count__sr-status govuk-visually-hidden'\n    $screenReaderCountMessage.setAttribute('aria-live', 'polite')\n    this.$screenReaderCountMessage = $screenReaderCountMessage\n    $textareaDescription.insertAdjacentElement(\n      'afterend',\n      $screenReaderCountMessage\n    )\n\n    // Create our live-updating counter element, copying the classes from the\n    // textarea description for backwards compatibility as these may have been\n    // configured\n    const $visibleCountMessage = document.createElement('div')\n    $visibleCountMessage.className = $textareaDescription.className\n    $visibleCountMessage.classList.add('govuk-character-count__status')\n    $visibleCountMessage.setAttribute('aria-hidden', 'true')\n    this.$visibleCountMessage = $visibleCountMessage\n    $textareaDescription.insertAdjacentElement('afterend', $visibleCountMessage)\n\n    // Hide the textarea description\n    $textareaDescription.classList.add('govuk-visually-hidden')\n\n    // Remove hard limit if set\n    this.$textarea.removeAttribute('maxlength')\n\n    this.bindChangeEvents()\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.updateCountMessage())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so update now too.\n    this.updateCountMessage()\n  }\n\n  /**\n   * Bind change events\n   *\n   * Set up event listeners on the $textarea so that the count messages update\n   * when the user types.\n   *\n   * @private\n   */\n  bindChangeEvents() {\n    this.$textarea.addEventListener('keyup', () => this.handleKeyUp())\n\n    // Bind focus/blur events to start/stop polling\n    this.$textarea.addEventListener('focus', () => this.handleFocus())\n    this.$textarea.addEventListener('blur', () => this.handleBlur())\n  }\n\n  /**\n   * Handle key up event\n   *\n   * Update the visible character counter and keep track of when the last update\n   * happened for each keypress\n   *\n   * @private\n   */\n  handleKeyUp() {\n    this.updateVisibleCountMessage()\n    this.lastInputTimestamp = Date.now()\n  }\n\n  /**\n   * Handle focus event\n   *\n   * Speech recognition software such as Dragon NaturallySpeaking will modify\n   * the fields by directly changing its `value`. These changes don't trigger\n   * events in JavaScript, so we need to poll to handle when and if they occur.\n   *\n   * Once the keyup event hasn't been detected for at least 1000 ms (1s), check\n   * if the textarea value has changed and update the count message if it has.\n   *\n   * This is so that the update triggered by the manual comparison doesn't\n   * conflict with debounced KeyboardEvent updates.\n   *\n   * @private\n   */\n  handleFocus() {\n    this.valueChecker = window.setInterval(() => {\n      if (\n        !this.lastInputTimestamp ||\n        Date.now() - 500 >= this.lastInputTimestamp\n      ) {\n        this.updateIfValueChanged()\n      }\n    }, 1000)\n  }\n\n  /**\n   * Handle blur event\n   *\n   * Stop checking the textarea value once the textarea no longer has focus\n   *\n   * @private\n   */\n  handleBlur() {\n    // Cancel value checking on blur\n    if (this.valueChecker) {\n      window.clearInterval(this.valueChecker)\n    }\n  }\n\n  /**\n   * Update count message if textarea value has changed\n   *\n   * @private\n   */\n  updateIfValueChanged() {\n    if (this.$textarea.value !== this.lastInputValue) {\n      this.lastInputValue = this.$textarea.value\n      this.updateCountMessage()\n    }\n  }\n\n  /**\n   * Update count message\n   *\n   * Helper function to update both the visible and screen reader-specific\n   * counters simultaneously (e.g. on init)\n   *\n   * @private\n   */\n  updateCountMessage() {\n    this.updateVisibleCountMessage()\n    this.updateScreenReaderCountMessage()\n  }\n\n  /**\n   * Update visible count message\n   *\n   * @private\n   */\n  updateVisibleCountMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n    const isError = remainingNumber < 0\n\n    // If input is over the threshold, remove the disabled class which renders\n    // the counter invisible.\n    this.$visibleCountMessage.classList.toggle(\n      'govuk-character-count__message--disabled',\n      !this.isOverThreshold()\n    )\n\n    // Update styles\n    if (!this.$errorMessage) {\n      // Only toggle the textarea error class if there isn't an error message\n      // already, as it may be unrelated to the limit (eg: allowed characters)\n      // and would set the border colour back to black.\n      this.$textarea.classList.toggle('govuk-textarea--error', isError)\n    }\n    this.$visibleCountMessage.classList.toggle('govuk-error-message', isError)\n    this.$visibleCountMessage.classList.toggle('govuk-hint', !isError)\n\n    // Update message\n    this.$visibleCountMessage.textContent = this.getCountMessage()\n  }\n\n  /**\n   * Update screen reader count message\n   *\n   * @private\n   */\n  updateScreenReaderCountMessage() {\n    // If over the threshold, remove the aria-hidden attribute, allowing screen\n    // readers to announce the content of the element.\n    if (this.isOverThreshold()) {\n      this.$screenReaderCountMessage.removeAttribute('aria-hidden')\n    } else {\n      this.$screenReaderCountMessage.setAttribute('aria-hidden', 'true')\n    }\n\n    // Update message\n    this.$screenReaderCountMessage.textContent = this.getCountMessage()\n  }\n\n  /**\n   * Count the number of characters (or words, if `config.maxwords` is set)\n   * in the given text\n   *\n   * @private\n   * @param {string} text - The text to count the characters of\n   * @returns {number} the number of characters (or words) in the text\n   */\n  count(text) {\n    if (this.config.maxwords) {\n      const tokens = text.match(/\\S+/g) ?? [] // Matches consecutive non-whitespace chars\n      return tokens.length\n    }\n\n    return text.length\n  }\n\n  /**\n   * Get count message\n   *\n   * @private\n   * @returns {string} Status message\n   */\n  getCountMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n    const countType = this.config.maxwords ? 'words' : 'characters'\n    return this.formatCountMessage(remainingNumber, countType)\n  }\n\n  /**\n   * Formats the message shown to users according to what's counted\n   * and how many remain\n   *\n   * @private\n   * @param {number} remainingNumber - The number of words/characaters remaining\n   * @param {string} countType - \"words\" or \"characters\"\n   * @returns {string} Status message\n   */\n  formatCountMessage(remainingNumber, countType) {\n    if (remainingNumber === 0) {\n      return this.i18n.t(`${countType}AtLimit`)\n    }\n\n    const translationKeySuffix =\n      remainingNumber < 0 ? 'OverLimit' : 'UnderLimit'\n\n    return this.i18n.t(`${countType}${translationKeySuffix}`, {\n      count: Math.abs(remainingNumber)\n    })\n  }\n\n  /**\n   * Check if count is over threshold\n   *\n   * Checks whether the value is over the configured threshold for the input.\n   * If there is no configured threshold, it is set to 0 and this function will\n   * always return true.\n   *\n   * @private\n   * @returns {boolean} true if the current count is over the config.threshold\n   *   (or no threshold is set)\n   */\n  isOverThreshold() {\n    // No threshold means we're always above threshold so save some computation\n    if (!this.config.threshold) {\n      return true\n    }\n\n    // Determine the remaining number of characters/words\n    const currentLength = this.count(this.$textarea.value)\n    const maxLength = this.maxLength\n\n    const thresholdValue = (maxLength * this.config.threshold) / 100\n\n    return thresholdValue <= currentLength\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-character-count'\n\n  /**\n   * Character count default config\n   *\n   * @see {@link CharacterCountConfig}\n   * @constant\n   * @type {CharacterCountConfig}\n   */\n  static defaults = Object.freeze({\n    threshold: 0,\n    i18n: {\n      // Characters\n      charactersUnderLimit: {\n        one: 'You have %{count} character remaining',\n        other: 'You have %{count} characters remaining'\n      },\n      charactersAtLimit: 'You have 0 characters remaining',\n      charactersOverLimit: {\n        one: 'You have %{count} character too many',\n        other: 'You have %{count} characters too many'\n      },\n      // Words\n      wordsUnderLimit: {\n        one: 'You have %{count} word remaining',\n        other: 'You have %{count} words remaining'\n      },\n      wordsAtLimit: 'You have 0 words remaining',\n      wordsOverLimit: {\n        one: 'You have %{count} word too many',\n        other: 'You have %{count} words too many'\n      },\n      textareaDescription: {\n        other: ''\n      }\n    }\n  })\n\n  /**\n   * Character count config schema\n   *\n   * @constant\n   * @satisfies {Schema<CharacterCountConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' },\n      maxwords: { type: 'number' },\n      maxlength: { type: 'number' },\n      threshold: { type: 'number' }\n    },\n    anyOf: [\n      {\n        required: ['maxwords'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      },\n      {\n        required: ['maxlength'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      }\n    ]\n  })\n}\n\n/**\n * Character count config\n *\n * @see {@link CharacterCount.defaults}\n * @typedef {object} CharacterCountConfig\n * @property {number} [maxlength] - The maximum number of characters.\n *   If maxwords is provided, the maxlength option will be ignored.\n * @property {number} [maxwords] - The maximum number of words. If maxwords is\n *   provided, the maxlength option will be ignored.\n * @property {number} [threshold=0] - The percentage value of the limit at\n *   which point the count message is displayed. If this attribute is set, the\n *   count message will be hidden by default.\n * @property {CharacterCountTranslations} [i18n=CharacterCount.defaults.i18n] - Character count translations\n */\n\n/**\n * Character count translations\n *\n * @see {@link CharacterCount.defaults.i18n}\n * @typedef {object} CharacterCountTranslations\n *\n * Messages shown to users as they type. It provides feedback on how many words\n * or characters they have remaining or if they are over the limit. This also\n * includes a message used as an accessible description for the textarea.\n * @property {TranslationPluralForms} [charactersUnderLimit] - Message displayed\n *   when the number of characters is under the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [charactersAtLimit] - Message displayed when the number of\n *   characters reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [charactersOverLimit] - Message displayed\n *   when the number of characters is over the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [wordsUnderLimit] - Message displayed when\n *   the number of words is under the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [wordsAtLimit] - Message displayed when the number of\n *   words reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [wordsOverLimit] - Message displayed when\n *   the number of words is over the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [textareaDescription] - Message made\n *   available to assistive technologies, if none is already present in the\n *   HTML, to describe that the component accepts only a limited amount of\n *   content. It is visible on the page when JavaScript is unavailable. The\n *   component will replace the `%{count}` placeholder with the value of the\n *   `maxlength` or `maxwords` parameter.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n * @import { TranslationPluralForms } from '../../i18n.mjs'\n */\n", "import { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Checkboxes component\n *\n * @preserve\n */\nexport class Checkboxes extends Component {\n  /** @private */\n  $inputs\n\n  /**\n   * Checkboxes can be associated with a 'conditionally revealed' content block\n   * – for example, a checkbox for 'Phone' could reveal an additional form field\n   * for the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which\n   * is promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page\n   * (for example if the user has navigated back), and set up event handlers to\n   * keep the reveal in sync with the checkbox state.\n   *\n   * @param {Element | null} $root - HTML element to use for checkboxes\n   */\n  constructor($root) {\n    super($root)\n\n    const $inputs = this.$root.querySelectorAll('input[type=\"checkbox\"]')\n    if (!$inputs.length) {\n      throw new ElementError({\n        component: Checkboxes,\n        identifier: 'Form inputs (`<input type=\"checkbox\">`)'\n      })\n    }\n\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError({\n          component: Checkboxes,\n          identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n        })\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$root.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all checkboxes in this component.\n   *\n   * @private\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  syncConditionalRevealWithInputState($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target?.classList.contains('govuk-checkboxes__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle(\n        'govuk-checkboxes__conditional--hidden',\n        !inputIsChecked\n      )\n    }\n  }\n\n  /**\n   * Uncheck other checkboxes\n   *\n   * Find any other checkbox inputs with the same name value, and uncheck them.\n   * This is useful for when a “None of these\" checkbox is checked.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckAllInputsExcept($input) {\n    const allInputsWithSameName = document.querySelectorAll(\n      `input[type=\"checkbox\"][name=\"${$input.name}\"]`\n    )\n\n    allInputsWithSameName.forEach(($inputWithSameName) => {\n      const hasSameFormOwner = $input.form === $inputWithSameName.form\n      if (hasSameFormOwner && $inputWithSameName !== $input) {\n        $inputWithSameName.checked = false\n        this.syncConditionalRevealWithInputState($inputWithSameName)\n      }\n    })\n  }\n\n  /**\n   * Uncheck exclusive checkboxes\n   *\n   * Find any checkbox inputs with the same name value and the 'exclusive'\n   * behaviour, and uncheck them. This helps prevent someone checking both a\n   * regular checkbox and a \"None of these\" checkbox in the same fieldset.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckExclusiveInputs($input) {\n    const allInputsWithSameNameAndExclusiveBehaviour =\n      document.querySelectorAll(\n        `input[data-behaviour=\"exclusive\"][type=\"checkbox\"][name=\"${$input.name}\"]`\n      )\n\n    allInputsWithSameNameAndExclusiveBehaviour.forEach(($exclusiveInput) => {\n      const hasSameFormOwner = $input.form === $exclusiveInput.form\n      if (hasSameFormOwner) {\n        $exclusiveInput.checked = false\n        this.syncConditionalRevealWithInputState($exclusiveInput)\n      }\n    })\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the component root – if the click occurred on a checkbox,\n   * sync the state of any associated conditional reveal with the checkbox\n   * state.\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't checkbox inputs\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'checkbox'\n    ) {\n      return\n    }\n\n    // If the checkbox conditionally-reveals some content, sync the state\n    const hasAriaControls = $clickedInput.getAttribute('aria-controls')\n    if (hasAriaControls) {\n      this.syncConditionalRevealWithInputState($clickedInput)\n    }\n\n    // No further behaviour needed for unchecking\n    if (!$clickedInput.checked) {\n      return\n    }\n\n    // Handle 'exclusive' checkbox behaviour (ie \"None of these\")\n    const hasBehaviourExclusive =\n      $clickedInput.getAttribute('data-behaviour') === 'exclusive'\n    if (hasBehaviourExclusive) {\n      this.unCheckAllInputsExcept($clickedInput)\n    } else {\n      this.unCheckExclusiveInputs($clickedInput)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-checkboxes'\n}\n", "import { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { setFocus } from '../../common/index.mjs'\n\n/**\n * Error summary component\n *\n * Takes focus on initialisation for accessible announcement, unless disabled in\n * configuration.\n *\n * @preserve\n * @augments ConfigurableComponent<ErrorSummaryConfig>\n */\nexport class ErrorSummary extends ConfigurableComponent {\n  /**\n   * @param {Element | null} $root - HTML element to use for error summary\n   * @param {ErrorSummaryConfig} [config] - Error summary config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    /**\n     * Focus the error summary\n     */\n    if (!this.config.disableAutoFocus) {\n      setFocus(this.$root)\n    }\n\n    this.$root.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Click event handler\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $target = event.target\n    if ($target && this.focusTarget($target)) {\n      event.preventDefault()\n    }\n  }\n\n  /**\n   * Focus the target element\n   *\n   * By default, the browser will scroll the target into view. Because our\n   * labels or legends appear above the input, this means the user will be\n   * presented with an input without any context, as the label or legend will be\n   * off the top of the screen.\n   *\n   * Manually handling the click event, scrolling the question into view and\n   * then focussing the element solves this.\n   *\n   * This also results in the label and/or legend being announced correctly in\n   * NVDA (as tested in 2018.3.2) - without this only the field type is\n   * announced (e.g. \"Edit, has autocomplete\").\n   *\n   * @private\n   * @param {EventTarget} $target - Event target\n   * @returns {boolean} True if the target was able to be focussed\n   */\n  focusTarget($target) {\n    // If the element that was clicked was not a link, return early\n    if (!($target instanceof HTMLAnchorElement)) {\n      return false\n    }\n\n    const inputId = $target.hash.replace('#', '')\n    if (!inputId) {\n      return false\n    }\n\n    const $input = document.getElementById(inputId)\n    if (!$input) {\n      return false\n    }\n\n    const $legendOrLabel = this.getAssociatedLegendOrLabel($input)\n    if (!$legendOrLabel) {\n      return false\n    }\n\n    // Scroll the legend or label into view *before* calling focus on the input\n    // to avoid extra scrolling in browsers that don't support `preventScroll`\n    // (which at time of writing is most of them...)\n    $legendOrLabel.scrollIntoView()\n    $input.focus({ preventScroll: true })\n\n    return true\n  }\n\n  /**\n   * Get associated legend or label\n   *\n   * Returns the first element that exists from this list:\n   *\n   * - The `<legend>` associated with the closest `<fieldset>` ancestor, as long\n   *   as the top of it is no more than half a viewport height away from the\n   *   bottom of the input\n   * - The first `<label>` that is associated with the input using for=\"inputId\"\n   * - The closest parent `<label>`\n   *\n   * @private\n   * @param {Element} $input - The input\n   * @returns {Element | null} Associated legend or label, or null if no\n   *   associated legend or label can be found\n   */\n  getAssociatedLegendOrLabel($input) {\n    const $fieldset = $input.closest('fieldset')\n\n    if ($fieldset) {\n      const $legends = $fieldset.getElementsByTagName('legend')\n\n      if ($legends.length) {\n        const $candidateLegend = $legends[0]\n\n        // If the input type is radio or checkbox, always use the legend if\n        // there is one.\n        if (\n          $input instanceof HTMLInputElement &&\n          ($input.type === 'checkbox' || $input.type === 'radio')\n        ) {\n          return $candidateLegend\n        }\n\n        // For other input types, only scroll to the fieldset’s legend (instead\n        // of the label associated with the input) if the input would end up in\n        // the top half of the screen.\n        //\n        // This should avoid situations where the input either ends up off the\n        // screen, or obscured by a software keyboard.\n        const legendTop = $candidateLegend.getBoundingClientRect().top\n        const inputRect = $input.getBoundingClientRect()\n\n        // If the browser doesn't support Element.getBoundingClientRect().height\n        // or window.innerHeight (like IE8), bail and just link to the label.\n        if (inputRect.height && window.innerHeight) {\n          const inputBottom = inputRect.top + inputRect.height\n\n          if (inputBottom - legendTop < window.innerHeight / 2) {\n            return $candidateLegend\n          }\n        }\n      }\n    }\n\n    return (\n      document.querySelector(`label[for='${$input.getAttribute('id')}']`) ??\n      $input.closest('label')\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-error-summary'\n\n  /**\n   * Error summary default config\n   *\n   * @see {@link ErrorSummaryConfig}\n   * @constant\n   * @type {ErrorSummaryConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n\n  /**\n   * Error summary config schema\n   *\n   * @constant\n   * @satisfies {Schema<ErrorSummaryConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      disableAutoFocus: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Error summary config\n *\n * @typedef {object} ErrorSummaryConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the error\n *   summary will not be focussed when the page loads.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n", "import { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Exit this page component\n *\n * @preserve\n * @augments ConfigurableComponent<ExitThisPageConfig>\n */\nexport class ExitThisPage extends ConfigurableComponent {\n  /** @private */\n  i18n\n\n  /** @private */\n  $button\n\n  /**\n   * @private\n   * @type {HTMLAnchorElement | null}\n   */\n  $skiplinkButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $updateSpan = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $indicatorContainer = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $overlay = null\n\n  /** @private */\n  keypressCounter = 0\n\n  /** @private */\n  lastKeyWasModified = false\n\n  /** @private */\n  timeoutTime = 5000 // milliseconds\n\n  // Store the timeout events so that we can clear them to avoid user keypresses overlapping\n  // setTimeout returns an id that we can use to clear it with clearTimeout,\n  // hence the 'Id' suffix\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  keypressTimeoutId = null\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  timeoutMessageId = null\n\n  /**\n   * @param {Element | null} $root - HTML element that wraps the Exit This Page button\n   * @param {ExitThisPageConfig} [config] - Exit This Page config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $button = this.$root.querySelector('.govuk-exit-this-page__button')\n    if (!($button instanceof HTMLAnchorElement)) {\n      throw new ElementError({\n        component: ExitThisPage,\n        element: $button,\n        expectedType: 'HTMLAnchorElement',\n        identifier: 'Button (`.govuk-exit-this-page__button`)'\n      })\n    }\n\n    this.i18n = new I18n(this.config.i18n)\n    this.$button = $button\n\n    const $skiplinkButton = document.querySelector(\n      '.govuk-js-exit-this-page-skiplink'\n    )\n    if ($skiplinkButton instanceof HTMLAnchorElement) {\n      this.$skiplinkButton = $skiplinkButton\n    }\n\n    this.buildIndicator()\n    this.initUpdateSpan()\n    this.initButtonClickHandler()\n\n    // Check to see if this has already been done by a previous initialisation of ExitThisPage\n    if (!('govukFrontendExitThisPageKeypress' in document.body.dataset)) {\n      document.addEventListener('keyup', this.handleKeypress.bind(this), true)\n      document.body.dataset.govukFrontendExitThisPageKeypress = 'true'\n    }\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // blank overlay remains present, rendering the page unusable. Here, we check\n    // to see if it's present on page (re)load, and remove it if so.\n    window.addEventListener('pageshow', this.resetPage.bind(this))\n  }\n\n  /**\n   * Create the <span> we use for screen reader announcements.\n   *\n   * @private\n   */\n  initUpdateSpan() {\n    this.$updateSpan = document.createElement('span')\n    this.$updateSpan.setAttribute('role', 'status')\n    this.$updateSpan.className = 'govuk-visually-hidden'\n\n    this.$root.appendChild(this.$updateSpan)\n  }\n\n  /**\n   * Create button click handlers.\n   *\n   * @private\n   */\n  initButtonClickHandler() {\n    // Main EtP button\n    this.$button.addEventListener('click', this.handleClick.bind(this))\n\n    // EtP secondary link\n    if (this.$skiplinkButton) {\n      this.$skiplinkButton.addEventListener(\n        'click',\n        this.handleClick.bind(this)\n      )\n    }\n  }\n\n  /**\n   * Create the HTML for the 'three lights' indicator on the button.\n   *\n   * @private\n   */\n  buildIndicator() {\n    // Build container\n    // Putting `aria-hidden` on it as it won't contain any readable information\n    this.$indicatorContainer = document.createElement('div')\n    this.$indicatorContainer.className = 'govuk-exit-this-page__indicator'\n    this.$indicatorContainer.setAttribute('aria-hidden', 'true')\n\n    // Create three 'lights' and place them within the container\n    for (let i = 0; i < 3; i++) {\n      const $indicator = document.createElement('div')\n      $indicator.className = 'govuk-exit-this-page__indicator-light'\n      this.$indicatorContainer.appendChild($indicator)\n    }\n\n    // Append it all to the module\n    this.$button.appendChild(this.$indicatorContainer)\n  }\n\n  /**\n   * Update whether the lights are visible and which ones are lit up depending on\n   * the value of `keypressCounter`.\n   *\n   * @private\n   */\n  updateIndicator() {\n    if (!this.$indicatorContainer) {\n      return\n    }\n\n    // Show or hide the indicator container depending on keypressCounter value\n    this.$indicatorContainer.classList.toggle(\n      'govuk-exit-this-page__indicator--visible',\n      this.keypressCounter > 0\n    )\n\n    // Turn on only the indicators we want on\n    const $indicators = this.$indicatorContainer.querySelectorAll(\n      '.govuk-exit-this-page__indicator-light'\n    )\n    $indicators.forEach(($indicator, index) => {\n      $indicator.classList.toggle(\n        'govuk-exit-this-page__indicator-light--on',\n        index < this.keypressCounter\n      )\n    })\n  }\n\n  /**\n   * Initiates the redirection away from the current page.\n   * Includes the loading overlay functionality, which covers the current page with a\n   * white overlay so that the contents are not visible during the loading\n   * process. This is particularly important on slow network connections.\n   *\n   * @private\n   */\n  exitPage() {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    this.$updateSpan.textContent = ''\n\n    // Blank the page\n    // As well as creating an overlay with text, we also set the body to hidden\n    // to prevent screen reader and sequential navigation users potentially\n    // navigating through the page behind the overlay during loading\n    document.body.classList.add('govuk-exit-this-page-hide-content')\n    this.$overlay = document.createElement('div')\n    this.$overlay.className = 'govuk-exit-this-page-overlay'\n    this.$overlay.setAttribute('role', 'alert')\n\n    // we do these this way round, thus incurring a second paint, because changing\n    // the element text after adding it means that screen readers pick up the\n    // announcement more reliably.\n    document.body.appendChild(this.$overlay)\n    this.$overlay.textContent = this.i18n.t('activated')\n\n    window.location.href = this.$button.href\n  }\n\n  /**\n   * Pre-activation logic for when the button is clicked/activated via mouse or\n   * pointer.\n   *\n   * We do this to differentiate it from the keyboard activation event because we\n   * need to run `e.preventDefault` as the button or skiplink are both links and we\n   * want to apply some additional logic in `exitPage` before navigating.\n   *\n   * @private\n   * @param {MouseEvent} event - mouse click event\n   */\n  handleClick(event) {\n    event.preventDefault()\n    this.exitPage()\n  }\n\n  /**\n   * Logic for the 'quick escape' keyboard sequence functionality (pressing the\n   * Shift key three times without interruption, within a time limit).\n   *\n   * @private\n   * @param {KeyboardEvent} event - keyup event\n   */\n  handleKeypress(event) {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    // Detect if the 'Shift' key has been pressed. We want to only do things if it\n    // was pressed by itself and not in a combination with another key—so we keep\n    // track of whether the preceding keyup had shiftKey: true on it, and if it\n    // did, we ignore the next Shift keyup event.\n    //\n    // This works because using Shift as a modifier key (e.g. pressing Shift + A)\n    // will fire TWO keyup events, one for A (with e.shiftKey: true) and the other\n    // for Shift (with e.shiftKey: false).\n    if (event.key === 'Shift' && !this.lastKeyWasModified) {\n      this.keypressCounter += 1\n\n      // Update the indicator before the below if statement can reset it back to 0\n      this.updateIndicator()\n\n      // Clear the timeout for the keypress timeout message clearing itself\n      if (this.timeoutMessageId) {\n        window.clearTimeout(this.timeoutMessageId)\n        this.timeoutMessageId = null\n      }\n\n      if (this.keypressCounter >= 3) {\n        this.keypressCounter = 0\n\n        if (this.keypressTimeoutId) {\n          window.clearTimeout(this.keypressTimeoutId)\n          this.keypressTimeoutId = null\n        }\n\n        this.exitPage()\n      } else {\n        if (this.keypressCounter === 1) {\n          this.$updateSpan.textContent = this.i18n.t('pressTwoMoreTimes')\n        } else {\n          this.$updateSpan.textContent = this.i18n.t('pressOneMoreTime')\n        }\n      }\n\n      this.setKeypressTimer()\n    } else if (this.keypressTimeoutId) {\n      // If the user pressed any key other than 'Shift', after having pressed\n      // 'Shift' and activating the timer, stop and reset the timer.\n      this.resetKeypressTimer()\n    }\n\n    // Keep track of whether the Shift modifier key was held during this keypress\n    this.lastKeyWasModified = event.shiftKey\n  }\n\n  /**\n   * Starts the 'quick escape' keyboard sequence timer.\n   *\n   * This can be invoked several times. We want this to be possible so that the\n   * timer is restarted each time the shortcut key is pressed (e.g. the user has\n   * up to n seconds between each keypress, rather than n seconds to invoke the\n   * entire sequence.)\n   *\n   * @private\n   */\n  setKeypressTimer() {\n    // Clear any existing timeout. This is so only one timer is running even if\n    // there are multiple keypresses in quick succession.\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n    }\n\n    // Set a fresh timeout\n    this.keypressTimeoutId = window.setTimeout(\n      this.resetKeypressTimer.bind(this),\n      this.timeoutTime\n    )\n  }\n\n  /**\n   * Stops and resets the 'quick escape' keyboard sequence timer.\n   *\n   * @private\n   */\n  resetKeypressTimer() {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n      this.keypressTimeoutId = null\n    }\n\n    const $updateSpan = this.$updateSpan\n\n    this.keypressCounter = 0\n    $updateSpan.textContent = this.i18n.t('timedOut')\n\n    this.timeoutMessageId = window.setTimeout(() => {\n      $updateSpan.textContent = ''\n    }, this.timeoutTime)\n\n    this.updateIndicator()\n  }\n\n  /**\n   * Reset the page using the EtP button\n   *\n   * We use this in situations where a user may re-enter a page using the browser\n   * back button. In these cases, the browser can choose to restore the state of\n   * the page as it was previously, including restoring the 'ghost page' overlay,\n   * the announcement span having it's role set to \"alert\" and the keypress\n   * indicator still active, leaving the page in an unusable state.\n   *\n   * By running this check when the page is shown, we can programatically restore\n   * the page and the component to a \"default\" state\n   *\n   * @private\n   */\n  resetPage() {\n    // If an overlay is set, remove it and reset the value\n    document.body.classList.remove('govuk-exit-this-page-hide-content')\n\n    if (this.$overlay) {\n      this.$overlay.remove()\n      this.$overlay = null\n    }\n\n    // Ensure the announcement span's role is status, not alert and clear any text\n    if (this.$updateSpan) {\n      this.$updateSpan.setAttribute('role', 'status')\n      this.$updateSpan.textContent = ''\n    }\n\n    // Sync the keypress indicator lights\n    this.updateIndicator()\n\n    // If the timeouts are active, clear them\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n    }\n\n    if (this.timeoutMessageId) {\n      window.clearTimeout(this.timeoutMessageId)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-exit-this-page'\n\n  /**\n   * Exit this page default config\n   *\n   * @see {@link ExitThisPageConfig}\n   * @constant\n   * @type {ExitThisPageConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      activated: 'Loading.',\n      timedOut: 'Exit this page expired.',\n      pressTwoMoreTimes: 'Shift, press 2 more times to exit.',\n      pressOneMoreTime: 'Shift, press 1 more time to exit.'\n    }\n  })\n\n  /**\n   * Exit this page config schema\n   *\n   * @constant\n   * @satisfies {Schema<ExitThisPageConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' }\n    }\n  })\n}\n\n/**\n * Exit this Page config\n *\n * @see {@link ExitThisPage.defaults}\n * @typedef {object} ExitThisPageConfig\n * @property {ExitThisPageTranslations} [i18n=ExitThisPage.defaults.i18n] - Exit this page translations\n */\n\n/**\n * Exit this Page translations\n *\n * @see {@link ExitThisPage.defaults.i18n}\n * @typedef {object} ExitThisPageTranslations\n *\n * Messages used by the component programatically inserted text, including\n * overlay text and screen reader announcements.\n * @property {string} [activated] - Screen reader announcement for when EtP\n *   keypress functionality has been successfully activated.\n * @property {string} [timedOut] - Screen reader announcement for when the EtP\n *   keypress functionality has timed out.\n * @property {string} [pressTwoMoreTimes] - Screen reader announcement informing\n *   the user they must press the activation key two more times.\n * @property {string} [pressOneMoreTime] - Screen reader announcement informing\n *   the user they must press the activation key one more time.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n", "import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { formatErrorMessage } from '../../common/index.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * File upload component\n *\n * @preserve\n * @augments ConfigurableComponent<FileUploadConfig>\n */\nexport class FileUpload extends ConfigurableComponent {\n  /**\n   * @private\n   * @type {HTMLFileInputElement}\n   */\n  $input\n\n  /**\n   * @private\n   */\n  $button\n\n  /**\n   * @private\n   */\n  $status\n\n  /** @private */\n  i18n\n\n  /** @private */\n  id\n\n  /** @private */\n  $announcements\n\n  /**\n   * @private\n   * @type {boolean | undefined}\n   */\n  enteredAnotherElement\n\n  /**\n   * @param {Element | null} $root - File input element\n   * @param {FileUploadConfig} [config] - File Upload config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $input = this.$root.querySelector('input')\n\n    if ($input === null) {\n      throw new ElementError({\n        component: FileUpload,\n        identifier: 'File inputs (`<input type=\"file\">`)'\n      })\n    }\n\n    if ($input.type !== 'file') {\n      throw new ElementError(\n        formatErrorMessage(\n          FileUpload,\n          'File input (`<input type=\"file\">`) attribute (`type`) is not `file`'\n        )\n      )\n    }\n\n    this.$input = /** @type {HTMLFileInputElement} */ ($input)\n\n    if (!this.$input.id) {\n      throw new ElementError({\n        component: FileUpload,\n        identifier: 'File input (`<input type=\"file\">`) attribute (`id`)'\n      })\n    }\n\n    this.id = this.$input.id\n\n    this.i18n = new I18n(this.config.i18n, {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue(this.$root, 'lang')\n    })\n\n    const $label = this.findLabel()\n    // Add an ID to the label if it doesn't have one already\n    // so it can be referenced by `aria-labelledby`\n    if (!$label.id) {\n      $label.id = `${this.id}-label`\n    }\n\n    // we need to copy the 'id' of the root element\n    // to the new button replacement element\n    // so that focus will work in the error summary\n    this.$input.id = `${this.id}-input`\n\n    // Hide the native input\n    this.$input.setAttribute('hidden', 'true')\n\n    // Create the file selection button\n    const $button = document.createElement('button')\n    $button.classList.add('govuk-file-upload-button')\n    $button.type = 'button'\n    $button.id = this.id\n    $button.classList.add('govuk-file-upload-button--empty')\n\n    // Copy `aria-describedby` if present so hints and errors\n    // are associated to the `<button>`\n    const ariaDescribedBy = this.$input.getAttribute('aria-describedby')\n    if (ariaDescribedBy) {\n      $button.setAttribute('aria-describedby', ariaDescribedBy)\n    }\n\n    // Create status element that shows what/how many files are selected\n    const $status = document.createElement('span')\n    $status.className = 'govuk-body govuk-file-upload-button__status'\n    $status.setAttribute('aria-live', 'polite')\n    $status.innerText = this.i18n.t('noFileChosen')\n\n    $button.appendChild($status)\n\n    const commaSpan = document.createElement('span')\n    commaSpan.className = 'govuk-visually-hidden'\n    commaSpan.innerText = ', '\n    commaSpan.id = `${this.id}-comma`\n\n    $button.appendChild(commaSpan)\n\n    const containerSpan = document.createElement('span')\n    containerSpan.className =\n      'govuk-file-upload-button__pseudo-button-container'\n\n    const buttonSpan = document.createElement('span')\n    buttonSpan.className =\n      'govuk-button govuk-button--secondary govuk-file-upload-button__pseudo-button'\n    buttonSpan.innerText = this.i18n.t('chooseFilesButton')\n\n    containerSpan.appendChild(buttonSpan)\n\n    // Add a space so the button and instruction read correctly\n    // when CSS is disabled\n    containerSpan.insertAdjacentText('beforeend', ' ')\n\n    const instructionSpan = document.createElement('span')\n    instructionSpan.className =\n      'govuk-body govuk-file-upload-button__instruction'\n    instructionSpan.innerText = this.i18n.t('dropInstruction')\n\n    containerSpan.appendChild(instructionSpan)\n\n    $button.appendChild(containerSpan)\n    $button.setAttribute(\n      'aria-labelledby',\n      `${$label.id} ${commaSpan.id} ${$button.id}`\n    )\n    $button.addEventListener('click', this.onClick.bind(this))\n    $button.addEventListener('dragover', (event) => {\n      // prevent default to allow drop\n      event.preventDefault()\n    })\n\n    // Assemble these all together\n    this.$root.insertAdjacentElement('afterbegin', $button)\n\n    this.$input.setAttribute('tabindex', '-1')\n    this.$input.setAttribute('aria-hidden', 'true')\n\n    // Make all these new variables available to the module\n    this.$button = $button\n    this.$status = $status\n\n    // Bind change event to the underlying input\n    this.$input.addEventListener('change', this.onChange.bind(this))\n\n    // Synchronise the `disabled` state between the button and underlying input\n    this.updateDisabledState()\n    this.observeDisabledState()\n\n    // Handle drop zone visibility\n    // A live region to announce when users enter or leave the drop zone\n    this.$announcements = document.createElement('span')\n    this.$announcements.classList.add('govuk-file-upload-announcements')\n    this.$announcements.classList.add('govuk-visually-hidden')\n    this.$announcements.setAttribute('aria-live', 'assertive')\n    this.$root.insertAdjacentElement('afterend', this.$announcements)\n\n    // if there is no CSS and input is hidden\n    // button will need to handle drop event\n    this.$button.addEventListener('drop', this.onDrop.bind(this))\n\n    // While user is dragging, it gets a little more complex because of Safari.\n    // Safari doesn't fill `relatedTarget` on `dragleave` (nor `dragenter`).\n    // This means we can't use `relatedTarget` to:\n    // - check if the user is still within the wrapper\n    //   (`relatedTarget` being a descendant of the wrapper)\n    // - check if the user is still over the viewport\n    //   (`relatedTarget` being null if outside)\n\n    // Thanks to `dragenter` bubbling, we can listen on the `document` with a\n    // single function and update the visibility based on whether we entered a\n    // node inside or outside the wrapper.\n    document.addEventListener(\n      'dragenter',\n      this.updateDropzoneVisibility.bind(this)\n    )\n\n    // To detect if we're outside the document, we can track if there was a\n    // `dragenter` event preceding a `dragleave`. If there wasn't, this means\n    // we're outside the document.\n    //\n    // The order of events is guaranteed by the HTML specs:\n    // https://html.spec.whatwg.org/multipage/dnd.html#drag-and-drop-processing-model\n    document.addEventListener('dragenter', () => {\n      this.enteredAnotherElement = true\n    })\n\n    document.addEventListener('dragleave', () => {\n      if (!this.enteredAnotherElement && !this.$button.disabled) {\n        this.hideDraggingState()\n        this.$announcements.innerText = this.i18n.t('leftDropZone')\n      }\n\n      this.enteredAnotherElement = false\n    })\n  }\n\n  /**\n   * Updates the visibility of the dropzone as users enters the various elements on the page\n   *\n   * @private\n   * @param {DragEvent} event - The `dragenter` event\n   */\n  updateDropzoneVisibility(event) {\n    if (this.$button.disabled) return\n\n    // DOM interfaces only type `event.target` as `EventTarget`\n    // so we first need to make sure it's a `Node`\n    if (event.target instanceof Node) {\n      if (this.$root.contains(event.target)) {\n        if (event.dataTransfer && this.canDrop(event.dataTransfer)) {\n          // Only update the class and make the announcement if not already visible\n          // to avoid repeated announcements on NVDA (2024.4) + Firefox (133)\n          if (\n            !this.$button.classList.contains(\n              'govuk-file-upload-button--dragging'\n            )\n          ) {\n            this.showDraggingState()\n            this.$announcements.innerText = this.i18n.t('enteredDropZone')\n          }\n        }\n      } else {\n        // Only hide the dropzone if it is visible to prevent announcing user\n        // left the drop zone when they enter the page but haven't reached yet\n        // the file upload component\n        if (\n          this.$button.classList.contains('govuk-file-upload-button--dragging')\n        ) {\n          this.hideDraggingState()\n          this.$announcements.innerText = this.i18n.t('leftDropZone')\n        }\n      }\n    }\n  }\n\n  /**\n   * Show the drop zone visually\n   *\n   * @private\n   */\n  showDraggingState() {\n    this.$button.classList.add('govuk-file-upload-button--dragging')\n  }\n\n  /**\n   * Hides the drop zone visually\n   *\n   * @private\n   */\n  hideDraggingState() {\n    this.$button.classList.remove('govuk-file-upload-button--dragging')\n  }\n\n  /**\n   * Handles user dropping on the component\n   *\n   * @private\n   * @param {DragEvent} event - The `dragenter` event\n   */\n  onDrop(event) {\n    event.preventDefault()\n\n    if (event.dataTransfer && this.canFillInput(event.dataTransfer)) {\n      this.$input.files = event.dataTransfer.files\n\n      // Dispatch a `change` event so external code that would rely on the `<input>`\n      // dispatching an event when files are dropped still work.\n      // Use a `CustomEvent` so our events are distinguishable from browser's native events\n      this.$input.dispatchEvent(new CustomEvent('change'))\n\n      this.hideDraggingState()\n    }\n  }\n\n  /**\n   * Confirms if enhanced `<input>` can be filled with files from the given `DataTransfer`\n   *\n   * @param {DataTransfer} dataTransfer - The `DataTransfer` being dropped\n   * @returns {boolean} - true if the `DataTransfer` contains files, in number matching the `multiple` attribute of the original `<input>`\n   * @private\n   */\n  canFillInput(dataTransfer) {\n    return this.matchesInputCapacity(dataTransfer.files.length)\n  }\n\n  /**\n   * Confirms if the content of a `DataTransfer` dragged over component can be dropped\n   *\n   * Unfortunately, there's a certain level of uncertainty in Safari which does not\n   * even provide a list of `items` while dragging (and seems to even miss the `types` sometimes)\n   *\n   * @param {DataTransfer} dataTransfer - The `DataTransfer` being dragged\n   * @returns {boolean} - true if the `DataTransfer` looks OK for filling the input, false otherwise\n   * @private\n   */\n  canDrop(dataTransfer) {\n    // If the browser is kind enough to give a list of items, we'll use that as source of truth\n    if (dataTransfer.items.length) {\n      return this.matchesInputCapacity(countFileItems(dataTransfer.items))\n    }\n\n    // If we have some type information, we'll use that\n    if (dataTransfer.types.length) {\n      return dataTransfer.types.includes('Files')\n    }\n\n    // If we have nothing to go by, we'll assume things are OK\n    // until we have a more accurate picture inside the `drop` event\n    return true\n  }\n\n  /**\n   * Confirms the given number of files matches that allowed by the enhanced `<input>`\n   *\n   * @param {number} numberOfFiles - The number of files\n   * @returns {boolean} - `true` if the enhanced `<input>` can accept that number of files\n   * @private\n   */\n  matchesInputCapacity(numberOfFiles) {\n    if (this.$input.multiple) {\n      return numberOfFiles > 0\n    }\n\n    return numberOfFiles === 1\n  }\n\n  /**\n   * Check if the value of the underlying input has changed\n   *\n   * @private\n   */\n  onChange() {\n    const fileCount = this.$input.files.length\n\n    if (fileCount === 0) {\n      // If there are no files, show the default selection text\n      this.$status.innerText = this.i18n.t('noFileChosen')\n      this.$button.classList.add('govuk-file-upload-button--empty')\n    } else {\n      if (\n        // If there is 1 file, just show the file name\n        fileCount === 1\n      ) {\n        this.$status.innerText = this.$input.files[0].name\n      } else {\n        // Otherwise, tell the user how many files are selected\n        this.$status.innerText = this.i18n.t('multipleFilesChosen', {\n          count: fileCount\n        })\n      }\n\n      this.$button.classList.remove('govuk-file-upload-button--empty')\n    }\n  }\n\n  /**\n   * Looks up the `<label>` element associated to the field\n   *\n   * @private\n   * @returns {HTMLElement} The `<label>` element associated to the field\n   * @throws {ElementError} If the `<label>` cannot be found\n   */\n  findLabel() {\n    // Use `label` in the selector so TypeScript knows the type fo `HTMLElement`\n    const $label = document.querySelector(`label[for=\"${this.$input.id}\"]`)\n\n    if (!$label) {\n      throw new ElementError({\n        component: FileUpload,\n        identifier: `Field label (\\`<label for=${this.$input.id}>\\`)`\n      })\n    }\n\n    return $label\n  }\n\n  /**\n   * When the button is clicked, emulate clicking the actual, hidden file input\n   *\n   * @private\n   */\n  onClick() {\n    this.$input.click()\n  }\n\n  /**\n   * Create a mutation observer to check if the input's attributes altered.\n   *\n   * @private\n   */\n  observeDisabledState() {\n    const observer = new MutationObserver((mutationList) => {\n      for (const mutation of mutationList) {\n        if (\n          mutation.type === 'attributes' &&\n          mutation.attributeName === 'disabled'\n        ) {\n          this.updateDisabledState()\n        }\n      }\n    })\n\n    observer.observe(this.$input, {\n      attributes: true\n    })\n  }\n\n  /**\n   * Synchronise the `disabled` state between the input and replacement button.\n   *\n   * @private\n   */\n  updateDisabledState() {\n    this.$button.disabled = this.$input.disabled\n\n    this.$root.classList.toggle(\n      'govuk-drop-zone--disabled',\n      this.$button.disabled\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-file-upload'\n\n  /**\n   * File upload default config\n   *\n   * @see {@link FileUploadConfig}\n   * @constant\n   * @type {FileUploadConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      chooseFilesButton: 'Choose file',\n      dropInstruction: 'or drop file',\n      noFileChosen: 'No file chosen',\n      multipleFilesChosen: {\n        // the 'one' string isn't used as the component displays the filename\n        // instead, however it's here for coverage's sake\n        one: '%{count} file chosen',\n        other: '%{count} files chosen'\n      },\n      enteredDropZone: 'Entered drop zone',\n      leftDropZone: 'Left drop zone'\n    }\n  })\n\n  /**\n   * File upload config schema\n   *\n   * @constant\n   * @satisfies {Schema<FileUploadConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' }\n    }\n  })\n}\n\n/**\n * Counts the number of `DataTransferItem` whose kind is `file`\n *\n * @param {DataTransferItemList} list - The list\n * @returns {number} - The number of items whose kind is `file` in the list\n */\nfunction countFileItems(list) {\n  let result = 0\n\n  // `DataTransferItemList` is not iterable\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].kind === 'file') {\n      result++\n    }\n  }\n  return result\n}\n\n/**\n * @typedef {HTMLInputElement & {files: FileList}} HTMLFileInputElement\n */\n\n/**\n * File upload config\n *\n * @see {@link FileUpload.defaults}\n * @typedef {object} FileUploadConfig\n * @property {FileUploadTranslations} [i18n=FileUpload.defaults.i18n] - File upload translations\n */\n\n/**\n * File upload translations\n *\n * @see {@link FileUpload.defaults.i18n}\n * @typedef {object} FileUploadTranslations\n *\n * Messages used by the component\n * @property {string} [chooseFile] - The text of the button that opens the file picker\n * @property {string} [dropInstruction] - The text informing users they can drop files\n * @property {TranslationPluralForms} [multipleFilesChosen] - The text displayed when multiple files\n *   have been chosen by the user\n * @property {string} [noFileChosen] - The text to displayed when no file has been chosen by the user\n * @property {string} [enteredDropZone] - The text announced by assistive technology\n *   when user drags files and enters the drop zone\n * @property {string} [leftDropZone] - The text announced by assistive technology\n *   when user drags files and leaves the drop zone without dropping\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n * @import { TranslationPluralForms } from '../../i18n.mjs'\n */\n", "import { getBreakpoint } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Header component\n *\n * @preserve\n */\nexport class Header extends Component {\n  /** @private */\n  $menuButton\n\n  /** @private */\n  $menu\n\n  /**\n   * Save the opened/closed state for the nav in memory so that we can\n   * accurately maintain state when the screen is changed from small to big and\n   * back to small\n   *\n   * @private\n   */\n  menuIsOpen = false\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to detect\n   * when a screen size change happens. We rely on it being null if the feature\n   * isn't available to initially apply hidden attributes\n   *\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * Apply a matchMedia for desktop which will trigger a state sync if the\n   * browser viewport moves between states.\n   *\n   * @param {Element | null} $root - HTML element to use for header\n   */\n  constructor($root) {\n    super($root)\n\n    const $menuButton = this.$root.querySelector('.govuk-js-header-toggle')\n\n    // Headers don't necessarily have a navigation. When they don't, the menu\n    // toggle won't be rendered by our macro (or may be omitted when writing\n    // plain HTML)\n    if (!$menuButton) {\n      return this\n    }\n\n    // Pad the header logo so it doesn't overlap the menu button\n    this.$root.classList.add('govuk-header--with-js-navigation')\n\n    const menuId = $menuButton.getAttribute('aria-controls')\n    if (!menuId) {\n      throw new ElementError({\n        component: Header,\n        identifier:\n          'Navigation button (`<button class=\"govuk-js-header-toggle\">`) attribute (`aria-controls`)'\n      })\n    }\n\n    const $menu = document.getElementById(menuId)\n    if (!$menu) {\n      throw new ElementError({\n        component: Header,\n        element: $menu,\n        identifier: `Navigation (\\`<ul id=\"${menuId}\">\\`)`\n      })\n    }\n\n    this.$menu = $menu\n    this.$menuButton = $menuButton\n\n    this.setupResponsiveChecks()\n\n    this.$menuButton.addEventListener('click', () =>\n      this.handleMenuButtonClick()\n    )\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('desktop')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        component: Header,\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for GOV.UK Frontend desktop breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Sync menu state\n   *\n   * Uses the global variable menuIsOpen to correctly set the accessible and\n   * visual states of the menu and the menu button.\n   * Additionally will force the menu to be visible and the menu button to be\n   * hidden if the matchMedia is triggered to desktop.\n   *\n   * @private\n   */\n  checkMode() {\n    if (!this.mql || !this.$menu || !this.$menuButton) {\n      return\n    }\n\n    if (this.mql.matches) {\n      this.$menu.removeAttribute('hidden')\n      this.$menuButton.setAttribute('hidden', '')\n    } else {\n      this.$menuButton.removeAttribute('hidden')\n      this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString())\n\n      if (this.menuIsOpen) {\n        this.$menu.removeAttribute('hidden')\n      } else {\n        this.$menu.setAttribute('hidden', '')\n      }\n    }\n  }\n\n  /**\n   * Handle menu button click\n   *\n   * When the menu button is clicked, change the visibility of the menu and then\n   * sync the accessibility state and menu button state\n   *\n   * @private\n   */\n  handleMenuButtonClick() {\n    this.menuIsOpen = !this.menuIsOpen\n    this.checkMode()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-header'\n}\n", "import { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { setFocus } from '../../common/index.mjs'\n\n/**\n * Notification Banner component\n *\n * @preserve\n * @augments ConfigurableComponent<NotificationBannerConfig>\n */\nexport class NotificationBanner extends ConfigurableComponent {\n  /**\n   * @param {Element | null} $root - HTML element to use for notification banner\n   * @param {NotificationBannerConfig} [config] - Notification banner config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    /**\n     * Focus the notification banner\n     *\n     * If `role=\"alert\"` is set, focus the element to help some assistive\n     * technologies prioritise announcing it.\n     *\n     * You can turn off the auto-focus functionality by setting\n     * `data-disable-auto-focus=\"true\"` in the component HTML. You might wish to\n     * do this based on user research findings, or to avoid a clash with another\n     * element which should be focused when the page loads.\n     */\n    if (\n      this.$root.getAttribute('role') === 'alert' &&\n      !this.config.disableAutoFocus\n    ) {\n      setFocus(this.$root)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-notification-banner'\n\n  /**\n   * Notification banner default config\n   *\n   * @see {@link NotificationBannerConfig}\n   * @constant\n   * @type {NotificationBannerConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n\n  /**\n   * Notification banner config schema\n   *\n   * @constant\n   * @satisfies {Schema<NotificationBannerConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      disableAutoFocus: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Notification banner config\n *\n * @typedef {object} NotificationBannerConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the\n *   notification banner will not be focussed when the page loads. This only\n *   applies if the component has a `role` of `alert` – in other cases the\n *   component will not be focused on page load, regardless of this option.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n", "import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport { ConfigurableComponent } from '../../common/configuration.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Password input component\n *\n * @preserve\n * @augments ConfigurableComponent<PasswordInputConfig>\n */\nexport class PasswordInput extends ConfigurableComponent {\n  /** @private */\n  i18n\n\n  /**\n   * @private\n   * @type {HTMLInputElement}\n   */\n  $input\n\n  /**\n   * @private\n   * @type {HTMLButtonElement}\n   */\n  $showHideButton\n\n  /** @private */\n  $screenReaderStatusMessage\n\n  /**\n   * @param {Element | null} $root - HTML element to use for password input\n   * @param {PasswordInputConfig} [config] - Password input config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $input = this.$root.querySelector('.govuk-js-password-input-input')\n    if (!($input instanceof HTMLInputElement)) {\n      throw new ElementError({\n        component: PasswordInput,\n        element: $input,\n        expectedType: 'HTMLInputElement',\n        identifier: 'Form field (`.govuk-js-password-input-input`)'\n      })\n    }\n\n    if ($input.type !== 'password') {\n      throw new ElementError(\n        'Password input: Form field (`.govuk-js-password-input-input`) must be of type `password`.'\n      )\n    }\n\n    const $showHideButton = this.$root.querySelector(\n      '.govuk-js-password-input-toggle'\n    )\n    if (!($showHideButton instanceof HTMLButtonElement)) {\n      throw new ElementError({\n        component: PasswordInput,\n        element: $showHideButton,\n        expectedType: 'HTMLButtonElement',\n        identifier: 'Button (`.govuk-js-password-input-toggle`)'\n      })\n    }\n\n    if ($showHideButton.type !== 'button') {\n      throw new ElementError(\n        'Password input: Button (`.govuk-js-password-input-toggle`) must be of type `button`.'\n      )\n    }\n\n    this.$input = $input\n    this.$showHideButton = $showHideButton\n\n    this.i18n = new I18n(this.config.i18n, {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue(this.$root, 'lang')\n    })\n\n    // Show the toggle button element\n    this.$showHideButton.removeAttribute('hidden')\n\n    // Create and append the status text for screen readers.\n    // This is injected between the input and button so that users get a sensible reading order if\n    // moving through the page content linearly:\n    // [password input] -> [your password is visible/hidden] -> [show/hide password]\n    const $screenReaderStatusMessage = document.createElement('div')\n    $screenReaderStatusMessage.className =\n      'govuk-password-input__sr-status govuk-visually-hidden'\n    $screenReaderStatusMessage.setAttribute('aria-live', 'polite')\n    this.$screenReaderStatusMessage = $screenReaderStatusMessage\n    this.$input.insertAdjacentElement('afterend', $screenReaderStatusMessage)\n\n    // Bind toggle button\n    this.$showHideButton.addEventListener('click', this.toggle.bind(this))\n\n    // Bind event to revert the password visibility to hidden\n    if (this.$input.form) {\n      this.$input.form.addEventListener('submit', () => this.hide())\n    }\n\n    // If the page is restored from bfcache and the password is visible, hide it again\n    window.addEventListener('pageshow', (event) => {\n      if (event.persisted && this.$input.type !== 'password') {\n        this.hide()\n      }\n    })\n\n    // Default the component to having the password hidden.\n    this.hide()\n  }\n\n  /**\n   * Toggle the visibility of the password input\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  toggle(event) {\n    event.preventDefault()\n\n    // If on this click, the field is type=\"password\", show the value\n    if (this.$input.type === 'password') {\n      this.show()\n      return\n    }\n\n    // Otherwise, hide it\n    // Being defensive - hiding should always be the default\n    this.hide()\n  }\n\n  /**\n   * Show the password input value in plain text.\n   *\n   * @private\n   */\n  show() {\n    this.setType('text')\n  }\n\n  /**\n   * Hide the password input value.\n   *\n   * @private\n   */\n  hide() {\n    this.setType('password')\n  }\n\n  /**\n   * Set the password input type\n   *\n   * @param {'text' | 'password'} type - Input type\n   * @private\n   */\n  setType(type) {\n    if (type === this.$input.type) {\n      return\n    }\n\n    // Update input type\n    this.$input.setAttribute('type', type)\n\n    const isHidden = type === 'password'\n    const prefixButton = isHidden ? 'show' : 'hide'\n    const prefixStatus = isHidden ? 'passwordHidden' : 'passwordShown'\n\n    // Update button text\n    this.$showHideButton.innerText = this.i18n.t(`${prefixButton}Password`)\n\n    // Update button aria-label\n    this.$showHideButton.setAttribute(\n      'aria-label',\n      this.i18n.t(`${prefixButton}PasswordAriaLabel`)\n    )\n\n    // Update status change text\n    this.$screenReaderStatusMessage.innerText = this.i18n.t(\n      `${prefixStatus}Announcement`\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-password-input'\n\n  /**\n   * Password input default config\n   *\n   * @see {@link PasswordInputConfig}\n   * @constant\n   * @default\n   * @type {PasswordInputConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      showPassword: 'Show',\n      hidePassword: 'Hide',\n      showPasswordAriaLabel: 'Show password',\n      hidePasswordAriaLabel: 'Hide password',\n      passwordShownAnnouncement: 'Your password is visible',\n      passwordHiddenAnnouncement: 'Your password is hidden'\n    }\n  })\n\n  /**\n   * Password input config schema\n   *\n   * @constant\n   * @satisfies {Schema<PasswordInputConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' }\n    }\n  })\n}\n\n/**\n * Password input config\n *\n * @typedef {object} PasswordInputConfig\n * @property {PasswordInputTranslations} [i18n=PasswordInput.defaults.i18n] - Password input translations\n */\n\n/**\n * Password input translations\n *\n * @see {@link PasswordInput.defaults.i18n}\n * @typedef {object} PasswordInputTranslations\n *\n * Messages displayed to the user indicating the state of the show/hide toggle.\n * @property {string} [showPassword] - Visible text of the button when the\n *   password is currently hidden. Plain text only.\n * @property {string} [hidePassword] - Visible text of the button when the\n *   password is currently visible. Plain text only.\n * @property {string} [showPasswordAriaLabel] - aria-label of the button when\n *   the password is currently hidden. Plain text only.\n * @property {string} [hidePasswordAriaLabel] - aria-label of the button when\n *   the password is currently visible. Plain text only.\n * @property {string} [passwordShownAnnouncement] - Screen reader\n *   announcement to make when the password has just become visible.\n *   Plain text only.\n * @property {string} [passwordHiddenAnnouncement] - Screen reader\n *   announcement to make when the password has just been hidden.\n *   Plain text only.\n */\n\n/**\n * @import { Schema } from '../../common/configuration.mjs'\n */\n", "import { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Radios component\n *\n * @preserve\n */\nexport class Radios extends Component {\n  /** @private */\n  $inputs\n\n  /**\n   * Radios can be associated with a 'conditionally revealed' content block –\n   * for example, a radio for 'Phone' could reveal an additional form field for\n   * the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which\n   * is promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page\n   * (for example if the user has navigated back), and set up event handlers to\n   * keep the reveal in sync with the radio state.\n   *\n   * @param {Element | null} $root - HTML element to use for radios\n   */\n  constructor($root) {\n    super($root)\n\n    const $inputs = this.$root.querySelectorAll('input[type=\"radio\"]')\n    if (!$inputs.length) {\n      throw new ElementError({\n        component: Radios,\n        identifier: 'Form inputs (`<input type=\"radio\">`)'\n      })\n    }\n\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError({\n          component: Radios,\n          identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n        })\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$root.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all radio buttons in this component.\n   *\n   * @private\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Radio input\n   */\n  syncConditionalRevealWithInputState($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target?.classList.contains('govuk-radios__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle(\n        'govuk-radios__conditional--hidden',\n        !inputIsChecked\n      )\n    }\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the component root – if the click occurred on a radio, sync\n   * the state of the conditional reveal for all radio buttons in the same form\n   * with the same name (because checking one radio could have un-checked a\n   * radio under the root of another Radio component)\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't radio buttons\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'radio'\n    ) {\n      return\n    }\n\n    // We only need to consider radios with conditional reveals, which will have\n    // aria-controls attributes.\n    const $allInputs = document.querySelectorAll(\n      'input[type=\"radio\"][aria-controls]'\n    )\n\n    const $clickedInputForm = $clickedInput.form\n    const $clickedInputName = $clickedInput.name\n\n    $allInputs.forEach(($input) => {\n      const hasSameFormOwner = $input.form === $clickedInputForm\n      const hasSameName = $input.name === $clickedInputName\n\n      if (hasSameName && hasSameFormOwner) {\n        this.syncConditionalRevealWithInputState($input)\n      }\n    })\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-radios'\n}\n", "import { getBreakpoint } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Service Navigation component\n *\n * @preserve\n */\nexport class ServiceNavigation extends Component {\n  /** @private */\n  $menuButton\n\n  /** @private */\n  $menu\n\n  /**\n   * Remember the open/closed state of the nav so we can maintain it when the\n   * screen is resized.\n   *\n   * @private\n   */\n  menuIsOpen = false\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to detect\n   * when a screen size change happens. We rely on it being null if the feature\n   * isn't available to initially apply hidden attributes\n   *\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for header\n   */\n  constructor($root) {\n    super($root)\n\n    const $menuButton = this.$root.querySelector(\n      '.govuk-js-service-navigation-toggle'\n    )\n\n    // Headers don't necessarily have a navigation. When they don't, the menu\n    // toggle won't be rendered by our macro (or may be omitted when writing\n    // plain HTML)\n    if (!$menuButton) {\n      return this\n    }\n\n    const menuId = $menuButton.getAttribute('aria-controls')\n    if (!menuId) {\n      throw new ElementError({\n        component: ServiceNavigation,\n        identifier:\n          'Navigation button (`<button class=\"govuk-js-service-navigation-toggle\">`) attribute (`aria-controls`)'\n      })\n    }\n\n    const $menu = document.getElementById(menuId)\n    if (!$menu) {\n      throw new ElementError({\n        component: ServiceNavigation,\n        element: $menu,\n        identifier: `Navigation (\\`<ul id=\"${menuId}\">\\`)`\n      })\n    }\n\n    this.$menu = $menu\n    this.$menuButton = $menuButton\n\n    this.setupResponsiveChecks()\n\n    this.$menuButton.addEventListener('click', () =>\n      this.handleMenuButtonClick()\n    )\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('tablet')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        component: ServiceNavigation,\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for GOV.UK Frontend desktop breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Sync menu state\n   *\n   * Uses the global variable menuIsOpen to correctly set the accessible and\n   * visual states of the menu and the menu button.\n   * Additionally will force the menu to be visible and the menu button to be\n   * hidden if the matchMedia is triggered to desktop.\n   *\n   * @private\n   */\n  checkMode() {\n    if (!this.mql || !this.$menu || !this.$menuButton) {\n      return\n    }\n\n    if (this.mql.matches) {\n      this.$menu.removeAttribute('hidden')\n      this.$menuButton.setAttribute('hidden', '')\n    } else {\n      this.$menuButton.removeAttribute('hidden')\n      this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString())\n\n      if (this.menuIsOpen) {\n        this.$menu.removeAttribute('hidden')\n      } else {\n        this.$menu.setAttribute('hidden', '')\n      }\n    }\n  }\n\n  /**\n   * Handle menu button click\n   *\n   * When the menu button is clicked, change the visibility of the menu and then\n   * sync the accessibility state and menu button state\n   *\n   * @private\n   */\n  handleMenuButtonClick() {\n    this.menuIsOpen = !this.menuIsOpen\n    this.checkMode()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-service-navigation'\n}\n", "import { setFocus } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Skip link component\n *\n * @preserve\n * @augments Component<HTMLAnchorElement>\n */\nexport class SkipLink extends Component {\n  static elementType = HTMLAnchorElement\n\n  /**\n   * @param {Element | null} $root - HTML element to use for skip link\n   * @throws {ElementError} when $root is not set or the wrong type\n   * @throws {ElementError} when $root.hash does not contain a hash\n   * @throws {ElementError} when the linked element is missing or the wrong type\n   */\n  constructor($root) {\n    super($root)\n\n    const hash = this.$root.hash\n    const href = this.$root.getAttribute('href') ?? ''\n\n    // Return early for external URLs or links to other pages\n    if (\n      this.$root.origin !== window.location.origin ||\n      this.$root.pathname !== window.location.pathname\n    ) {\n      return\n    }\n\n    const linkedElementId = hash.replace('#', '')\n\n    // Check link path matching current page\n    if (!linkedElementId) {\n      throw new ElementError(\n        `Skip link: Target link (\\`href=\"${href}\"\\`) has no hash fragment`\n      )\n    }\n\n    const $linkedElement = document.getElementById(linkedElementId)\n\n    // Check for link target element\n    if (!$linkedElement) {\n      throw new ElementError({\n        component: SkipLink,\n        element: $linkedElement,\n        identifier: `Target content (\\`id=\"${linkedElementId}\"\\`)`\n      })\n    }\n\n    /**\n     * Focus the linked element on click\n     *\n     * Adds a helper CSS class to hide native focus styles,\n     * but removes it on blur to restore native focus styles\n     */\n    this.$root.addEventListener('click', () =>\n      setFocus($linkedElement, {\n        onBeforeFocus() {\n          $linkedElement.classList.add('govuk-skip-link-focused-element')\n        },\n        onBlur() {\n          $linkedElement.classList.remove('govuk-skip-link-focused-element')\n        }\n      })\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-skip-link'\n}\n", "import { getBreakpoint } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Tabs component\n *\n * @preserve\n */\nexport class Tabs extends Component {\n  /** @private */\n  $tabs\n\n  /** @private */\n  $tabList\n\n  /** @private */\n  $tabListItems\n\n  /** @private */\n  jsHiddenClass = 'govuk-tabs__panel--hidden'\n\n  /** @private */\n  changingHash = false\n\n  /** @private */\n  boundTabClick\n\n  /** @private */\n  boundTabKeydown\n\n  /** @private */\n  boundOnHashChange\n\n  /**\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for tabs\n   */\n  constructor($root) {\n    super($root)\n\n    const $tabs = this.$root.querySelectorAll('a.govuk-tabs__tab')\n    if (!$tabs.length) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: 'Links (`<a class=\"govuk-tabs__tab\">`)'\n      })\n    }\n\n    this.$tabs = $tabs\n\n    // Save bound functions so we can remove event listeners during teardown\n    this.boundTabClick = this.onTabClick.bind(this)\n    this.boundTabKeydown = this.onTabKeydown.bind(this)\n    this.boundOnHashChange = this.onHashChange.bind(this)\n\n    const $tabList = this.$root.querySelector('.govuk-tabs__list')\n    const $tabListItems = this.$root.querySelectorAll(\n      'li.govuk-tabs__list-item'\n    )\n\n    if (!$tabList) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: 'List (`<ul class=\"govuk-tabs__list\">`)'\n      })\n    }\n\n    if (!$tabListItems.length) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: 'List items (`<li class=\"govuk-tabs__list-item\">`)'\n      })\n    }\n\n    this.$tabList = $tabList\n    this.$tabListItems = $tabListItems\n\n    this.setupResponsiveChecks()\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('tablet')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for GOV.UK Frontend tablet breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Setup or teardown handler for viewport resize check\n   *\n   * @private\n   */\n  checkMode() {\n    if (this.mql?.matches) {\n      this.setup()\n    } else {\n      this.teardown()\n    }\n  }\n\n  /**\n   * Setup tab component\n   *\n   * @private\n   */\n  setup() {\n    this.$tabList.setAttribute('role', 'tablist')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.setAttribute('role', 'presentation')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Set HTML attributes\n      this.setAttributes($tab)\n\n      // Handle events\n      $tab.addEventListener('click', this.boundTabClick, true)\n      $tab.addEventListener('keydown', this.boundTabKeydown, true)\n\n      // Remove old active panels\n      this.hideTab($tab)\n    })\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $activeTab = this.getTab(window.location.hash) ?? this.$tabs[0]\n\n    this.showTab($activeTab)\n\n    // Handle hashchange events\n    window.addEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Teardown tab component\n   *\n   * @private\n   */\n  teardown() {\n    this.$tabList.removeAttribute('role')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.removeAttribute('role')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Remove events\n      $tab.removeEventListener('click', this.boundTabClick, true)\n      $tab.removeEventListener('keydown', this.boundTabKeydown, true)\n\n      // Unset HTML attributes\n      this.unsetAttributes($tab)\n    })\n\n    // Remove hashchange event handler\n    window.removeEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Handle hashchange event\n   *\n   * @private\n   * @returns {void | undefined} Returns void, or undefined when prevented\n   */\n  onHashChange() {\n    const hash = window.location.hash\n    const $tabWithHash = this.getTab(hash)\n    if (!$tabWithHash) {\n      return\n    }\n\n    // Prevent changing the hash\n    if (this.changingHash) {\n      this.changingHash = false\n      return\n    }\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $previousTab = this.getCurrentTab()\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($previousTab)\n    this.showTab($tabWithHash)\n    $tabWithHash.focus()\n  }\n\n  /**\n   * Hide panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hideTab($tab) {\n    this.unhighlightTab($tab)\n    this.hidePanel($tab)\n  }\n\n  /**\n   * Show panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showTab($tab) {\n    this.highlightTab($tab)\n    this.showPanel($tab)\n  }\n\n  /**\n   * Get tab link by hash\n   *\n   * @private\n   * @param {string} hash - Hash fragment including #\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getTab(hash) {\n    return this.$root.querySelector(`a.govuk-tabs__tab[href=\"${hash}\"]`)\n  }\n\n  /**\n   * Set tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  setAttributes($tab) {\n    const panelId = $tab.hash.replace('#', '')\n    if (!panelId) {\n      return\n    }\n\n    // Set tab attributes\n    $tab.setAttribute('id', `tab_${panelId}`)\n    $tab.setAttribute('role', 'tab')\n    $tab.setAttribute('aria-controls', panelId)\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.setAttribute('tabindex', '-1')\n\n    // Set panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.setAttribute('role', 'tabpanel')\n    $panel.setAttribute('aria-labelledby', $tab.id)\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unsetAttributes($tab) {\n    // unset tab attributes\n    $tab.removeAttribute('id')\n    $tab.removeAttribute('role')\n    $tab.removeAttribute('aria-controls')\n    $tab.removeAttribute('aria-selected')\n    $tab.removeAttribute('tabindex')\n\n    // unset panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.removeAttribute('role')\n    $panel.removeAttribute('aria-labelledby')\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Handle tab link clicks\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {void} Returns void\n   */\n  onTabClick(event) {\n    const $currentTab = this.getCurrentTab()\n    const $nextTab = event.currentTarget\n\n    if (!$currentTab || !($nextTab instanceof HTMLAnchorElement)) {\n      return\n    }\n\n    event.preventDefault()\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Update browser URL hash fragment for tab\n   *\n   * - Allows back/forward to navigate tabs\n   * - Avoids page jump when hash changes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  createHistoryEntry($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    // Save and restore the id so the page doesn't jump when a user clicks a tab\n    // (which changes the hash)\n    const panelId = $panel.id\n    $panel.id = ''\n    this.changingHash = true\n    window.location.hash = panelId\n    $panel.id = panelId\n  }\n\n  /**\n   * Handle tab keydown event\n   *\n   * - Press right arrow for next tab\n   * - Press left arrow for previous tab\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  onTabKeydown(event) {\n    switch (event.key) {\n      // 'Left' and 'Right' required for Edge 16 support.\n      case 'ArrowLeft':\n      case 'Left':\n        this.activatePreviousTab()\n        event.preventDefault()\n        break\n      case 'ArrowRight':\n      case 'Right':\n        this.activateNextTab()\n        event.preventDefault()\n        break\n    }\n  }\n\n  /**\n   * Activate next tab\n   *\n   * @private\n   */\n  activateNextTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab?.parentElement) {\n      return\n    }\n\n    const $nextTabListItem = $currentTab.parentElement.nextElementSibling\n    if (!$nextTabListItem) {\n      return\n    }\n\n    const $nextTab = $nextTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$nextTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    $nextTab.focus()\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Activate previous tab\n   *\n   * @private\n   */\n  activatePreviousTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab?.parentElement) {\n      return\n    }\n\n    const $previousTabListItem =\n      $currentTab.parentElement.previousElementSibling\n    if (!$previousTabListItem) {\n      return\n    }\n\n    const $previousTab = $previousTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($previousTab)\n    $previousTab.focus()\n    this.createHistoryEntry($previousTab)\n  }\n\n  /**\n   * Get tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   * @returns {Element | null} Tab panel\n   */\n  getPanel($tab) {\n    const panelId = $tab.hash.replace('#', '')\n    if (!panelId) {\n      return null\n    }\n\n    return this.$root.querySelector(`#${panelId}`)\n  }\n\n  /**\n   * Show tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showPanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Hide tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hidePanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unhighlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.parentElement.classList.remove('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Set 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  highlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'true')\n    $tab.parentElement.classList.add('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '0')\n  }\n\n  /**\n   * Get current tab link\n   *\n   * @private\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getCurrentTab() {\n    return this.$root.querySelector(\n      '.govuk-tabs__list-item--selected a.govuk-tabs__tab'\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-tabs'\n}\n", "import { normaliseOptions } from './common/configuration.mjs'\nimport { isObject, isSupported } from './common/index.mjs'\nimport { Accordion } from './components/accordion/accordion.mjs'\nimport { Button } from './components/button/button.mjs'\nimport { CharacterCount } from './components/character-count/character-count.mjs'\nimport { Checkboxes } from './components/checkboxes/checkboxes.mjs'\nimport { ErrorSummary } from './components/error-summary/error-summary.mjs'\nimport { ExitThisPage } from './components/exit-this-page/exit-this-page.mjs'\nimport { FileUpload } from './components/file-upload/file-upload.mjs'\nimport { Header } from './components/header/header.mjs'\nimport { NotificationBanner } from './components/notification-banner/notification-banner.mjs'\nimport { PasswordInput } from './components/password-input/password-input.mjs'\nimport { Radios } from './components/radios/radios.mjs'\nimport { ServiceNavigation } from './components/service-navigation/service-navigation.mjs'\nimport { SkipLink } from './components/skip-link/skip-link.mjs'\nimport { Tabs } from './components/tabs/tabs.mjs'\nimport { ElementError, SupportError } from './errors/index.mjs'\n\n/**\n * Initialise all components\n *\n * Use the `data-module` attributes to find, instantiate and init all of the\n * components provided as part of GOV.UK Frontend.\n *\n * @param {Config | Element | Document | null} [scopeOrConfig] - Scope of the document to search within or config for all components (with optional scope)\n */\nfunction initAll(scopeOrConfig = {}) {\n  const config = isObject(scopeOrConfig) ? scopeOrConfig : {}\n\n  // Extract initialisation options\n  const options = normaliseOptions(scopeOrConfig)\n\n  try {\n    // Skip initialisation when GOV.UK Frontend is not supported\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n\n    // Users can initialise GOV.UK Frontend in certain sections of the page\n    // unless the scope is null (for example, query selector not found)\n    if (options.scope === null) {\n      throw new ElementError({\n        element: options.scope,\n        identifier: 'GOV.UK Frontend scope element (`$scope`)'\n      })\n    }\n  } catch (error) {\n    if (options.onError) {\n      options.onError(error, {\n        config\n      })\n    } else {\n      console.log(error)\n    }\n\n    return\n  }\n\n  const components = /** @type {const} */ ([\n    [Accordion, config.accordion],\n    [Button, config.button],\n    [CharacterCount, config.characterCount],\n    [Checkboxes],\n    [ErrorSummary, config.errorSummary],\n    [ExitThisPage, config.exitThisPage],\n    [FileUpload, config.fileUpload],\n    [Header],\n    [NotificationBanner, config.notificationBanner],\n    [PasswordInput, config.passwordInput],\n    [Radios],\n    [ServiceNavigation],\n    [SkipLink],\n    [Tabs]\n  ])\n\n  components.forEach(([Component, componentConfig]) => {\n    createAll(Component, componentConfig, options)\n  })\n}\n\n/**\n * Create all instances of a specific component on the page\n *\n * Uses the `data-module` attribute to find all elements matching the specified\n * component on the page, creating instances of the component object for each\n * of them.\n *\n * Any component errors will be caught and logged to the console.\n *\n * @template {CompatibleClass} ComponentClass\n * @param {ComponentClass} Component - class of the component to create\n * @param {ComponentConfig<ComponentClass>} [config] - Config supplied to component\n * @param {OnErrorCallback<ComponentClass> | Element | Document | null | CreateAllOptions<ComponentClass>} [scopeOrOptions] - options for createAll including scope of the document to search within and callback function if error throw by component on init\n * @returns {Array<InstanceType<ComponentClass>>} - array of instantiated components\n */\nfunction createAll(Component, config, scopeOrOptions) {\n  let /** @type {NodeListOf<Element> | undefined} */ $elements\n\n  // Extract initialisation options\n  const options = normaliseOptions(scopeOrOptions)\n\n  try {\n    // Skip initialisation when GOV.UK Frontend is not supported\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n\n    // Users can initialise GOV.UK Frontend in certain sections of the page\n    // unless the scope is null (for example, query selector not found)\n    if (options.scope === null) {\n      throw new ElementError({\n        element: options.scope,\n        component: Component,\n        identifier: 'Scope element (`$scope`)'\n      })\n    }\n\n    $elements = options.scope?.querySelectorAll(\n      `[data-module=\"${Component.moduleName}\"]`\n    )\n  } catch (error) {\n    if (options.onError) {\n      options.onError(error, {\n        component: Component,\n        config\n      })\n    } else {\n      console.log(error)\n    }\n\n    return []\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/no-unsafe-return --\n   * We can't define CompatibleClass as `{new(): CompatibleClass, moduleName: string}`,\n   * as when doing `typeof Accordion` (or any component), TypeScript doesn't seem\n   * to acknowledge the static `moduleName` that's set in our component classes.\n   * This means we have to set the constructor of `CompatibleClass` as `{new(): any}`,\n   * leading to ESLint frowning that we're returning `any[]`.\n   */\n  return Array.from($elements ?? [])\n    .map(($element) => {\n      try {\n        // Only pass config to components that accept it\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return typeof config !== 'undefined'\n          ? new Component($element, config)\n          : new Component($element)\n      } catch (error) {\n        if (options.onError) {\n          options.onError(error, {\n            element: $element,\n            component: Component,\n            config\n          })\n        } else {\n          console.log(error)\n        }\n\n        return null\n      }\n    })\n    .filter(Boolean) // Exclude components that errored\n}\n\nexport { initAll, createAll }\n\n/* eslint-disable jsdoc/valid-types --\n * `{new(...args: any[] ): object}` is not recognised as valid\n * https://github.com/gajus/eslint-plugin-jsdoc/issues/145#issuecomment-1308722878\n * https://github.com/jsdoc-type-pratt-parser/jsdoc-type-pratt-parser/issues/131\n **/\n\n/**\n * @typedef {{new (...args: any[]): any, moduleName: string}} CompatibleClass\n */\n\n/* eslint-enable jsdoc/valid-types */\n\n/**\n * Config for all components via `initAll()`\n *\n * @typedef {object} Config\n * @property {Element | Document | null} [scope] - Scope of the document to search within\n * @property {OnErrorCallback<CompatibleClass>} [onError] - Initialisation error callback\n * @property {AccordionConfig} [accordion] - Accordion config\n * @property {ButtonConfig} [button] - Button config\n * @property {CharacterCountConfig} [characterCount] - Character Count config\n * @property {ErrorSummaryConfig} [errorSummary] - Error Summary config\n * @property {ExitThisPageConfig} [exitThisPage] - Exit This Page config\n * @property {FileUploadConfig} [fileUpload] - File Upload config\n * @property {NotificationBannerConfig} [notificationBanner] - Notification Banner config\n * @property {PasswordInputConfig} [passwordInput] - Password input config\n */\n\n/**\n * Config for individual components\n *\n * @import { AccordionConfig } from './components/accordion/accordion.mjs'\n * @import { ButtonConfig } from './components/button/button.mjs'\n * @import { CharacterCountConfig } from './components/character-count/character-count.mjs'\n * @import { ErrorSummaryConfig } from './components/error-summary/error-summary.mjs'\n * @import { ExitThisPageConfig } from './components/exit-this-page/exit-this-page.mjs'\n * @import { NotificationBannerConfig } from './components/notification-banner/notification-banner.mjs'\n * @import { PasswordInputConfig } from './components/password-input/password-input.mjs'\n * @import { FileUploadConfig } from './components/file-upload/file-upload.mjs'\n */\n\n/**\n * Component config keys, e.g. `accordion` and `characterCount`\n *\n * @typedef {keyof Omit<Config, 'scope' | 'onError'>} ConfigKey\n */\n\n/**\n * @template {CompatibleClass} ComponentClass\n * @typedef {ConstructorParameters<ComponentClass>[1]} ComponentConfig\n */\n\n/**\n * @template {CompatibleClass} ComponentClass\n * @typedef {object} ErrorContext\n * @property {Element} [element] - Element used for component module initialisation\n * @property {ComponentClass} [component] - Class of component\n * @property {Config | ComponentConfig<ComponentClass>} [config] - Config supplied to components\n */\n\n/**\n * @template {CompatibleClass} ComponentClass\n * @callback OnErrorCallback\n * @param {unknown} error - Thrown error\n * @param {ErrorContext<ComponentClass>} context - Object containing the element, component class and configuration\n */\n\n/**\n * @template {CompatibleClass} ComponentClass\n * @typedef {object} CreateAllOptions\n * @property {Element | Document | null} [scope] - scope of the document to search within\n * @property {OnErrorCallback<ComponentClass>} [onError] - callback function if error throw by component on init\n */\n", "export class SiriusHeader extends HTMLElement {\n  connectedCallback() {\n    const prefix = window.location.hostname === \"localhost\" ? \"http://localhost:8080\" : \"\";\n\n    let navLinks = [\n      {\n        url: `${prefix}/supervision/#/clients/search-for-client`,\n        title: \"Create client\",\n      },\n      {\n        url: `${prefix}/supervision/workflow`,\n        title: \"Workflow\",\n      },\n      {\n        url: \"https://wordpress.sirius.opg.service.justice.gov.uk\",\n        title: \"Guidance\",\n        openNewTab: true,\n      },\n      {\n        url: `${prefix}/supervision/finance-admin/downloads`,\n        title: \"Finance\",\n      },\n    ];\n\n    // Override the nav links if <sirius-header-nav> elements are defined\n    // inside the <sirius-header>\n    const navElements = this.querySelectorAll(\"sirius-header-nav\");\n    if (navElements.length > 0) {\n      navLinks = [];\n\n      navElements.forEach((navElement) => {\n        navLinks.push({\n          url: navElement.getAttribute(\"url\"),\n          hide: navElement.getAttribute(\"hide\") === \"true\",\n          title: navElement.textContent,\n        });\n      });\n    }\n\n    this.innerHTML = `  \n            <div class=\"sirius-header\">         \n                <header class=\"govuk-header app-!-embedded-hide\"  role=\"banner\">\n                    <div class=\"govuk-header__container\">\n                         <div class=\"govuk-header__logo\">\n                            <a class=\"govuk-header__link--homepage\">\n                                <svg\n                                     role=\"presentation\"\n                                     focusable=\"false\"\n                                     class=\"moj-header__logotype-crest\"\n                                     xmlns=\"http://www.w3.org/2000/svg\"\n                                     viewBox=\"0 0 40 40\"\n                                     height=\"40\"\n                                     width=\"40\">\n\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M34.6046 20.702C34.4783 20.689 34.3718 20.8047 34.4151 20.9466C34.4025 20.9448 34.3898 20.941 34.379 20.9336L33.7869 20.5153C33.7472 20.4873 33.7364 20.4313 33.7562 20.3884C33.8682 20.3828 33.9891 20.323 33.9747 20.183C34.0198 20.2427 34.657 20.5956 34.6046 20.702ZM32.4277 18.5735C32.3934 18.6202 32.3194 18.7154 32.3194 18.7154C31.6642 17.9387 29.4493 17.05 28.4908 17.1956C28.4908 17.1956 28.5035 17.0798 28.5089 17.0182L28.5017 17.022L28.8663 16.783L28.5558 16.516C28.5576 16.4786 28.3555 15.1754 28.3555 15.1754L28.9042 15.1586C28.9042 15.1586 28.7093 15.3957 28.7002 15.5843C28.7309 15.6067 28.758 15.6384 28.776 15.6795C28.8861 15.631 29.0035 15.3957 29.0035 15.3957L29.0558 16.165C29.0558 16.165 28.9024 15.9428 28.7923 15.9036C28.7833 15.9316 28.7724 15.9577 28.7526 15.9801C28.9114 16.4917 29.6334 16.5216 29.6334 16.0828C29.61 15.855 29.3663 15.8924 29.3789 16.1332C28.9836 15.8083 29.5179 15.2912 29.7381 15.8121C29.7111 15.5115 29.7345 15.3416 29.9602 15.1941C30.11 15.3882 30.0883 15.5712 29.9277 15.8625C30.4132 15.3957 30.5992 16.1874 30.1425 16.3031C30.3645 15.8886 29.7237 16.0193 29.9602 16.4544C30.175 16.7942 30.6966 16.7438 30.879 16.3741C30.8663 16.3535 30.8573 16.3293 30.8519 16.305C30.6696 16.2677 30.3988 16.4282 30.3988 16.4282L30.6515 15.7169C30.6515 15.7169 30.758 16.0212 30.9096 16.1164C30.9367 16.0903 30.9728 16.0716 31.0089 16.0623C31.0378 15.8756 30.8555 15.5806 30.8555 15.5806L31.7003 15.9185C31.7003 15.9185 31.3663 16.0063 31.2598 16.1612C31.2797 16.1948 31.2923 16.2322 31.2941 16.2695C31.4692 16.3069 31.7544 16.1575 31.7544 16.1575L31.453 16.8483C31.453 16.8483 31.3645 16.5459 31.2075 16.445C31.1876 16.46 31.1642 16.4712 31.1389 16.4786C31.0197 16.8782 31.3699 17.2684 31.7544 17.1695C32.2183 17.0238 31.8501 16.4768 31.7237 16.9342C31.4728 16.5328 32.1497 16.0903 32.1822 16.7624C32.2634 16.4394 32.3736 16.2919 32.6154 16.2527C32.6786 16.516 32.5793 16.656 32.3537 16.8558C32.8754 16.628 32.8988 17.3767 32.3952 17.3375C32.5703 17.1695 32.4151 16.9772 32.2436 17.1247C31.9421 17.4514 32.5071 17.9163 32.9476 17.6848C32.9458 17.6549 32.9548 17.6269 32.9674 17.6008C32.8573 17.5224 32.5974 17.513 32.5974 17.513L33.1371 17.1004C33.1371 17.1004 33.0739 17.3506 33.1263 17.4813C33.166 17.4738 33.2057 17.4794 33.2436 17.4943C33.3591 17.3748 33.3664 17.05 33.3664 17.05L33.7689 17.569C33.7689 17.569 32.758 18.0507 32.5775 18.1908L32.2977 18.1628L32.4367 18.5717L32.4277 18.5735ZM29.4511 14.7908C29.619 14.8524 29.7779 14.9439 29.9493 14.7702C29.7851 14.7684 29.7363 14.6507 29.6876 14.5368C29.6082 13.9599 30.5179 14.1653 30.8573 14.2064C31.7111 14.7422 33.1642 14.4005 32.6588 13.1234C33.0541 13.3755 32.9187 14.0757 32.6172 14.3483C31.8284 14.7889 31.0811 14.4584 30.2941 15.321C30.1732 14.9271 29.7201 14.9476 29.5576 15.3845C29.4078 15.3938 29.3681 15.392 29.2255 15.4013C29.1984 15.1717 29.3789 15.0074 29.4511 14.7908ZM31.5595 12.5745C31.3068 12.7538 31.0793 13.017 30.823 12.6604C30.7634 12.6716 30.7147 12.6828 30.6533 12.694C31.0342 12.0835 31.0035 12.188 31.5595 12.5745ZM32.4187 11.1779C32.6064 11.3926 32.6876 11.626 32.6876 11.8912C32.5071 11.8277 32.4277 11.6223 32.4187 11.1779ZM24.5576 14.6395L25.5107 14.2885L25.8608 15.0167L25.1984 15.4536L24.5576 14.6395ZM23.9438 14.4678C23.8229 15.2221 22.1875 14.8972 22.3464 14.1504C22.4673 13.396 24.1009 13.7209 23.9438 14.4678ZM20.6929 14.7964L19.673 14.0514L20.6947 13.3046L21.7164 14.0495L20.6929 14.7964ZM18.3535 14.8879C17.3174 15.1044 17.0972 13.9263 18.1369 13.7303C19.173 13.5118 19.3932 14.6918 18.3535 14.8879ZM16.191 15.4536L15.5286 15.0167L15.8788 14.2885L16.8318 14.6395L16.191 15.4536ZM28.7706 13.0842C28.8537 13.0749 28.9204 13.0674 29.0125 13.0581C28.8537 12.9386 29.0089 12.7743 29.1407 12.8919C29.4529 13.144 28.8248 13.5548 28.7706 13.0842ZM35.0956 21.5404L35.009 21.5292L34.7743 20.8738C34.8844 20.7282 34.944 20.4948 34.7707 20.3772C34.5415 20.2838 33.8988 19.522 33.7075 20.0149C33.6263 20.0448 33.1154 20.0747 33.0757 20.1736C32.832 19.7722 32.6245 19.3465 32.4728 18.8741C32.5721 18.3252 33.9783 17.64 33.9783 17.64C33.9783 17.64 33.5775 17.0462 33.4187 16.7102C33.3483 16.8745 33.2833 16.8054 33.1299 16.8763C33.9097 15.4424 34.0757 13.5529 33.0432 12.1974C32.9367 11.9621 32.9855 11.6522 32.8808 11.4206C32.7021 11.1761 32.5793 10.6943 32.2616 10.6439C32.2598 11.0696 32.2183 11.4879 32.4169 11.8837C32.6299 12.1582 32.1281 12.3915 31.971 12.1731C32.2707 12.1376 32.3212 12.076 32.2183 11.9005C30.9277 11.6018 30.2075 12.539 28.9764 12.6865C28.8681 12.6847 28.7706 12.7258 28.7093 12.8284C27.9511 13.8852 29.6533 13.1627 29.8013 13.8647C29.5179 14.1055 29.4782 13.9468 29.2111 13.8759C28.8284 13.8908 28.4565 14.0159 28.9349 14.3501C28.6425 14.8244 28.6569 14.9924 28.0648 15.0335C28.3212 15.4088 28.2652 15.9521 28.3338 16.3778C27.9096 16.46 27.6226 16.671 27.6136 17.1377C27.424 17.1825 27.2183 17.0798 27.0829 17.2927C26.8175 17.0649 26.5107 17.022 26.193 17.0182C26.0377 16.8987 25.6605 16.6168 25.2543 16.4021C25.3356 16.0921 25.4114 15.8009 25.4836 15.5301C25.6027 15.4517 26.0287 15.1717 26.1388 15.097C26.0829 14.9794 25.8572 14.5088 25.7959 14.3819C26.5558 11.6764 26.8031 11.5252 27.1876 11.4655L27.2092 11.3908L25.8013 10.9259L25.7778 11.0192C26.1316 11.2862 26.2471 11.7306 26.0865 12.2496C25.711 12.0816 25.4962 11.7119 25.5377 11.3833C25.5305 11.3814 25.4439 11.3572 25.4439 11.3572L24.9727 12.9722C24.9727 12.9722 25.0413 12.9928 25.0486 12.9946C25.2327 12.7202 25.5558 12.5633 25.9294 12.6287C25.4944 14.0607 23.5359 13.6126 23.8861 12.3971C24.1352 11.8949 24.6099 12.2179 24.3807 12.7426C25.48 12.3449 24.8319 10.7093 23.8915 11.6858C24.202 11.0267 24.3789 10.5095 23.989 9.87282C23.4836 10.2108 23.3536 10.8176 23.4511 11.6298C22.8301 10.1622 21.7489 11.6727 22.6279 12.4382C22.4691 11.3497 23.7669 12.0685 22.8879 12.9461C22.0503 13.5604 21.0196 12.8546 20.9907 11.7717C21.4745 11.8165 21.8445 12.1133 21.8933 12.4849C21.9023 12.4849 21.9817 12.4868 21.9817 12.4868L22.0431 10.6402C22.0431 10.6402 21.942 10.6346 21.933 10.6346C21.8572 11.0099 21.4655 11.3254 20.9673 11.3348C21.0016 10.7653 21.3175 10.3228 21.7254 10.2481V10.1435H19.664V10.2481C20.0738 10.3228 20.3896 10.7653 20.4221 11.3348C19.9257 11.3254 19.5322 11.0099 19.4582 10.6346C19.4492 10.6346 19.3481 10.6402 19.3481 10.6402L19.4077 12.4868C19.4077 12.4868 19.4871 12.4849 19.4961 12.4849C19.5467 12.1133 19.9167 11.8165 20.4005 11.7717C20.3698 12.8546 19.3391 13.5604 18.5015 12.9461C17.6225 12.0685 18.9221 11.3497 18.7615 12.4382C19.6423 11.6708 18.5575 10.1641 17.9402 11.6298C18.0358 10.8176 17.9077 10.2108 17.4004 9.87282C17.0105 10.5095 17.1874 11.0267 17.4979 11.6858C16.5575 10.7093 15.9112 12.3467 17.0087 12.7426C16.7813 12.2179 17.2542 11.8968 17.5033 12.3971C17.8553 13.6145 15.895 14.0589 15.4618 12.6287C15.8354 12.5633 16.1567 12.7202 16.3427 12.9946C16.3499 12.9928 16.4167 12.9722 16.4167 12.9722L15.9455 11.3572C15.9455 11.3572 15.8607 11.3814 15.8535 11.3833C15.8932 11.7119 15.6802 12.0816 15.3047 12.2496C15.1423 11.7306 15.2578 11.2862 15.6134 11.0192L15.5881 10.9259L14.182 11.3908L14.2018 11.4655C14.5863 11.5252 14.8336 11.6764 15.5936 14.3819C15.5322 14.5126 15.3084 14.9756 15.2506 15.097C15.3589 15.1698 15.7903 15.4536 15.9058 15.5301C15.9726 15.7766 16.0412 16.0417 16.1134 16.3218C16.117 16.3199 16.1188 16.3181 16.1224 16.3162C16.1188 16.3274 16.117 16.3293 16.1134 16.3218C14.2217 17.2367 14.6513 17.8584 13.1946 17.6792C13.0646 17.991 12.9419 18.2991 12.6459 18.5119C12.5917 18.0339 12.3841 17.6643 12.1134 17.3263C11.9798 17.1639 11.7957 17.3431 11.5935 17.3599C11.2 18.2505 10.9256 17.4458 10.2307 17.9107C10.2577 18.3271 10.3191 18.7397 10.5393 19.1225C10.0213 19.0851 9.59348 18.9395 9.25051 18.6893C7.70356 20.478 6.08621 22.1957 4.76309 24.1618C4.0573 25.1289 2.16558 24.5669 2.66559 23.2357C2.89303 22.2648 4.25045 22.4702 4.16561 23.4355C4.83529 22.6644 4.40388 21.8951 3.3804 22.0688C4.32084 21.6468 4.88583 22.444 5.73242 21.3481C5.08439 21.3649 4.53565 21.152 3.88943 21.307C4.70713 20.801 5.82989 21.5516 6.52846 20.155C5.92014 20.2222 5.3696 20.4854 4.74143 20.5825C8.51765 16.8577 4.88403 16.6747 5.34613 15.0634C5.0501 15.3229 4.88042 15.5824 5.01761 15.9297C4.17102 15.5638 2.91649 15.672 2.57533 14.6097C2.4923 16.122 3.13491 16.0137 4.23962 16.3274C3.73058 16.2639 3.22697 16.2583 2.74862 16.0772C2.8479 16.755 3.3443 16.8987 3.93095 16.8353C3.35693 17.1639 3.4869 18.0078 4.07174 18.2991C3.69809 16.109 6.86961 16.8595 5.42194 18.8704C4.74865 19.9066 3.77752 20.6778 2.95982 21.5833C2.80458 21.3088 2.64573 21.0306 2.28833 21.0699C2.90927 21.8148 2.2071 22.6214 2.04284 23.3888C1.80276 24.3373 2.61144 25.1439 3.47968 25.254C3.1331 25.6779 3.10603 26.055 3.37137 26.4023C3.63311 25.0094 5.5862 25.3231 5.77032 23.8164C5.80281 23.639 5.88404 23.5008 6.07718 23.4205C5.19631 24.4493 7.31186 26.6264 5.32447 26.8803C5.04107 26.8896 4.97067 27.1977 5.12771 27.418C4.3064 27.3751 4.08077 27.6981 3.95622 28.4991C4.31723 28.402 4.65478 28.3105 4.99414 28.2209C4.63673 29.1899 3.82445 28.163 3.95802 29.8882C4.29016 29.7239 4.60244 29.5484 4.90569 29.3542C5.19811 30.3214 3.4183 29.9031 4.75587 31.4472C4.84071 31.1597 5.19811 30.5697 5.38043 30.4371C5.21436 30.9244 5.25407 31.4864 5.78115 31.7049C5.80642 31.5742 5.82808 31.4603 5.84975 31.3464C5.87321 31.3445 5.8696 31.3445 5.89307 31.3445C5.96888 31.6657 5.97971 32.1138 6.28116 32.3005C6.38044 32.3416 6.43459 32.3976 6.46708 32.5059C6.52304 32.6851 6.68369 32.7318 6.83893 32.7542C7.03749 32.7971 7.08622 32.5656 7.23244 32.4723C7.27215 32.7281 7.56457 32.7673 7.70717 32.9857C7.81728 31.7292 6.20534 32.1847 6.57539 31.3539C6.71799 31.8599 7.17467 31.7497 7.49417 31.9569C7.61692 32.1679 7.92017 32.3416 8.0736 32.0503C8.22342 32.1661 8.3588 32.2706 8.49238 32.3752C8.1783 30.8815 7.42919 31.8057 6.95987 31.0215C7.28659 31.0365 7.63677 31.5406 7.99057 31.197C8.18191 31.3987 8.32992 31.6377 8.47252 31.8767C8.53029 31.4006 8.3588 31.0365 7.99598 30.7713C7.58623 30.5118 7.03027 30.973 6.68008 30.4539C6.20174 29.8434 6.21618 28.9864 6.46528 28.2806C6.69272 27.7354 7.32991 27.5319 7.62233 27.0185C7.5411 27.4722 7.58262 28.2638 8.08082 28.4113C7.95988 27.5674 8.54112 26.8056 8.65845 25.9897C8.81007 25.7824 8.81729 25.6219 8.68011 25.3997C8.43281 24.9796 8.36422 24.4755 8.09165 24.061C7.66746 23.4467 7.14399 23.4299 8.00862 22.782C7.48515 23.6241 7.91295 23.3178 8.36602 24.1114C8.44906 23.8444 8.83534 23.4952 8.35339 23.4971C7.59165 23.1087 9.34438 22.1042 9.74149 22.0781C10.1314 22.0463 10.6801 22.0912 10.9762 21.6935C10.7902 21.3294 10.6097 21.2771 10.9256 20.8981C10.7126 20.7711 10.5249 20.6161 10.4888 20.3267C10.2848 20.3996 10.1061 20.4649 9.89673 20.5396C10.0881 20.3155 10.6513 19.8618 10.7126 20.3641C10.7253 20.6479 10.996 20.6983 11.2072 20.7692C11.0538 20.9989 10.7975 21.2323 11.0303 21.503C11.1946 21.6785 11.2957 22.0127 11.5466 22.0557C11.6134 21.7943 11.6783 21.5422 11.7451 21.2846C12.3011 21.8858 11.1892 22.2219 12.7127 22.7615C12.6567 22.4366 12.608 22.1229 12.6477 21.7868C13.3823 22.4216 12.3318 22.8193 14.0231 23.0266C13.8354 22.7951 13.7921 22.5393 13.7217 22.2797C14.0051 22.3283 14.2325 22.6083 14.4148 22.8175C14.5899 23.0901 14.7181 23.2413 15.1152 22.9724C15.1333 23.021 15.1369 23.0863 15.1712 23.1143C15.3499 23.2544 15.2777 23.4243 15.2741 23.6129H15.3228C15.5593 23.3664 15.5755 23.0845 15.5015 22.7783C15.339 22.1976 14.6549 22.6588 14.4148 22.0688C14.7379 22.2947 15.0593 22.4272 15.4149 22.2368C15.6134 22.431 15.6964 22.5729 15.7921 22.8455C15.9546 22.2219 15.7668 21.5852 15.1297 21.7719C14.9329 21.8447 14.8517 21.8279 14.6513 21.6505C14.9473 21.7551 15.1423 21.5982 15.3318 21.4582C15.3733 21.5142 15.3968 21.5758 15.4239 21.5777C15.6044 21.5889 15.7199 21.7009 15.83 21.8372C15.8896 21.3032 15.3769 20.8719 14.8607 21.0064C14.7307 21.6617 14.2 21.292 13.7795 21.2043C13.1242 20.8085 12.7812 20.0504 12.2018 19.5556C12.2596 18.82 11.6693 18.2356 10.9581 18.2785C11.5989 17.9891 12.3589 18.5586 12.4094 19.2494C12.4329 19.5314 12.5989 19.7106 12.7722 19.9216C14.9365 15.42 21.9204 14.2437 25.9312 17.1004C26.2724 17.4234 26.6442 17.6885 26.998 18.0283C27.137 17.5989 27.054 17.0873 27.6749 17.3487L27.7905 17.2666C27.6641 16.9043 27.9258 16.4936 28.2941 16.4674V16.7494C28.1334 16.7774 28.0071 16.9398 28.0342 17.1116C28.1569 17.0854 28.2706 17.2535 28.202 17.3636C28.3194 17.4327 28.4818 17.4047 28.5721 17.3058C28.675 17.3114 28.7778 17.3226 28.8807 17.3319C28.7399 17.6792 28.249 17.7987 27.9746 17.5429L27.9728 17.5448C28.0269 17.6213 27.7887 18.385 27.7778 18.4764C27.7508 18.5866 27.6497 18.6613 27.5432 18.6557C27.5865 18.7304 27.6226 18.792 27.6623 18.8592C27.8392 18.7584 28.0847 18.764 28.0612 18.5082C28.0937 18.3625 28.0035 17.6904 28.2056 17.7501C28.2869 18.0041 28.1334 18.2991 28.3157 18.5511C28.8934 18.4036 28.6407 17.8622 29.3428 17.7203C29.6208 17.6941 30.2075 17.5541 30.3591 17.8416C29.7454 17.6717 28.9529 17.8472 28.8194 18.5717C28.1804 18.7266 27.6461 19.1971 26.9674 19.1971C26.4276 19.227 26.2814 19.8973 26.2598 20.3566C26.1695 20.8831 26.1424 21.4321 25.915 21.9213C25.8031 22.1061 25.8969 22.3227 25.9583 22.4945C26.1641 22.6083 26.3121 23.3496 26.341 23.6147C26.3392 24.0983 27.1424 24.2589 27.4692 24.5595C27.5594 23.9545 26.4493 24.1263 26.6045 23.2805C26.8031 23.8406 27.2327 23.9564 27.7056 24.2309C27.5576 23.6651 27.5125 22.7204 26.7489 22.8399C26.4529 22.4142 26.8843 22.3899 26.7453 21.8858C26.9655 21.9567 27.0702 22.0351 27.128 22.1752C27.0594 22.1528 26.9998 22.1341 26.906 22.1024C26.9312 22.4608 27.2327 22.5467 27.4637 22.7932C27.424 22.2051 27.3735 21.8335 26.8446 21.5478C26.545 21.264 26.8915 20.6105 26.8717 20.2185C26.8608 20.1027 27.5775 19.7349 27.6876 19.7666C28.2183 19.8394 28.776 19.7517 29.2887 19.8898C29.8031 20.0579 29.3627 18.9059 30.1912 19.5127C29.5901 19.3297 29.9566 20.0056 29.5233 20.0411C29.2201 20.0448 28.962 20.0149 28.6479 20.0037C29.7363 22.5113 32.1515 21.7756 32.8158 24.0124C33.3718 23.5064 32.9945 23.5139 32.8393 22.9836C34.0938 23.8481 31.6696 24.8507 32.5793 26.3668C32.5234 26.1969 33.092 25.4874 33.157 25.3418C33.2617 25.1831 33.4367 25.1719 33.5505 25.2876L33.7328 24.8993C33.3952 24.707 34.0053 23.8873 34.0505 23.6539C34.1137 23.5139 34.2563 23.4467 34.37 23.5064L34.5397 23.0191C34.2202 22.9295 34.4602 22.1285 34.435 21.9063C33.9855 21.4862 33.6173 20.9597 33.2689 20.4742L33.4837 20.435C33.4602 20.5452 33.4981 20.6647 33.5884 20.7282C33.7436 20.7917 34.3321 21.3798 34.518 21.2416L34.6119 21.5012C34.462 21.5441 34.435 21.7607 34.435 21.9063C34.5144 21.9754 34.5992 22.0407 34.6768 22.1117C34.6877 22.0594 34.6786 21.8223 34.7256 21.7868C34.7942 21.882 34.9223 21.882 34.9999 21.8055C35.0721 21.8447 34.9819 22.3638 34.9909 22.4291C35.0776 22.5262 35.1606 22.627 35.2382 22.7316C35.2057 22.4945 35.4873 21.5852 35.0956 21.5404Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M27.4547 17.724C27.4096 17.668 27.3988 17.5877 27.4385 17.528C27.3681 17.513 27.2471 18.2038 27.2237 18.2431C27.2706 18.2916 27.3139 18.3383 27.3536 18.385C27.4168 18.4055 27.5233 18.4428 27.545 18.3476L27.6966 17.7389C27.6262 17.8062 27.5125 17.8118 27.4547 17.724ZM18.5431 34.9686C16.8679 34.2815 15.6513 35.96 17.0178 36.2438C15.5177 36.311 15.8084 34.1265 15.1874 34.2572C15.7307 34.8622 15.7307 35.988 16.2307 36.2998C17.2398 36.7423 18.2867 36.8152 19.368 36.7647C18.8228 36.2644 18.6911 35.6351 18.5431 34.9686ZM23.6568 36.2196C25.0215 35.9395 23.8121 34.2591 22.1315 34.9443C21.9835 35.6109 21.8518 36.2401 21.3084 36.7405C22.3879 36.7928 23.4348 36.7199 24.4439 36.2774C24.9439 35.9656 24.9439 34.8379 25.4854 34.233C24.868 34.1041 25.1569 36.2868 23.6568 36.2196ZM34.6335 22.6737C34.6299 22.7073 34.6425 22.739 34.6624 22.7596C34.7382 22.6942 34.8592 22.7204 34.9151 22.8007C35.0018 22.7745 34.9729 22.4945 34.9909 22.4272C34.8916 22.3171 34.7869 22.2125 34.6768 22.1117L34.6335 22.6737ZM34.2129 24.7518C34.222 24.6715 34.6425 23.9508 34.5324 23.8873C34.4566 23.9023 34.3682 23.8593 34.3357 23.7846C34.2346 23.7398 33.9656 24.5277 33.9205 24.5763C34.0541 24.4904 34.2238 24.6323 34.1786 24.7929C34.1931 24.7835 34.2039 24.7705 34.2129 24.7518Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M39 21.4246C38.6498 21.5348 38.5054 21.8372 38.3736 22.1789C37.4928 20.758 35.8195 19.7778 35.5631 18.0395C35.7617 16.6504 37.5415 16.9678 37.1805 18.4167C38.1029 17.9032 37.657 16.9473 36.787 16.7792C37.7328 16.8577 38.2491 17.6829 38.8953 16.3106C38.3357 16.5197 37.4837 16.3703 37.1913 16.3255C38.3682 16.1612 39.0072 16.1724 38.9711 14.6619C38.5704 15.5656 37.4621 15.5824 36.6552 15.8774C36.7057 15.4741 36.5848 15.2277 36.2725 15.0988C36.592 17.3058 32.5432 16.5869 36.9909 21.3518C36.4458 21.0418 35.8122 21.1464 35.2833 20.7991C35.6949 21.9455 36.3899 21.7476 37.2996 22.149C36.3231 22.1434 36.0198 23.1293 36.7437 23.6017C36.5559 22.8399 37.565 22.3171 38.0722 22.9108C39.2274 24.4456 37.1137 26.5778 35.2382 22.7316C35.2509 22.9444 35.1083 23.1349 34.9079 23.0714L34.6967 23.6782C35.1263 23.8444 34.4675 24.7014 34.4223 24.9478C34.3465 25.1121 34.1804 25.1626 34.0559 25.0729L33.8483 25.5173C34.1082 25.7638 33.4097 26.4621 33.3303 26.6805C33.249 26.8056 33.1046 26.8485 33.0017 26.7813L32.9259 26.9419C32.9422 26.9624 32.953 26.9755 32.9548 26.9755C33.4295 27.5543 33.6461 28.0024 33.518 28.6186C33.9025 28.2769 34.0757 27.3321 33.7671 26.8168C34.1155 27.1921 34.6209 27.461 34.8194 27.9408C35.0198 28.8127 34.8664 29.6772 34.2942 30.3662C34.0505 30.6182 34.1155 30.7527 34.0848 31.0607C33.9223 31.5537 33.3537 31.5947 33.1389 32.0111C32.9891 32.3752 32.74 32.6739 32.6335 33.0567C33.2779 32.9521 33.1678 32.0204 33.7779 31.8319C33.5306 32.2221 33.2905 32.5787 33.1209 33.0305C33.6317 32.8942 34.5938 32.7523 34.4332 32.0074C34.3122 31.6638 34.6335 31.4379 34.6173 31.1093C35.0216 30.9599 34.9277 30.7919 35.1209 30.4651C35.2111 30.6612 35.2148 30.8292 35.2039 31.0421C35.1534 30.9356 35.1227 30.8684 35.0884 30.7919C34.8014 31.1933 35.0397 31.5835 34.9999 32.013C36.4079 30.7079 34.5378 30.7172 36 27.8269C36.3357 27.25 35.0433 27.3153 34.9476 26.014C34.8573 25.452 35.3339 24.9908 35.4368 24.4549C35.9982 25.4893 37.9657 25.4557 37.6967 26.7776C38.092 26.4695 38.0758 25.9038 37.9188 25.48C39.9477 24.7238 38.3466 22.7932 39 21.4246Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M32.9602 26.3967C33.0053 26.4172 33.045 26.449 33.0613 26.4994C33.0938 26.505 33.1317 26.4882 33.1534 26.4527C33.1696 26.4023 33.6696 25.7245 33.6118 25.6779C33.5559 25.6592 33.5053 25.62 33.4891 25.5602C33.4404 25.5117 33.3718 25.4893 33.3248 25.5621C33.3068 25.648 32.749 26.2978 32.8916 26.3818C32.9169 26.3799 32.9385 26.3855 32.9602 26.3967ZM32.6678 26.5311C32.6768 26.5461 32.6858 26.561 32.6931 26.5759L32.7021 26.5573L32.6678 26.5311ZM13.0358 29.4718C13.2379 29.5092 13.4636 29.5502 13.6603 29.4588C13.3535 28.9192 13.0538 28.3889 12.7397 27.8381C12.1946 28.5308 11.2487 28.1088 10.6549 27.6813C10.1711 27.3116 11.2162 26.7384 10.8805 25.508C11.3462 26.2847 10.4996 26.955 11.8065 27.39C11.4274 26.8093 11.4798 26.0606 11.3372 25.3959C11.3209 25.2802 11.2668 25.1663 11.3552 25.0505C11.3986 24.8918 11.4094 24.6771 11.2 24.6528C9.74149 23.7865 10.0357 24.2066 8.61332 24.0068C8.26674 24.6435 9.00683 25.2111 8.8895 25.8347C8.7848 26.139 9.23246 26.126 9.22704 26.4247C9.32632 26.8878 9.27759 27.5394 8.76675 27.7168C8.51223 27.8773 8.7144 28.2134 8.93823 28.2918C8.48516 29.1358 8.83173 29.2702 9.52308 29.6921C9.52849 29.3673 9.53391 29.0816 9.66387 28.8053C10.6188 29.4606 9.19636 29.5708 11.0881 30.3643C10.8967 30.0376 10.9022 29.6809 10.8733 29.3523C11.052 29.3953 11.2253 29.4382 11.404 29.483C11.6097 30.3886 12.0827 30.467 12.9184 30.3867C12.6206 30.0805 12.5358 29.6809 12.3173 29.3617C12.57 29.4494 12.8191 29.2702 13.0358 29.4718ZM30.0793 24.425C29.8212 24.468 29.7616 24.5819 29.8085 24.8433C29.5215 25.4874 29.5125 26.2697 29.0197 26.8149C30.0811 26.505 29.8464 26.0886 30.1046 25.2559C30.0504 26.3874 30.1082 26.3724 30.5035 27.1454C29.6858 27.741 28.35 27.2425 27.9024 28.3964C28.0269 28.5439 28.1876 28.3926 28.3536 28.4337C28.2471 28.5663 28.2038 28.725 28.0341 28.8407C28.0703 28.7287 28.0937 28.6596 28.1172 28.5906C27.8103 28.4841 27.5594 29.2086 27.3302 29.442C29.5143 28.9883 27.0666 28.3254 31.3699 27.8064C32.1317 27.4348 30.6515 26.8541 32.1443 25.8777C32.2779 25.3437 32.3573 24.7929 32.6389 24.3093C32.7057 24.1506 32.5992 23.9284 32.4602 23.8182C31.805 24.2943 31.4945 23.5251 30.0793 24.425ZM8.03208 15.1399C8.04291 14.9906 8.05194 14.8468 8.06096 14.6862C7.89851 14.6563 7.74688 14.6302 7.5772 14.6003C7.77576 14.4454 8.01584 14.408 8.20898 14.4846C8.04291 15.2146 8.34075 15.7281 9.09527 15.7691C9.32452 15.4125 9.5321 15.3602 9.75593 15.6104C8.76133 15.504 9.49961 16.5925 10.0068 16.2228C10.1422 16.0212 10.5718 15.8438 10.4473 15.56C9.65846 14.9625 9.71261 15.8438 9.5664 14.3688C9.53391 14.3669 9.496 14.3632 9.46531 14.3613C9.39131 14.6414 9.12596 14.8561 8.90935 14.5929C8.83354 14.5051 8.76675 14.423 8.644 14.4006C9.18372 13.9543 9.82633 14.5985 9.78662 13.5491C10.3895 14.3296 10.4419 13.4614 11.0375 13.4502C11.0105 14.0682 10.8877 14.0215 10.3733 13.9861C10.5411 14.1186 11.1837 14.7814 10.8083 14.8431C10.6531 14.4286 10.3895 14.0253 9.94547 13.9431C9.58626 14.3128 9.76135 14.7292 9.81911 15.1567C10.1368 15.0447 10.4094 14.83 10.7469 14.858C10.8588 15.1997 10.3299 15.3864 10.6296 15.7262C11.144 15.8121 11.7018 15.8158 11.5375 15.0634C11.3697 14.9607 11.2036 14.8897 11.0303 15.0802C11.0393 14.787 11.3155 14.7366 11.5303 14.7926C12.0051 14.2699 11.8462 13.579 11.3372 13.1608C11.4726 12.9554 11.6152 12.8135 11.8588 12.7631C11.7758 12.9405 11.6043 13.004 11.5646 13.1664C11.6783 13.3102 11.783 13.4446 11.8877 13.5772C12.1621 13.4521 12.2325 13.0096 12.0376 12.5577C11.7018 12.6473 11.1079 12.9367 11.1079 12.9367C10.8191 12.821 10.9437 12.9703 10.9852 13.1141C10.0574 13.2915 9.14762 13.5435 8.41115 14.1784C8.27938 14.2792 8.21801 14.2194 8.17468 14.0253C8.08624 13.8852 8.04652 14.1261 8.03389 14.1858C8.03389 14.1858 7.47612 14.3259 7.23424 14.5406C7.40572 14.8337 7.6476 15.2949 8.03208 15.1399Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M11.6729 14.8505C11.7578 15.2837 11.6386 15.6459 11.3625 15.9876C11.7758 16.7512 12.4744 17.33 12.783 18.1553C13.4726 16.8241 12.7361 16.3759 11.7885 15.6478C12.3968 15.8718 13.0105 16.0884 13.348 16.6859C13.4202 15.5451 12.9311 14.9756 11.8607 14.8001C11.8625 14.7833 11.8661 14.7684 11.8697 14.7516C12.3173 14.731 12.7596 14.7329 13.1784 15.0148C13.0683 14.6601 12.7903 14.1373 12.3859 14.1821C12.5303 13.8684 12.5285 13.6593 12.3823 13.4707C12.3137 13.6911 12.1783 13.8273 11.9599 13.8348C12.0069 14.2306 11.8805 14.5593 11.6729 14.8505ZM8.26313 17.4514C8.38949 17.7707 8.58083 18.1404 8.89311 18.2729C8.73245 17.6437 9.14221 17.0967 9.33354 16.5272C9.33715 17.8379 8.61693 18.5493 10.3552 19.031C9.89131 18.2599 10.1982 17.3226 9.90575 16.5309C9.62597 16.3647 9.31188 16.3237 9.12235 16.0809C9.07 15.9671 8.97614 15.9241 8.87506 15.9017C8.54834 15.8289 8.24689 15.7169 8.08263 15.4349C7.84436 15.5133 7.69814 15.504 7.47973 15.4088C7.46168 15.6889 7.69092 15.9708 7.99418 15.8625C7.7523 16.2303 7.88587 16.5589 7.97613 16.9361C8.14941 16.5589 8.41476 16.3311 8.7126 16.1407C8.48516 16.5421 8.07902 16.9473 8.26313 17.4514ZM15.2434 30.8386C15.4798 30.6126 15.1585 30.4801 15.034 30.3064C12.9365 28.2862 12.1549 25.6629 12.339 22.7484C12.2885 22.7222 12.2253 22.6886 12.1206 22.6345C11.7686 25.7264 12.922 28.8445 15.2434 30.8386ZM33.9711 14.0421C33.7725 14.4398 34.3483 14.6041 34.3555 14.9812C34.2021 14.8561 34.0739 14.7497 33.9277 14.6302C33.7454 15.3658 34.5866 15.603 34.8447 16.1818C35.1823 15.1082 34.9999 14.4566 33.9711 14.0421ZM10.9256 17.2087C10.3697 17.2442 10.4509 16.5216 10.2884 16.1164C10.1873 16.2359 10.1043 16.333 10.0141 16.4394C10.1278 16.8409 10.2433 17.2423 10.3642 17.6699C10.4581 17.6008 10.5357 17.5448 10.617 17.4831C11.005 17.7669 11.3606 17.5728 11.4888 17.1303C11.6043 17.1583 11.709 17.2105 11.7903 17.1247C11.6097 16.7363 11.4347 16.361 11.256 15.9783C11.144 16.0025 11.0393 15.8401 10.9076 15.9689C11.0321 16.3274 11.4906 17.0425 10.9256 17.2087ZM33.8646 12.2422C33.8627 12.259 33.8591 12.2758 33.8555 12.2907C33.6804 12.2814 33.5071 12.2721 33.3248 12.2608C33.5198 12.9125 34.249 12.5969 34.7093 12.8938C34.444 12.371 34.2544 11.8613 33.6425 11.7623C33.7075 11.4524 33.6263 11.1593 33.4404 11.0435C33.444 11.3161 33.3339 11.514 33.0938 11.6167C32.9765 12.1563 33.5198 12.1283 33.8646 12.2422ZM33.7057 15.9876C33.6913 15.9895 33.6768 15.9932 33.6624 15.9951C33.5378 16.5701 33.9241 17.0724 34.1642 17.5634C34.583 16.7923 34.5667 15.9166 33.8952 15.3061C33.6913 15.715 33.9765 16.1052 34.0775 16.4936C34.0631 16.4992 34.0505 16.5048 34.036 16.5104C33.9259 16.3367 33.8158 16.1612 33.7057 15.9876ZM33.5523 12.7482C33.7905 13.3382 34.175 13.1963 34.4241 13.5828C34.2147 13.5118 34.0324 13.4502 33.8483 13.3867C33.8375 14.0159 34.601 14.0813 35.0252 14.3221C34.9566 13.3064 34.4801 12.9218 33.5523 12.7482ZM31.3483 11.6839C31.61 11.6839 31.9855 11.8557 32.2021 11.6988C32.2075 10.8418 31.1966 10.9557 30.6208 10.9371C30.7941 11.2582 31.0107 11.5756 31.3483 11.6839ZM28.4746 23.9041C28.258 23.8855 28.0558 23.8686 27.8212 23.85C27.8302 23.9695 27.8374 24.0591 27.8428 24.1562C27.9746 24.1898 28.0865 24.2178 28.2056 24.2477C28.2417 24.9553 27.8645 24.9665 27.3572 24.6715C27.2056 25.5677 28.6009 25.4762 28.4746 23.9041ZM27.9908 21.0456C27.2219 22.0202 27.2146 22.1621 28.3879 22.5822C28.3771 22.4702 28.3699 22.3992 28.3609 22.3171C28.1334 22.2461 27.906 22.1584 27.702 22.0146C27.8518 21.8242 27.989 21.6487 28.1316 21.4657C28.0901 21.3406 28.0468 21.2118 27.9908 21.0456ZM24.4041 17.4925C24.5323 17.4831 24.646 17.4738 24.7579 17.4645C24.8807 16.9884 24.6207 16.9361 24.3067 16.6803C24.1785 17.0742 23.841 17.2666 23.6496 17.6008C23.9601 17.5784 24.137 17.4757 24.3139 17.2255C24.3464 17.3207 24.3753 17.4066 24.4041 17.4925ZM26.1749 19.6527C26.2868 19.339 26.8663 18.5679 26.554 18.3252C26.4096 18.413 26.1081 18.3756 26.1352 18.6109C26.1334 18.9544 26.1352 19.2961 26.1352 19.6397C26.1496 19.6434 26.1623 19.6471 26.1749 19.6527ZM31.9403 10.8773C31.953 10.8587 31.9656 10.8418 31.9764 10.825C31.6515 10.3433 31.5107 10.2444 30.9367 10.2425C30.9457 10.825 31.5288 10.825 31.9403 10.8773ZM30.471 9.43592C30.4493 9.84668 30.7815 10.0838 31.3338 10.0521C31.1912 9.63756 30.906 9.41164 30.471 9.43592ZM29.1786 13.7097C28.7273 13.4913 28.3609 13.7676 27.9096 13.6649C28.0378 14.3147 28.7851 13.8423 29.1786 13.7097ZM30.0342 8.78056C30.1515 9.19319 30.3067 9.28281 30.7201 9.2212C30.5883 8.88138 30.3771 8.74509 30.0342 8.78056ZM30.2562 8.56584C30.0974 8.21296 30.0143 8.16815 29.6768 8.20549C29.8158 8.55277 30.0161 8.68347 30.2562 8.56584ZM28.1984 20.0448C28.3049 20.2334 28.4114 20.422 28.5143 20.6068C28.9295 20.6068 28.5775 20.2483 28.4818 20.0952C28.4277 20.0355 28.3121 20.0355 28.2255 20.0075C28.2165 20.0205 28.2074 20.0317 28.1984 20.0448ZM27.0053 20.5396C27.2164 20.4145 27.4349 20.3155 27.6244 20.1587C27.5811 20.0934 27.5468 20.0448 27.498 19.972C27.3175 20.1568 26.8897 20.2166 27.0053 20.5396ZM29.7544 7.99264C29.814 7.76859 29.5053 7.47172 29.2833 7.56134C29.314 7.80967 29.5649 8.02812 29.7544 7.99264ZM8.97795 11.8277C9.09167 11.7175 8.92018 11.5364 8.80827 11.6503C8.69274 11.7605 8.86603 11.9434 8.97795 11.8277ZM9.12957 12.1563C9.24329 12.0461 9.07 11.865 8.95989 11.977C8.84437 12.0891 9.01585 12.2702 9.12957 12.1563Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M8.33895 10.6794L8.33714 10.6813L8.06458 10.7018L8.20718 11.0734L8.39852 10.84C8.41115 10.8474 8.42198 10.853 8.43462 10.8568C8.43462 10.8587 8.4635 11.3497 8.4635 11.3516C8.51224 11.7866 9.15123 11.5196 8.89672 11.1705L8.58805 10.7933C8.59527 10.7821 8.60068 10.769 8.60429 10.756L8.89852 10.7877L8.75592 10.4161L8.54292 10.5973C8.53209 10.5898 8.52126 10.5842 8.50863 10.5805L8.48335 10.222C8.39671 10.2574 8.21981 10.3303 8.13317 10.3657L8.35339 10.6439C8.34617 10.6551 8.34075 10.6682 8.33895 10.6794ZM7.55554 12.6193C7.73244 12.6249 7.73605 12.3374 7.55915 12.3374C7.38406 12.3337 7.37865 12.6193 7.55554 12.6193ZM7.52666 12.9872C7.70356 12.9909 7.70717 12.7052 7.53027 12.7052C7.35518 12.6996 7.35157 12.9872 7.52666 12.9872ZM8.09526 11.7306C8.27216 11.7362 8.27577 11.4487 8.09887 11.4487C7.92378 11.4449 7.91836 11.7306 8.09526 11.7306ZM7.66746 12.2851C7.84616 12.2907 7.84977 12.0032 7.67107 12.0032C7.49778 11.9995 7.49237 12.2851 7.66746 12.2851ZM9.3191 12.6361C9.31008 12.4942 9.40936 12.2179 9.40936 12.2179C9.27217 12.2739 8.99058 12.3897 8.85159 12.4476C8.85159 12.4476 9.10791 12.5783 9.19455 12.6865C9.07722 12.7314 8.96351 12.75 8.80105 12.6735L9.01766 13.1197C9.06459 12.9218 9.16387 12.806 9.23788 12.7911C9.47254 13.1627 8.88769 13.5734 8.63679 13.2541C8.56278 13.1197 8.64942 12.9759 8.79924 13.088C8.77758 12.8116 8.54473 12.8116 8.47433 13.017C8.48155 12.7332 8.41296 12.5615 8.12414 12.4774C8.05014 12.7612 8.14219 12.9311 8.41476 13.0525C8.25952 13.032 8.09165 13.1907 8.30285 13.3904C8.30465 13.2112 8.44906 13.1907 8.52668 13.312C8.65123 13.6425 8.27577 13.7695 7.9671 13.4334C8.0357 13.4072 8.1097 13.4185 8.20718 13.4427L7.91295 13.0581C7.9292 13.1944 7.91837 13.2915 7.89309 13.3512C7.82992 13.2766 7.80825 13.2112 7.78118 13.0637L7.55735 13.2672C7.77215 13.4054 8.01223 13.6238 8.30646 14.0589C8.69635 13.663 10.2704 12.9815 10.8769 13.0002C10.8029 12.4756 10.8318 12.147 10.8949 11.893L10.5953 11.9042C10.6747 12.0312 10.7036 12.0928 10.709 12.1936C10.6494 12.1675 10.5772 12.104 10.4978 11.9957L10.5393 12.483C10.5953 12.3953 10.6404 12.3355 10.7072 12.3075C10.7072 12.7687 10.3498 12.9442 10.2198 12.6156C10.1982 12.4718 10.3155 12.3841 10.4346 12.5129C10.4563 12.2179 10.2289 12.2216 10.1296 12.3486C10.2469 12.0648 10.2018 11.8762 9.95991 11.7231C9.80648 11.9882 9.86965 12.1619 10.0628 12.3635C9.87507 12.2646 9.70539 12.4289 9.87326 12.6455C9.90937 12.4588 10.0682 12.5017 10.1025 12.6511C10.1314 13.0618 9.43463 13.1776 9.35701 12.7407C9.42199 12.6996 9.57182 12.7146 9.73608 12.8247L9.59709 12.3467C9.5303 12.5166 9.43463 12.5839 9.3191 12.6361ZM16.6892 27.7597C16.9004 27.8867 17.1351 28.0267 17.3499 28.1518C16.8246 28.8127 17.7669 29.0984 17.7145 28.4543C18.0665 28.6111 19.4528 29.0517 18.8968 28.1947C17.0791 28.2563 16.1531 26.2828 17.1586 24.7761C17.7705 25.0636 19.9185 23.9825 19.7398 25.0823C19.8517 25.2055 19.8842 25.2167 20.1387 25.2148C20.7615 23.7379 18.6207 24.1786 17.8517 24.3522C17.1676 24.5613 16.5376 23.5251 15.9329 24.0927C15.691 24.313 15.8481 24.8041 16.1748 24.819C16.4654 24.8283 16.5466 24.4157 16.2903 24.2869C16.8535 24.0908 16.5827 25.0281 16.377 25.2671C15.7307 24.9217 15.6242 25.999 16.2632 25.7171C16.2921 25.9094 16.3011 26.0998 16.256 26.2847C15.5575 26.1297 15.7434 27.166 16.2668 26.7496C16.4185 26.8971 16.4889 27.1286 16.5051 27.3489C15.8047 27.4516 16.3643 28.3814 16.6892 27.7597Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M18.72 28.8874C18.6911 28.8762 18.6604 28.8669 18.6225 28.8538C18.5737 28.9901 18.4979 29.2384 18.6153 29.3243L19.2037 29.5857L19.96 29.0051L20.164 25.8646L19.942 25.8833C19.8824 25.8907 19.4691 29.5092 19.2543 29.2963C19.2976 29.0592 19.8012 25.8833 19.8012 25.8833C19.8012 25.8833 19.6514 25.8608 19.5774 25.8515C19.5647 25.9243 19.5485 26.0177 19.5485 26.0177L18.7145 24.8844L18.6044 24.9385L19.4997 26.154L19.442 26.3687C19.3589 26.3146 18.4961 25.0767 18.4113 24.9609L18.2344 24.946L19.3969 26.5143L19.3355 26.7253L18.0322 24.9534L17.8661 24.9516L19.2759 26.8747L19.2019 27.151L17.6531 24.9721L17.4474 24.9777L19.1622 27.3172L19.099 27.5338L17.2073 24.9777L17.1748 25.1738C17.1748 25.1738 18.9366 27.5693 19.0449 27.7261C18.9528 28.0211 19.0232 28.0454 19.1459 28.29C19.2145 28.5626 19.0322 28.9864 18.72 28.8874Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M18.8968 27.8904L17.0882 25.409C17.0882 25.409 17.0521 25.5248 17.0376 25.577C17.173 25.76 18.7723 27.9557 18.7723 27.9557L18.8968 27.8904ZM17.0827 26.2455C17.5015 26.7925 17.9113 27.3527 18.3192 27.9072C18.3788 27.9147 18.4925 27.9389 18.4925 27.9389L17.016 25.9131C17.016 25.9131 16.9907 26.1185 17.0827 26.2455ZM20.238 25.3231C20.0377 25.3063 19.8247 25.2652 19.6297 25.2447C19.2488 25.5882 19.6766 25.7843 19.9618 25.7582C20.2055 25.8235 20.5322 25.4893 20.238 25.3231ZM20.1766 34.1807C20.1171 34.4607 20.5449 34.5504 20.5954 34.2684C20.655 33.9884 20.229 33.8987 20.1766 34.1807ZM20.5611 32.4965C20.6351 32.1493 20.1062 32.0372 20.0413 32.3864C19.9673 32.7337 20.4979 32.8457 20.5611 32.4965ZM18.7542 31.5705C18.8283 31.2232 18.2994 31.1111 18.2362 31.4603C18.1622 31.8076 18.6911 31.9196 18.7542 31.5705ZM21.9131 34.6306C21.6117 34.6624 21.4564 34.8715 21.2976 35.0881C21.1568 34.9966 20.9709 34.907 20.7976 34.907C20.7037 34.907 20.6135 34.9331 20.5359 34.9985C21.0882 35.2244 20.8915 36.0851 20.3553 36.0889C19.8174 36.0851 19.6207 35.2244 20.173 34.9985C20.0954 34.9331 20.0052 34.907 19.9113 34.907C19.738 34.907 19.5521 34.9966 19.4113 35.0881C19.2524 34.8715 19.0972 34.6624 18.7958 34.6306C18.96 36.2102 19.6586 37 20.3553 37C21.0521 37 21.7489 36.2102 21.9131 34.6306ZM21.6622 34.9705C21.4456 36.2233 20.868 36.7909 20.3553 36.7909C19.8409 36.7909 19.2615 36.2233 19.0485 34.9705C19.1135 35.0339 19.1766 35.1161 19.2488 35.215L19.3626 35.3682L19.5196 35.2673C19.5864 35.2225 19.6532 35.1889 19.7127 35.1628C19.6441 35.3084 19.6207 35.4802 19.6532 35.6576C19.7218 36.0328 20.0088 36.298 20.3553 36.2998C20.7001 36.298 20.9871 36.0328 21.0557 35.6576C21.0882 35.4802 21.0647 35.3084 20.9962 35.1628C21.0557 35.1889 21.1225 35.2225 21.1893 35.2673L21.3463 35.3682L21.4601 35.215C21.5323 35.1161 21.5954 35.0339 21.6622 34.9705ZM16.9293 30.4875C17.1604 30.2019 16.3499 29.8266 16.2325 29.666C16.1369 29.6063 16.0159 29.6212 15.951 29.7071C15.7199 29.9797 16.5178 30.3624 16.6261 30.5137C16.7235 30.5921 16.8607 30.5809 16.9293 30.4875Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M16.8264 31.0999C17.7199 31.1037 17.6044 29.6361 16.7235 29.7911C17.1315 30.0208 17.4853 30.6238 16.8499 30.8012C16.6116 30.8516 16.3661 30.5846 16.1892 30.4521C16.1965 30.8105 16.4798 31.0999 16.8264 31.0999Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M15.5556 31.3427C15.7524 31.7292 16.9022 32.7822 17.2145 32.2856C16.6531 31.9906 15.7019 31.2661 16.0665 30.3438C15.2416 29.821 15.9708 28.9845 16.6134 29.694C17.2994 29.2552 18.0593 29.5708 18.7344 30.0544C18.9781 29.5129 17.7994 29.1376 17.525 28.977C17.1784 28.8557 16.0845 29.1133 15.7181 29.1302C15.469 29.1619 15.2903 29.3934 15.312 29.6511C15.3679 29.9274 15.3589 31.1224 15.5556 31.3427ZM25.6894 10.6234L26.1984 10.7933C25.3933 9.04009 23.9222 7.72565 22.1496 7.25327C22.1045 7.37463 22.0648 7.50533 22.0305 7.64536C23.5864 8.04866 24.9005 9.14651 25.6894 10.6234ZM15.191 10.7933L15.7001 10.6253C16.4889 9.14651 17.803 8.04866 19.3608 7.64536C19.3247 7.50533 19.2849 7.37463 19.2416 7.25327C17.469 7.72378 15.9961 9.04009 15.191 10.7933ZM24.5251 7.95717C24.8897 7.96277 24.8897 7.37276 24.5251 7.37836C24.1623 7.37276 24.1623 7.96277 24.5251 7.95717ZM23.2399 7.20099C23.6045 7.20472 23.6045 6.61472 23.2399 6.62032C22.877 6.61472 22.877 7.20659 23.2399 7.20099ZM22.5431 6.93959C22.9077 6.9452 22.9077 6.35332 22.5431 6.35892C22.1803 6.35332 22.1803 6.9452 22.5431 6.93959ZM23.9023 7.5408C24.267 7.5464 24.267 6.9564 23.9023 6.962C23.5395 6.9564 23.5395 7.5464 23.9023 7.5408ZM25.1009 8.43888C25.4637 8.44448 25.4637 7.85448 25.1009 7.86008C24.7381 7.85448 24.7381 8.44635 25.1009 8.43888ZM26.554 10.6178C26.5486 10.9949 27.1208 10.9949 27.1154 10.6178C27.1208 10.2425 26.5486 10.2425 26.554 10.6178ZM26.2164 9.9363C26.211 10.3135 26.7814 10.3135 26.776 9.9363C26.7814 9.56101 26.2092 9.56101 26.2164 9.9363ZM25.6244 8.98221C25.9872 8.98781 25.9872 8.3978 25.6244 8.40341C25.2597 8.3978 25.2597 8.98781 25.6244 8.98221ZM25.8103 9.29215C25.8049 9.66744 26.3753 9.66744 26.3699 9.29215C26.3753 8.91499 25.8049 8.91499 25.8103 9.29215ZM16.8643 7.95717C17.2271 7.96277 17.2271 7.37276 16.8643 7.37836C16.5015 7.37276 16.5015 7.96277 16.8643 7.95717ZM16.2885 8.43888C16.6531 8.44448 16.6531 7.85448 16.2885 7.86008C15.9257 7.85448 15.9257 8.44635 16.2885 8.43888ZM14.5556 10.9072C14.9203 10.9128 14.9203 10.3228 14.5556 10.3284C14.1928 10.3228 14.1928 10.9128 14.5556 10.9072ZM17.4871 7.5408C17.8517 7.5464 17.8517 6.9564 17.4871 6.962C17.1243 6.9564 17.1243 7.5464 17.4871 7.5408ZM15.2993 9.58155C15.664 9.58715 15.664 8.99528 15.2993 9.00088C14.9365 8.99528 14.9365 9.58715 15.2993 9.58155ZM14.895 10.2257C15.2578 10.2313 15.2578 9.6413 14.895 9.6469C14.5304 9.6413 14.5304 10.2332 14.895 10.2257ZM18.8463 6.93959C19.2091 6.94333 19.2091 6.35332 18.8463 6.35892C18.4835 6.35332 18.4835 6.9452 18.8463 6.93959ZM15.7668 8.98221C16.1297 8.98781 16.1297 8.3978 15.7668 8.40341C15.4022 8.3978 15.4022 8.98781 15.7668 8.98221ZM18.1495 7.20099C18.5142 7.20472 18.5142 6.61472 18.1495 6.62032C17.7867 6.61472 17.7867 7.20659 18.1495 7.20099ZM21.1767 9.89336H21.5503C21.5521 8.6704 21.7218 7.61175 22.0305 6.91159C22.1352 6.68567 21.7904 6.52136 21.6911 6.75102C21.2453 7.76112 21.1785 9.15025 21.1767 9.89336ZM19.8391 9.89336H20.2127C20.2127 9.15025 20.1442 7.76112 19.7001 6.75102C19.6008 6.52136 19.2561 6.68567 19.3589 6.91159C19.6676 7.61175 19.8391 8.6704 19.8391 9.89336ZM20.6947 9.88775C21.0882 9.89336 21.0882 9.25481 20.6947 9.26041C20.3012 9.25481 20.3012 9.89336 20.6947 9.88775ZM20.6947 9.1017C21.0882 9.1073 21.0882 8.46689 20.6947 8.47249C20.3012 8.46689 20.3012 9.1073 20.6947 9.1017ZM20.6947 8.31378C21.0882 8.31939 21.0882 7.68084 20.6947 7.68644C20.3012 7.68084 20.3012 8.31939 20.6947 8.31378ZM20.4799 7.5464C20.6081 7.47545 20.7813 7.47545 20.9095 7.5464C21.3445 6.85184 20.0449 6.85371 20.4799 7.5464Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M20.9366 6.88545C21.2741 6.23383 20.1153 6.2357 20.4528 6.88545C20.5954 6.79583 20.7958 6.79583 20.9366 6.88545Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M20.5124 4.24163C20.4619 4.64305 20.2597 4.95299 20.007 5.00154V5.10423H20.4998C20.4763 5.12103 20.4546 5.14344 20.4384 5.16771C19.5593 5.36936 19.4691 6.75475 20.3084 7.08149C19.9817 6.75475 20.2326 6.12554 20.6947 6.14234C21.1568 6.12554 21.4095 6.75475 21.081 7.08149C21.9222 6.75475 21.8301 5.36936 20.9528 5.16771C20.9348 5.14344 20.9131 5.12103 20.8915 5.10423H21.3842V5.00154C21.1315 4.95299 20.9276 4.64305 20.8788 4.24163C21.2669 4.29204 21.5666 4.50302 21.6135 4.76442H21.7128V3.33981H21.6135C21.5666 3.60121 21.2669 3.81219 20.8788 3.8626C20.9276 3.46118 21.1315 3.14937 21.3842 3.10269V3H20.007V3.10269C20.2597 3.14937 20.4619 3.46118 20.5124 3.8626C20.1243 3.81219 19.8229 3.60121 19.7759 3.33981H19.6784V4.76442H19.7759C19.8229 4.50302 20.1243 4.29204 20.5124 4.24163ZM32.666 26.5293L32.6678 26.5311C32.6371 26.4751 32.6064 26.4191 32.5811 26.3668C32.5884 26.4322 32.6172 26.4919 32.666 26.5293ZM32.5956 27.6234C32.5541 27.6738 32.2779 28.4879 32.1858 28.4561C32.1479 28.3908 32.0613 28.3478 31.9891 28.3702C31.9458 28.3497 31.9313 28.2881 31.953 28.2358C32.0053 28.1817 32.2616 27.3489 32.3826 27.4049C32.4151 27.4834 32.5089 27.5338 32.5866 27.5114C32.6082 27.5412 32.6136 27.5842 32.5956 27.6234ZM31.8447 30.4651C31.8717 30.2597 31.6136 30.1459 31.5107 30.3214C31.5378 30.2429 31.4385 29.4625 31.5793 29.4625C31.6389 29.5073 31.7165 29.5148 31.7797 29.4681C31.8212 29.4756 31.8555 29.5204 31.8555 29.5727L31.8573 30.4166C31.8573 30.4353 31.8519 30.4502 31.8447 30.4651ZM32.2508 31.9345C32.0107 33.3685 30.2291 31.9476 31.5035 31.3427C31.5631 31.4808 31.7652 31.4864 31.8248 31.3464C32.0703 31.4211 32.2508 31.6563 32.2508 31.9345ZM32.4349 27.1323C32.045 26.8803 31.8302 27.995 31.684 28.1873C31.6154 28.3497 31.6768 28.5252 31.8194 28.5775L31.5342 29.1936C31.379 29.1675 31.2454 29.2889 31.2454 29.4756C31.3031 29.7146 31.0721 30.7583 31.4818 30.7695V31.0589C30.4927 31.2418 30.6407 32.8532 31.6569 32.8289C32.6678 32.855 32.8248 31.2568 31.8447 31.0626V30.7844C31.9999 30.8105 32.1335 30.6892 32.1335 30.5025C32.0793 30.271 32.2905 29.2646 31.9295 29.2123L32.1461 28.7437C32.518 28.9509 32.7346 27.8643 32.8754 27.6794C32.9404 27.5263 32.8898 27.3545 32.7617 27.2985L32.9259 26.9419C32.8808 26.8803 32.7851 26.7328 32.6931 26.5759L32.4349 27.1323ZM12.6152 25.3287L12.7018 25.676L14.247 25.4781L14.173 25.1625C14.0935 25.1457 13.1296 25.3287 13.1296 25.3287C13.1296 25.3287 14.0448 24.2253 14.0231 24.0927L12.4636 24.2757L12.496 24.5539C12.5719 24.5427 13.413 24.4213 13.413 24.4213C13.413 24.4213 12.6513 25.3119 12.6152 25.3287ZM13.2524 26.5517C13.5809 25.9374 14.6712 26.3034 14.2199 27.0035C13.8805 27.5991 12.8101 27.263 13.2524 26.5517ZM13.1657 27.3788C13.913 28.1182 15.0881 26.9326 14.3138 26.1727C13.5665 25.4258 12.3733 26.617 13.1657 27.3788ZM14.2036 29.1227L14.4654 29.4961C14.7416 29.1432 15.312 28.7175 15.7217 28.5551L15.4618 28.1817C15.3607 28.3534 15.1387 28.5215 14.9654 28.6447L14.5647 28.0734C14.7325 27.9427 14.9564 27.7765 15.1459 27.7298L14.8842 27.3564C14.608 27.7093 14.0358 28.1369 13.626 28.2993L13.8878 28.6708C13.987 28.5009 14.2091 28.3348 14.3823 28.2097L14.7813 28.7829C14.6134 28.9136 14.3914 29.0779 14.2036 29.1227ZM14.0556 23.5475L14.0773 23.2058C13.635 23.2917 12.9238 23.2917 12.4852 23.2021L12.4636 23.5438C12.904 23.4579 13.6152 23.4579 14.0556 23.5475ZM25.2724 30.4539C26.2182 30.0245 26.007 29.0536 24.9402 29.498C24.4926 29.3673 25.0576 28.8949 25.3554 28.9995L25.3608 28.992L25.137 28.7175C24.8013 28.8688 24.267 29.3374 24.5504 29.7332C24.7489 29.9946 25.1478 29.7164 25.4078 29.7202C25.841 29.8004 25.3753 30.2653 25.1081 30.2392L25.1027 30.2448M27.8645 27.0577L28.1316 26.1148C27.9962 26.126 26.7688 25.7563 26.6605 25.6723L26.406 26.5666L26.6605 26.7925L26.6659 26.7888C26.646 26.5834 26.6731 26.3519 26.7471 26.0942L27.2128 26.2343C27.1659 26.3743 27.0829 26.6936 27.0197 26.7776L27.2526 26.8131L27.4006 26.2921L27.8464 26.4247C27.7941 26.5984 27.7201 26.7347 27.6262 26.8317L27.8645 27.0577ZM27.2435 28.3105L27.3879 28.0192L26.1767 27.1809L26.045 27.4423C26.0901 27.5039 26.8789 27.9856 26.8789 27.9856C26.8789 27.9856 25.5774 28.163 25.5161 28.2657L26.7273 29.1245L26.8681 28.9154C26.8085 28.8744 26.1424 28.4263 26.1424 28.4263C26.1424 28.4263 27.2092 28.2993 27.2435 28.3105ZM23.8987 31.3819L24.7417 30.8778C24.6352 30.7937 23.9781 29.6828 23.9547 29.5484L23.155 30.0264L23.1893 30.3662L23.1965 30.368C23.3229 30.2037 23.4998 30.0525 23.729 29.9162L23.9781 30.3363C23.85 30.4073 23.5702 30.5828 23.4655 30.5996L23.6135 30.7863L24.081 30.5062L24.3193 30.9095C24.1605 30.9991 24.0142 31.0477 23.8771 31.0551L23.8987 31.3819ZM14.4979 20.366C14.247 20.1606 13.9221 20.5284 13.6693 20.5881C13.2307 20.6143 13.5773 20.0485 13.8426 20.0093L13.8444 20.0019L13.6332 19.8413C13.2361 20.0504 12.9347 20.941 13.5755 20.9597C13.7127 20.9653 14.0592 20.717 14.173 20.6908C14.4762 20.6311 14.3805 21.0493 14.1982 21.1501C14.2885 21.1445 14.3823 21.1333 14.4672 21.1557C14.6351 20.913 14.7434 20.5583 14.4979 20.366ZM14.8102 19.888C14.108 19.8413 13.96 18.5847 14.8102 18.7733V18.469C13.7091 18.4018 13.7253 20.2091 14.8102 20.1718V19.888ZM16.5557 17.6643C16.5593 17.6624 17.0376 17.6643 17.0412 17.6624C16.8589 17.3618 16.7109 17.1153 16.7109 17.1153C16.8788 17.0145 17.2362 16.8651 17.3968 16.8763L17.0142 16.5757L15.8408 17.3002L15.9762 17.7669L15.9816 17.7688C16.0773 17.5765 16.2199 17.4215 16.377 17.33C16.4113 17.3973 16.4762 17.5167 16.5557 17.6643ZM19.0864 17.2087C19.6748 16.9734 19.164 16.0343 18.6441 16.2546C18.0629 16.4842 18.5647 17.4327 19.0864 17.2087ZM19.9817 17.4514L19.9835 17.4589C19.7506 17.6549 19.4528 17.5746 19.2001 17.4365C18.4708 17.8584 17.682 16.867 18.2687 16.2284C18.8842 15.4685 20.1081 16.3311 19.5178 17.1695C19.7091 17.3226 19.8644 17.4159 19.9817 17.4514ZM20.2019 16.7792C20.1965 16.5197 20.2326 16.0604 20.1243 15.8364H20.646C20.5611 16.0791 20.4113 17.19 20.8554 17.134C21.0304 17.1377 21.2055 17.0108 21.2019 16.8222C21.1947 16.5571 21.2362 16.066 21.1243 15.8364H21.646C21.525 16.2546 21.525 16.9884 21.646 17.4066H21.2037C21.2146 17.3748 21.2182 17.3226 21.2182 17.2516C20.7669 17.5821 20.1586 17.4178 20.2019 16.7792ZM22.4095 17.556C22.5016 17.1676 22.6334 16.5085 22.8409 16.1818L22.4366 16.0417C22.4402 16.4581 22.2254 17.106 22.09 17.5018C22.2453 17.5224 22.2453 17.5224 22.4095 17.556ZM21.4691 20.8514H21.4709C21.4691 20.8533 21.4709 20.8925 21.4709 20.8943C21.4763 20.8141 21.6009 20.8719 21.5395 20.928L21.5593 20.9466C21.6839 20.9616 21.7019 20.7674 21.5756 20.7599V20.7562L21.7272 20.6871V20.6404L21.5756 20.5713V20.5676C21.7019 20.5601 21.6839 20.366 21.5593 20.3809L21.5395 20.4014C21.6009 20.4537 21.4763 20.5135 21.4709 20.4332C21.4709 20.4388 21.4691 20.4761 21.4709 20.4817H21.4691V18.792H21.599V18.665H23.007C23.0846 18.6781 23.0178 18.7901 22.9691 18.7322L22.9492 18.7509C22.933 18.8779 23.1442 18.8872 23.1406 18.7584L23.2164 18.9152H23.2651L23.3355 18.7602C23.3355 18.8872 23.5431 18.8779 23.5305 18.7509L23.5088 18.7322C23.4601 18.7901 23.3933 18.68 23.4709 18.665H24.8807V18.792H25.0106C24.9962 18.7621 25.0612 20.8645 24.9421 20.4014L24.9222 20.3809C24.7976 20.366 24.7796 20.5601 24.906 20.5676V20.5713L24.7543 20.6404V20.6871L24.906 20.7562V20.7599C24.7796 20.7674 24.7976 20.9616 24.9222 20.9466L24.9421 20.928C25.0612 20.45 24.9962 22.599 25.0106 22.5393H24.8807V22.6644H23.4745C23.3933 22.6532 23.4565 22.5393 23.5106 22.5971L23.5305 22.5785C23.5449 22.4534 23.3409 22.4403 23.3373 22.5654H23.3337L23.2633 22.4142H23.2146L23.1442 22.5654H23.1406C23.1352 22.4403 22.9366 22.4534 22.9492 22.5785L22.9691 22.5971C23.0215 22.5393 23.0864 22.6532 23.0052 22.6644H21.599V22.5393H21.4691V20.8514ZM25.1406 22.7913V18.5381H21.3409V22.7913H25.1406Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M25.3031 18.3756V22.9556H21.1767V18.3756H25.3031ZM25.7002 22.9538C25.702 22.866 25.6081 22.8007 25.5251 22.8305V22.8492C25.3753 23.5512 25.4493 20.6647 25.4348 20.7711L25.572 20.829V20.4929L25.4348 20.5527L25.4366 18.4242C25.4547 18.3177 25.6154 18.4092 25.5269 18.4783V18.497C25.7164 18.5605 25.7724 18.2468 25.5702 18.2431L25.6966 18.0171L25.6659 17.9854C25.6641 17.9873 25.4403 18.1161 25.4366 18.1142C25.4348 17.9182 25.1153 17.9667 25.1767 18.1553H25.1966C25.2634 18.0713 25.3608 18.2225 25.2525 18.2449H23.3536L23.4132 18.1124H23.0684L23.128 18.2449H21.2326C21.1171 18.2281 21.2146 18.0694 21.2832 18.1553H21.303C21.3662 17.9667 21.0449 17.9182 21.0431 18.1142C21.0413 18.1161 20.8156 17.9854 20.8138 17.9854L20.7832 18.0171L20.9095 18.2431C20.7073 18.2468 20.7633 18.5605 20.9528 18.497V18.4783C21.1008 17.7781 21.0305 20.6498 21.0431 20.5508L20.9077 20.4929V20.829L21.0431 20.773C21.0305 20.7226 21.1008 23.5344 20.9528 22.8492V22.8305C20.7633 22.7689 20.7073 23.0826 20.9095 23.0845L20.7832 23.3123L20.8138 23.3421C20.8156 23.3403 21.0413 23.2114 21.0431 23.2152C21.0449 23.4093 21.3662 23.3608 21.303 23.1722H21.2832C21.2543 23.2189 21.1767 23.1946 21.1785 23.1386C21.1785 23.1106 21.2001 23.0882 21.229 23.0826H23.128L23.0684 23.217H23.4132L23.3536 23.0826H25.2489C25.2778 23.0882 25.2995 23.1106 25.2995 23.1386C25.3013 23.1946 25.2236 23.2189 25.1948 23.1722H25.1749C25.1135 23.3608 25.433 23.4075 25.4348 23.2152C25.4385 23.2114 25.6623 23.3421 25.6641 23.3421L25.6948 23.3123L25.5684 23.0845C25.6406 23.0845 25.7002 23.0266 25.7002 22.9538ZM7.75591 12.8415L7.84797 12.7631C7.88227 12.371 8.06097 12.0219 8.35159 11.8053C8.33173 11.7773 8.31187 11.753 8.29202 11.7287C7.96349 11.9752 7.77035 12.3859 7.75591 12.8415ZM8.64762 12.2889L8.73426 12.259C8.6765 12.0909 8.55014 11.7829 8.36603 11.5924C8.32451 11.5476 8.25592 11.613 8.29924 11.6559C8.4274 11.7885 8.55014 12.0125 8.64762 12.2889ZM7.85158 11.9789C8.02848 11.9845 8.03209 11.6988 7.85519 11.6988C7.6801 11.6932 7.67468 11.9808 7.85158 11.9789ZM10.4419 11.374C10.3209 11.5084 10.1206 11.3105 10.2451 11.1798C10.3642 11.0472 10.5646 11.2433 10.4419 11.374ZM10.7144 11.6092C10.5935 11.7437 10.3931 11.5457 10.5177 11.415C10.6368 11.2825 10.839 11.4804 10.7144 11.6092ZM9.45088 11.1499C9.32994 11.2844 9.12957 11.0846 9.25412 10.9557C9.37326 10.8232 9.57362 11.0192 9.45088 11.1499ZM10.1314 11.2227C10.0105 11.3572 9.81009 11.1593 9.93464 11.0286C10.0538 10.896 10.2541 11.0939 10.1314 11.2227ZM10.4545 11.6764L10.3354 11.6895C10.0411 11.4412 9.67471 11.3292 9.32272 11.3926C9.3173 11.3572 9.31369 11.3254 9.31008 11.2937C9.71081 11.2246 10.1296 11.3702 10.4545 11.6764ZM9.42741 11.949L9.34438 11.992C9.27037 11.8314 9.14401 11.5233 9.14221 11.2526C9.1404 11.191 9.23246 11.1854 9.23246 11.247C9.23427 11.4356 9.30286 11.6839 9.42741 11.949ZM9.79204 11.1443C9.6711 11.2788 9.47073 11.0808 9.59528 10.9501C9.71442 10.8176 9.91659 11.0155 9.79204 11.1443ZM24.4222 26.2548C24.8175 26.2473 25.7309 25.7992 25.0666 25.4277C24.6948 25.3642 24.3247 25.5509 23.9673 25.6368C22.5269 26.2305 23.3716 25.5061 22.4763 25.5845C22.7778 26.3743 23.5395 25.9673 24.1117 25.7824C24.1298 25.8702 24.0233 25.8907 24.0377 25.9766C24.2291 25.9355 24.4132 25.8963 24.5937 25.859C24.6731 25.4706 25.3572 25.4669 25.0431 25.8552C24.2543 26.21 23.3247 26.1447 22.4998 26.3874C21.9474 27.8811 20.9871 26.8654 20.998 27.2929C20.7814 27.3135 20.785 27.5282 21.007 27.5095C21.0106 27.9464 22.0738 27.4423 22.2705 27.3079C22.3193 27.2033 22.3626 27.1062 22.4077 27.0073C22.7308 27.1697 22.9583 26.6898 23.2381 26.604C23.5178 26.5461 23.8825 26.2623 24.1189 26.5255C24.3843 26.828 24.7814 26.365 25.0143 26.6712C24.9258 26.9064 25.0413 26.8037 25.081 26.9512C25.0774 27.0838 25.2904 27.0819 25.294 26.9475C25.294 26.8896 25.3013 26.8542 25.3572 26.8299C25.4746 26.6432 25.2236 26.4378 25.1352 26.2828C24.9421 26.0905 24.6189 26.4583 24.4222 26.2548Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M20.8608 25.5957C20.9258 25.6181 20.9005 25.6965 20.9312 25.7376C21.2705 25.76 21.6099 25.6685 21.9528 25.6237C22.2092 25.6237 22.1983 25.3903 22.3861 25.3586C22.8391 25.3829 23.1207 24.9702 23.5467 24.903C23.8879 24.8022 24.3482 24.6734 24.6496 24.9198C24.7218 25.0038 24.8283 25.0207 24.9366 24.9982C25.081 24.9721 25.2525 24.9404 25.3283 25.114C25.3049 25.1401 25.2796 25.1663 25.2471 25.2018C25.2616 25.2354 25.2778 25.2727 25.2959 25.3101C25.3663 25.3063 25.3771 25.3642 25.4042 25.4127C25.4421 25.4762 25.5323 25.4781 25.5468 25.4109C25.5648 25.3287 25.6478 25.3698 25.6731 25.297C25.6876 25.0823 25.6406 24.8153 25.433 24.7051C25.3301 24.6062 24.924 24.8097 24.9132 24.6024C25.2146 24.6734 25.7959 24.2663 25.3969 24.0031C24.7218 23.8406 23.9818 24.1767 23.2958 24.257C23.0269 24.3186 23.1623 23.8649 22.5666 23.9863C22.9493 24.8134 23.776 24.229 24.4168 24.2215C24.4222 24.2962 24.2958 24.2925 24.3265 24.384C24.5124 24.3242 24.8301 24.4269 24.9366 24.2346C24.9944 23.9993 25.4727 24.0554 25.332 24.3261C24.9745 24.5632 24.4402 24.4549 24.0179 24.5035C23.5034 24.5483 22.9402 24.5613 22.4583 24.7462C22.3626 25.0561 22.2308 25.3754 21.8861 25.4482C21.6442 25.2055 21.294 25.493 21.0359 25.2466C20.9492 25.2652 20.9348 25.3175 20.9005 25.3829C20.7741 25.4333 20.7308 25.508 20.8608 25.5957ZM24.6587 27.769C23.9836 27.6794 24.0865 28.1593 23.7543 28.0454C23.8139 27.9707 23.98 27.9259 23.9258 27.812C23.4312 28.0342 22.9113 28.1947 22.4186 28.4244C22.1695 28.6989 22.2507 29.2478 21.6857 29.2982C21.6658 29.5839 21.2777 29.7762 21.0395 29.6492C20.9438 29.7426 20.9853 29.7668 20.9998 29.8527C20.9185 29.9293 20.8066 30.1048 20.9817 30.1029C21.0377 30.0917 21.081 30.0058 21.137 30.0338C21.1333 30.0712 21.1297 30.1066 21.1243 30.1496C21.1712 30.1477 21.2344 30.1645 21.2507 30.144C21.3283 30.0432 21.4402 30.1253 21.5269 30.0469C21.8175 29.8453 22.2308 29.6585 22.2092 29.2403C22.7218 29.0069 23.0178 28.1499 23.6857 28.4505C24.0161 28.6354 24.1063 28.0827 24.4023 28.0715C24.4854 28.2731 24.5251 28.2563 24.6334 28.1891C24.8175 28.3366 24.7868 28.1032 24.859 27.9968C24.868 27.8904 24.7634 27.7672 24.6587 27.769Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M21.6081 24.4101C21.5016 24.7275 21.6117 25.1476 21.8969 25.3231C22.2218 25.1738 22.4312 24.7313 22.3175 24.3616C22.3951 24.2943 22.4908 24.2607 22.4619 24.1468C22.4113 24.0199 22.2182 24.1151 22.1676 23.9657C22.0449 23.7921 21.8824 23.934 21.7832 24.0498C21.7092 24.0591 21.6352 24.0199 21.5666 24.0572C21.4944 24.1917 21.6911 24.2719 21.6081 24.4101ZM21.525 28.852C21.8409 29.638 22.3193 28.6391 22.2001 28.2115C22.4186 28.0248 22.359 27.9147 22.0936 27.896C22.0016 27.6906 21.7994 27.6701 21.6604 27.8437C21.6117 27.9072 21.5395 27.8848 21.4745 27.8904C21.3391 27.9557 21.4131 28.1107 21.5323 28.1443C21.4673 28.3814 21.4348 28.6186 21.525 28.852ZM22.3969 25.9374C22.3355 25.9001 22.2579 25.8982 22.1893 25.9038C22.0756 25.5995 21.8716 25.7152 21.7074 25.8963C21.4619 25.7955 21.4998 26.0233 21.6279 26.1484C21.5052 26.4583 21.5918 26.9195 21.9095 27.0521C22.2471 26.9064 22.3391 26.4845 22.3193 26.1446C22.424 26.126 22.5088 26.0046 22.3969 25.9374ZM24.8121 26.9643C24.2092 26.7552 23.2597 28.1144 22.859 27.7149C22.7615 27.4946 22.4619 27.5188 22.2723 27.5786C22.4998 27.7466 22.6225 28.1182 22.9673 27.9987C23.3554 27.9203 23.6604 27.5954 23.9962 27.446C24.0052 27.5637 23.8897 27.6141 23.8428 27.7242C24.0738 27.6495 24.2796 27.5823 24.4493 27.4311C24.4204 26.7739 25.3301 27.2332 24.4583 27.6383C24.6117 27.6421 24.7218 27.7149 24.8247 27.5823C25.0251 27.3975 25.0359 27.1305 24.8121 26.9643ZM23.4402 28.486C23.2633 28.5308 23.0864 28.5476 22.9763 28.7343C23.0215 28.7959 23.063 28.8538 23.1081 28.9192C23.0233 29.1451 22.8066 29.1077 22.6009 29.1171C22.6207 29.188 22.6316 29.2272 22.6442 29.2758C22.5557 29.3225 22.5232 29.4028 22.5413 29.5148C22.5648 29.5222 22.5918 29.5316 22.6189 29.5409C22.6749 29.4681 22.7778 29.3934 22.803 29.5316C23.1731 29.4065 23.5052 29.1731 23.6821 28.8146C23.5756 28.7306 23.4872 28.6298 23.4402 28.486Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M22.9511 27.1342C22.8734 27.1323 22.8554 27.2369 22.9095 27.2854C22.9637 27.3471 23.016 27.2798 23.0756 27.2985C23.0774 27.334 23.0792 27.362 23.081 27.39C23.4041 27.4087 23.8951 27.1099 24.0666 26.8411C23.998 26.729 23.933 26.6264 23.8662 26.5181C23.6893 26.5759 23.489 26.5722 23.3843 26.7347C23.4474 26.8056 23.5034 26.8653 23.563 26.9326C23.4456 27.0016 23.3085 27.1155 23.1785 27.0054C23.1261 26.9568 22.9799 26.9792 23.016 27.0745C23.0196 27.0894 23.0124 27.1081 23.0106 27.1267C22.9872 27.1286 22.9691 27.1305 22.9511 27.1342ZM21.5738 29.1731C21.4546 28.9322 21.2669 28.71 21.1785 28.4561C21.285 28.3012 21.2362 28.1014 21.0377 28.2283C20.9871 28.1238 20.9131 28.1051 20.8193 28.1312C20.7922 28.1985 20.7795 28.2619 20.8481 28.3142C20.8536 28.318 20.8481 28.3348 20.8463 28.3441C20.8247 28.3534 20.803 28.3609 20.7832 28.3665C20.7326 28.5009 20.8608 28.5775 20.9059 28.682C21.0449 28.9098 21.2525 29.4625 21.5738 29.1731ZM21.5738 25.1831C21.5575 24.847 21.1821 24.6323 21.2958 24.2962C21.3247 24.2327 21.3157 24.1599 21.2543 24.1095C21.1442 24.1394 21.1442 24.1394 21.0611 24.0852C20.9221 24.0124 20.9023 24.173 20.9131 24.2757C20.886 24.2887 20.8608 24.3018 20.8229 24.3205C20.9203 24.608 21.211 25.3287 21.5738 25.1831ZM20.8517 26.3202C20.9889 26.5386 21.0268 26.8822 21.2615 27.0091C21.368 27.0091 21.5341 27.1099 21.5972 26.9792C21.5287 26.7197 21.2182 26.5703 21.2633 26.2753C21.2777 26.2063 21.2543 26.139 21.1983 26.0774C21.0792 26.1129 20.8283 25.8328 20.9185 26.167C20.8445 26.1932 20.8012 26.2473 20.8517 26.3202ZM15.4979 19.6191C15.5484 19.621 15.6008 19.5594 15.6549 19.6154C15.6495 19.6434 15.6441 19.6714 15.6405 19.7013C15.969 19.8488 16.33 19.6826 16.6567 19.5911C16.7849 19.55 16.8589 19.4156 17.0015 19.4175C17.3391 19.4436 17.5304 19.1505 17.821 19.0664C18.1784 18.9955 18.5412 18.9376 18.9077 18.9432C19.3265 19.537 19.4023 19.0328 19.7795 19.2345C19.7687 19.2924 19.7579 19.3484 19.7452 19.41C19.7831 19.4231 19.8156 19.4343 19.8445 19.4436C19.8084 19.5911 20.0196 19.677 20.0467 19.4903C20.0521 19.4679 20.0413 19.438 20.072 19.4343C20.2958 19.3092 19.9528 18.6968 19.7145 18.8573C19.5936 18.9152 19.4348 18.975 19.3391 18.8237C19.5485 18.736 19.8066 18.7584 19.9492 18.5567C20.0557 18.4223 20.0449 18.1553 19.8427 18.0825C19.3174 17.9331 18.7597 18.2076 18.229 18.2561C17.2308 18.5362 17.942 18.0339 17.1513 18.0377C17.4347 18.8779 18.2849 18.3383 18.877 18.2767C18.8337 18.3756 18.738 18.413 18.6983 18.5007C18.9059 18.4596 19.1821 18.5418 19.3373 18.3737C19.4185 18.1441 19.9474 18.1161 19.821 18.4298C19.3228 18.9339 17.7615 18.4615 17.0665 18.7845C16.9636 19.1131 16.7795 19.3316 16.4762 19.4193C16.2271 19.2606 16.1152 19.4417 15.8661 19.3708C15.7975 19.2924 15.7271 19.2027 15.6206 19.2905V19.4081C15.5033 19.3745 15.3715 19.5426 15.4979 19.6191Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M16.3625 18.3383C16.1784 18.6893 16.2326 19.003 16.451 19.2961C16.8607 19.311 17.0268 18.7322 16.9618 18.3812C17.0033 18.3513 17.043 18.3233 17.0864 18.2935C17.0737 18.2468 17.0647 18.2076 17.0539 18.1665C16.978 18.1628 16.9113 18.159 16.8463 18.1572C16.6983 17.9593 16.6098 17.9555 16.4329 18.1329C16.312 18.0862 16.312 18.0862 16.2307 18.1964C16.2596 18.2599 16.2993 18.3065 16.3625 18.3383ZM18.3607 19.0889C18.3427 19.1859 18.4293 19.2289 18.4456 19.3054C18.3355 19.3783 18.2163 19.382 18.099 19.3988C18.0376 19.3353 18.0142 19.2196 17.9059 19.2532C17.8445 19.2681 17.8788 19.3353 17.8337 19.3615C17.7145 19.3521 17.7145 19.3521 17.6965 19.4753C17.7326 19.4977 17.7705 19.522 17.8066 19.5444C17.7181 19.9813 18.8716 19.5258 19.0431 19.3969C18.9871 19.298 18.9149 19.2308 18.8932 19.1169C18.8463 18.9264 18.5033 19.0814 18.3607 19.0889ZM16.2037 19.143C16.191 18.9899 16.1531 18.8107 16.0358 18.7042C15.9058 18.5642 15.8625 18.3719 15.9961 18.2225C15.9293 18.1572 15.8408 18.2094 15.7759 18.118C15.691 18.019 15.6423 18.1329 15.6206 18.2375C15.386 18.2711 15.5214 18.3513 15.5755 18.482C15.6531 18.7061 15.9311 19.2438 16.2037 19.143ZM19.6875 20.7767C19.5647 20.8365 19.4041 20.8943 19.3084 20.745C19.5196 20.6554 19.7795 20.6778 19.9221 20.4742C20.0304 20.3398 20.0196 20.0691 19.8156 19.9981C19.2849 19.845 18.7254 20.1232 18.1875 20.1699C17.182 20.4537 17.9004 19.9477 17.1026 19.9515C17.3878 20.7973 18.2452 20.2539 18.8409 20.1923C18.7994 20.2913 18.7019 20.3286 18.6622 20.4182C18.8716 20.3772 19.1496 20.4593 19.3066 20.2894C19.3878 20.0579 19.9203 20.0299 19.7958 20.3454C19.2922 20.8533 17.7181 20.3772 17.0178 20.7039C16.9131 21.0344 16.7271 21.2547 16.4203 21.3443C16.2091 21.208 16.0954 21.3182 15.9131 21.3126C15.9203 21.3742 15.9383 21.4339 15.9528 21.4937C15.9672 21.5553 15.9744 21.6169 15.978 21.6804C16.1892 21.6561 16.4022 21.574 16.6026 21.5161C16.7344 21.475 16.8084 21.3387 16.951 21.3425C17.2921 21.3667 17.4853 21.0736 17.7777 20.9877C18.1369 20.9167 18.5033 20.857 18.8734 20.8645C19.2958 21.4619 19.3716 20.9541 19.7506 21.1576C19.7416 21.2155 19.7308 21.2715 19.7182 21.3331C19.7561 21.3462 19.7868 21.3574 19.8174 21.3686C19.7795 21.5161 19.9925 21.6038 20.0214 21.4153C20.0268 21.3929 20.016 21.363 20.0467 21.3593C20.2723 21.2323 19.9257 20.6161 19.6875 20.7767Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M16.3066 20.2539C16.1206 20.6068 16.1748 20.9242 16.3968 21.2192C16.8102 21.2342 16.9781 20.6516 16.9113 20.2987C16.9546 20.267 16.9943 20.239 17.0358 20.2072C17.025 20.1606 17.0142 20.1232 17.0033 20.0803C16.9275 20.0766 16.8607 20.0747 16.7957 20.071C16.6459 19.873 16.5557 19.8674 16.3788 20.0467C16.256 20 16.256 20 16.1748 20.1102C16.2037 20.1755 16.2434 20.2222 16.3066 20.2539ZM18.3228 21.0101C18.303 21.1091 18.3914 21.152 18.4059 21.2286C18.2958 21.3032 18.1766 21.307 18.0575 21.3238C17.9961 21.2584 17.9708 21.1427 17.8625 21.1763C17.8012 21.1912 17.8355 21.2584 17.7903 21.2864C17.6694 21.2752 17.6694 21.2752 17.6513 21.4003C17.6893 21.4227 17.7272 21.447 17.7633 21.4694C17.673 21.9101 18.8373 21.4526 19.0088 21.32C18.9528 21.223 18.8806 21.1539 18.8589 21.0381C18.8102 20.8458 18.4654 21.0045 18.3228 21.0101ZM16.1459 21.0643C16.1333 20.9111 16.0972 20.73 15.978 20.6217C15.8463 20.4817 15.8029 20.2875 15.9383 20.1382C15.8715 20.071 15.7813 20.1251 15.7163 20.0317C15.6315 19.9309 15.5809 20.0467 15.5611 20.1512C15.3228 20.1867 15.46 20.267 15.5123 20.3977C15.5918 20.6236 15.8715 21.1669 16.1459 21.0643ZM19.729 22.5766C19.6062 22.6345 19.4456 22.6942 19.3499 22.543C19.5593 22.4552 19.821 22.4776 19.9637 22.2741C20.0702 22.1378 20.0611 21.869 19.8572 21.798C19.3265 21.6449 18.7669 21.9231 18.2308 21.9698C17.2253 22.2517 17.9438 21.7476 17.1459 21.7513C17.4311 22.5971 18.2885 22.0538 18.8842 21.9922C18.8409 22.0912 18.7434 22.1285 18.7037 22.2181C18.9149 22.177 19.1911 22.2573 19.3481 22.0893C19.4293 21.8578 19.9618 21.8316 19.8355 22.1453C19.3337 22.6532 17.7615 22.177 17.0629 22.5038C16.9582 22.8343 16.7723 23.0527 16.4672 23.1423C16.2163 22.9836 16.1044 23.1647 15.8535 23.0938C15.83 23.0658 15.8048 23.0378 15.7795 23.0154C15.7723 23.0116 15.765 23.0079 15.7596 23.0004C15.7506 22.9948 15.7416 22.9892 15.7307 22.9855C15.7325 22.9892 15.7344 22.993 15.7344 22.9967C15.738 23.1479 15.7019 23.2954 15.6459 23.4336C15.9708 23.568 16.3264 23.4056 16.6477 23.3141C16.7777 23.273 16.8535 23.1367 16.9961 23.1405C17.3355 23.1666 17.5286 22.8716 17.821 22.7876C18.182 22.7148 18.5467 22.6569 18.9149 22.6644C19.3373 23.26 19.4131 22.754 19.7922 22.9556C19.7813 23.0135 19.7705 23.0695 19.7597 23.1311C19.7976 23.1461 19.8283 23.1554 19.859 23.1666C19.821 23.3141 20.034 23.4019 20.0629 23.2133C20.0665 23.1909 20.0575 23.161 20.0882 23.1573C20.3138 23.0303 19.9673 22.4142 19.729 22.5766Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M16.3535 22.0538C16.1676 22.4067 16.2217 22.7222 16.4419 23.0172C16.8553 23.0322 17.0232 22.4515 16.9546 22.0986C16.9979 22.0669 17.0394 22.0389 17.0809 22.0071C17.0683 21.9605 17.0593 21.9231 17.0484 21.8802C16.9726 21.8764 16.9058 21.8746 16.8409 21.8708C16.691 21.6729 16.6008 21.6692 16.4239 21.8484C16.303 21.7999 16.3029 21.7999 16.2199 21.9119C16.2506 21.9754 16.2885 22.0221 16.3535 22.0538ZM18.3643 22.81C18.3463 22.909 18.4329 22.95 18.4492 23.0266C18.3391 23.1013 18.2199 23.105 18.1008 23.1218C18.0394 23.0565 18.0142 22.9426 17.9059 22.9762C17.8445 22.9911 17.8788 23.0583 17.8337 23.0845C17.7145 23.0733 17.7145 23.0733 17.6965 23.1984C17.7326 23.2208 17.7705 23.245 17.8066 23.2674C17.7163 23.7081 18.8788 23.2506 19.0521 23.1181C18.9961 23.021 18.9221 22.9519 18.9005 22.838C18.8517 22.6438 18.5069 22.8025 18.3643 22.81ZM16.025 22.4216C15.9997 22.3955 15.978 22.3675 15.96 22.3376C15.9528 22.416 15.9925 22.5075 15.978 22.5859C15.969 22.6457 15.951 22.7372 15.9347 22.7951C16.0304 22.8922 16.0863 22.9034 16.191 22.8641C16.1802 22.7092 16.1423 22.5299 16.025 22.4216ZM22.0557 19.3222C22.1478 19.3801 22.2146 19.6546 22.2687 19.6938C22.3734 19.8338 22.5882 20.2091 22.7994 20.1326V20.1251C22.8626 20.1008 22.9222 19.9104 22.9258 19.8842C22.924 19.8768 22.8879 19.8432 22.8482 19.8114C22.6496 19.6322 22.5305 19.4567 22.5269 19.2924C22.5178 19.2401 22.6388 19.1673 22.6297 19.1169C22.6261 18.9302 22.4763 19.1411 22.4167 19.1094C22.3843 19.0552 22.2723 18.9021 22.2037 18.9768C22.1604 18.9992 22.2146 19.1075 22.1803 19.1337C22.164 19.1561 22.155 19.1598 22.1063 19.1579C21.9474 19.1561 21.9258 19.2588 22.0557 19.3222Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M22.9059 20.5825C22.9601 20.5284 23.1189 20.366 23.137 20.3305C23.1532 20.2931 23.1586 20.2931 23.2706 20.2819C23.581 20.2371 23.7381 20.1064 23.8247 19.7629C23.868 19.6583 23.8139 19.4343 23.7489 19.3876C23.7254 19.3689 23.7146 19.3353 23.729 19.3241C23.7868 19.3148 23.9077 19.2662 23.9276 19.1971C23.8951 19.1299 23.8157 19.1803 23.7056 19.143C23.6262 19.1057 23.4132 19.0366 23.3265 19.087C23.2651 19.1635 22.9023 19.171 22.9673 19.283C22.9817 19.3241 23.0088 19.4193 23.0088 19.4193L23.1731 19.438L23.1749 19.5612C23.1749 19.5612 23.0576 19.5892 23.0178 19.5967C22.9204 19.7461 23.2525 19.7573 23.3391 19.6434C23.3987 19.5706 23.4908 19.5594 23.4872 19.6397C23.4438 19.7367 23.285 19.7872 23.1911 19.8338C23.0521 19.8581 23.016 20.1419 22.9077 20.2353C22.6045 20.2931 22.4962 20.2857 22.1965 20.0336C22.0864 19.9029 22.0016 20.0019 22.0828 20.1046C22.0287 20.1214 21.7507 19.9589 21.877 20.2371L21.8987 20.2614C21.7615 20.4668 21.9655 20.3977 22.0792 20.4612C22.3229 20.562 22.5918 20.6367 22.9059 20.5825Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M23.8771 20.3846L24.0052 20.661C24.0052 20.661 24.2814 20.7879 24.3193 20.8253C24.4745 20.9429 24.4475 21.2678 24.3085 21.2304C24.0792 21.1333 23.942 20.7991 23.7832 20.5919C23.7417 20.5583 23.6316 20.2203 23.5594 20.3043C22.6153 20.5247 23.7308 20.7749 23.5594 21.1371C23.5251 21.1893 23.4204 21.4433 23.4637 21.4806C23.5431 21.5814 23.7218 21.6561 23.8139 21.7831C23.9691 21.9381 23.8301 22.1192 23.6406 21.9735C23.5323 21.8895 23.4041 22.0109 23.5142 22.1229C23.5215 22.1453 23.4475 22.177 23.4348 22.1864C23.3229 22.3451 23.5088 22.3376 23.6063 22.2573C23.6605 22.2293 23.6063 22.3974 23.6984 22.3694C23.8698 22.3302 24.137 22.2405 24.1857 21.9623C24.2922 21.7047 24.0449 21.7476 23.9836 21.5236C23.9222 21.4321 23.9168 21.0941 24.0522 21.2192C24.1749 21.3817 24.3446 21.475 24.498 21.3294C24.6388 21.1912 24.5106 20.857 24.4366 20.7076C24.3013 20.4145 24.1424 20.1307 24.1532 19.7778C24.3446 19.5426 24.5684 19.9627 24.7038 19.3073C24.2561 19.339 23.8157 19.649 24.0359 20.1699C24.1731 20.463 24.1424 20.4406 23.8771 20.3846Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M23.1568 20.9392C22.9204 20.928 22.7399 20.9074 22.8067 21.1987C22.8193 21.2678 22.8446 21.4806 22.8843 21.5292C22.9005 21.5572 22.8987 21.587 22.877 21.6057C22.7814 21.6599 22.4204 21.5086 22.4637 21.3817C22.4637 21.2752 22.3608 21.251 22.3319 21.3275C22.3157 21.3593 22.2904 21.3593 22.2543 21.3163C22.1857 21.2174 22.0936 21.3518 22.1316 21.4265C22.146 21.4563 22.1279 21.4881 22.0936 21.4937C21.9944 21.5348 21.9998 21.6767 22.1388 21.6823C22.4402 21.826 22.702 21.9754 23.0521 21.925L23.0467 21.9269C23.4294 21.8951 23.2326 21.8204 23.2164 21.5441C23.1496 21.2491 23.6388 21.0549 23.1568 20.9392ZM23.516 25.1663C23.4908 25.1439 23.4294 25.17 23.4222 25.185C23.424 25.3194 23.2868 25.2802 23.2453 25.3717C23.2724 25.4277 23.3121 25.4725 23.3698 25.4669C23.4438 25.4594 23.4366 25.5528 23.5034 25.5584C23.8193 25.4109 24.1929 25.4464 24.4601 25.1924C24.359 25.1028 24.3356 24.9833 24.3139 24.8563C24.1316 24.8694 23.9547 24.8433 23.7976 24.9329C23.7832 25.0188 23.841 25.0636 23.8807 25.1383C23.7525 25.1943 23.637 25.2242 23.516 25.1663Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M20.7073 31.3781C21.0882 31.0271 21.3518 30.9058 21.8427 30.7844C21.7074 31.0981 21.5774 31.3987 21.442 31.7161C21.1965 31.6022 20.9546 31.492 20.7073 31.3781ZM20.6117 23.7828H25.989C26.4294 28.0342 24.0197 29.4569 20.6117 30.9394V23.7828ZM28.5558 21.5049C28.4313 21.2304 28.1443 19.6882 27.7273 20.0243C29.6298 23.6969 28.3609 28.5289 25.0594 30.8554C24.0901 31.4603 22.8879 32.4667 21.7417 31.7964C22.4817 28.8146 26.0269 30.073 26.7977 24.3896C26.702 24.3429 26.6659 24.313 26.5793 24.2962C26.4692 25.0897 26.276 25.8534 25.989 26.5872C26.2959 25.7414 26.1009 23.0938 26.1587 22.9482C26.1262 22.9033 26.0937 22.8865 25.989 22.754C26.0071 23.0733 25.9872 23.189 25.9908 23.6128H20.6117V17.808H25.8915V21.0829C25.8879 21.1016 25.9114 21.2566 25.9222 21.3144C25.998 21.1949 26.0034 21.1987 26.054 21.1595V17.64H14.9816L14.9708 20.6049H15.1351V17.808H20.4474V23.6128L15.3228 23.6129C15.3084 23.6278 15.3264 23.5214 15.3102 23.5363C15.3084 23.5214 15.2741 23.6278 15.2741 23.6129L15.1315 23.6128C15.1278 23.3421 15.1351 23.1759 15.1351 23.1666L14.9708 23.161C14.8517 23.596 15.2019 27.2369 15.7813 27.8773C14.6242 26.7178 14.2596 24.6584 14.4762 23.1087C14.4762 23.1087 14.3679 23.0228 14.2506 22.9108C13.8878 25.0953 14.6856 27.25 16.1658 28.8127C16.2957 28.9546 16.4365 28.8015 16.5936 28.7605C16.5611 28.725 16.4925 28.6708 16.4437 28.6018C16.5033 28.6634 16.5539 28.7194 16.5936 28.7605L16.5123 28.5252C15.3499 27.6085 15.1585 24.9833 15.1333 23.7828H20.4474C20.4474 23.7828 20.4438 31.0589 20.4402 31.0757C19.3102 31.0178 18.5449 29.75 17.4546 29.737C19.0214 30.6966 21.8879 33.0137 23.6984 31.998C23.7128 32.0167 23.711 32.013 23.7236 32.0316C23.5341 32.2762 22.8626 32.743 22.5648 32.6254C22.0702 32.3173 21.3102 32.8774 21.6604 33.445C21.7055 33.5122 21.7326 33.572 21.6803 33.6597C19.7218 33.4693 17.9618 32.2594 16.312 31.2232C16.2957 31.2418 16.2993 31.2381 16.2831 31.2568C16.9149 32.1399 19.1748 33.2378 19.1748 33.2378L19.173 34.5504C19.173 34.5504 19.3174 34.6493 19.4113 34.7147V33.2938C20.0052 33.5048 21.2055 33.895 21.2055 33.895L21.2092 34.7819L21.4384 34.6306L21.4258 33.966L21.7471 33.8745C21.9474 33.8166 22.0774 33.6168 22.0539 33.404C21.9583 33.3535 21.8915 33.2527 21.9204 33.1146C21.9673 32.855 22.2705 32.8494 22.3933 33.0044C22.6388 33.1183 22.8788 32.8139 23.1207 32.7411C23.4619 32.5283 23.8825 32.3378 24.0395 31.9327C24.0702 31.8318 24.1225 31.7702 24.2056 31.7198C24.8933 31.3165 25.5594 30.8703 26.119 30.2878C28.5179 28.191 29.3537 24.5893 28.5558 21.5049ZM8.70538 33.7158C8.58263 33.6373 8.4292 33.6131 8.2505 33.6429C8.28841 33.9249 8.38769 34.4477 8.46711 34.7203C8.97434 34.6456 9.12596 33.9902 8.70538 33.7158Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M15.0611 32.3472L15.2903 33.5459L15.025 33.5944L14.7885 32.4032C14.626 32.4331 14.534 32.4331 14.3119 32.5339L14.3047 32.265L15.4528 32.1119L15.5322 32.3378C15.4275 32.2986 15.0611 32.3472 15.0611 32.3472ZM14.2235 33.7512L13.4275 33.9398C13.4419 33.8166 13.1748 32.6627 13.1062 32.5582L13.9455 32.3584L13.8787 32.6496C13.7632 32.616 13.626 32.6179 13.4708 32.6515L13.5683 33.0697L14.0322 32.9596L14.108 33.1631C14.0159 33.1482 13.7361 33.2228 13.6098 33.2471L13.7109 33.684C13.9383 33.6299 14.1278 33.5496 14.2758 33.4432L14.2795 33.445L14.2235 33.7512ZM11.913 34.1788C11.3318 34.1937 11.2469 33.3349 11.1115 32.911L11.3931 32.8569C11.5285 33.2247 11.4906 34.0873 12.0881 33.9734C12.5213 33.7736 12.1711 33.0623 12.126 32.7206L12.404 32.6795C12.5087 33.249 12.7578 34.2367 11.913 34.1788ZM11.0953 34.3095L10.2975 34.4906C10.3137 34.3674 10.0574 33.2116 9.99059 33.1052L10.83 32.9129L10.7614 33.2042C10.6458 33.1706 10.5086 33.1706 10.3534 33.2023L10.4473 33.6205L10.9112 33.516L10.987 33.7195C10.8931 33.7046 10.6133 33.7755 10.487 33.7998L10.5845 34.2367C10.8119 34.1844 11.0014 34.106 11.1513 34.0014L11.1549 34.0033L11.0953 34.3095ZM9.6007 34.6437C9.62055 34.2348 9.48878 33.5944 9.31008 33.2284L9.69997 33.1426C9.68012 33.5515 9.81189 34.1937 9.99059 34.5578L9.6007 34.6437ZM9.20719 34.3954C9.04293 34.8024 8.54653 34.8958 8.16024 34.9667C8.17829 34.8398 7.94183 33.6616 7.86963 33.5552C8.53931 33.2583 9.49781 33.5459 9.20719 34.3954ZM15.6188 31.7833C12.5737 31.787 9.54113 33.1332 6.49416 33.1332C6.12953 33.1332 5.76491 33.1127 5.39847 33.0697C6.34253 33.8409 6.27574 35.3868 7.6476 35.3868C7.70717 35.3868 7.77035 35.3831 7.83533 35.3775C9.69997 35.1721 11.5538 34.6269 13.3896 34.3263C13.7054 34.2759 15.2253 33.8913 16.1152 33.8913C16.4365 33.8913 16.6748 33.9417 16.7452 34.0761C16.8427 34.2572 16.238 34.7837 16.2325 34.8043C16.2325 34.8099 16.2344 34.8136 16.2416 34.8136C16.3011 34.8136 16.6351 34.6138 16.886 34.4421C17.8788 33.7046 15.7975 31.7833 15.6188 31.7833ZM29.7255 33.1127C29.6623 33.3741 29.5612 33.8689 29.5288 34.1396C30.1262 34.2703 30.3122 33.234 29.7255 33.1127ZM32.0685 33.5328C31.6118 33.4152 31.462 34.3991 31.8429 34.5578C32.3086 34.6717 32.4494 33.6934 32.0685 33.5328ZM30.8735 33.3479L30.7345 33.8707C31.1226 33.9454 31.2905 33.4133 30.8735 33.3479ZM27.211 32.5992C26.7345 32.4648 26.5504 33.4842 26.9511 33.656C27.4367 33.7904 27.6136 32.7766 27.211 32.5992Z\"/>\n                                    <path fill=\"#ffffff\" fill-rule=\"evenodd\" d=\"M33.5541 33.895C33.5541 33.895 33.3772 34.9312 33.388 35.019L33.0866 34.963C33.0811 34.9705 33.2725 34.0537 33.3194 33.8558C33.2129 33.8315 33.0866 33.8427 32.9674 33.8894L32.9656 33.8857L33.0866 33.6261L33.9043 33.7774L33.962 34.0649C33.8916 33.9958 33.6714 33.9174 33.5541 33.895ZM32.8393 33.9529C32.8086 34.1919 32.7003 34.6792 32.7436 34.907L32.4403 34.8622C32.5739 34.5074 32.6642 33.9118 32.6425 33.5328L32.9458 33.5795C32.897 33.684 32.8609 33.8091 32.8393 33.9529ZM32.0324 34.7445C31.258 34.8939 31.258 33.5403 31.8808 33.3517C32.657 33.1836 32.6606 34.5578 32.0324 34.7445ZM31.3645 33.6766C31.3266 33.8297 31.2165 33.9342 31.0378 33.9921C31.1154 34.2572 31.1624 34.345 31.2941 34.6325L31.2923 34.64L31.0883 34.6064C31.045 34.5821 30.7887 34.2087 30.7111 34.007C30.666 34.1732 30.6208 34.3842 30.6389 34.5354L30.2923 34.4794C30.3555 34.3749 30.628 33.2733 30.6172 33.1575C30.9187 33.1967 31.4584 33.2527 31.3645 33.6766ZM29.8645 34.2964C29.6822 34.3636 29.4223 34.289 29.2327 34.2516L29.4872 32.9036C30.332 32.8457 30.684 33.9772 29.8645 34.2964ZM28.6641 34.1825C28.5703 34.162 28.0594 33.0884 28.0594 33.0884C28.0594 33.0884 27.9367 33.923 27.9042 33.9809L27.6731 33.9473L27.9367 32.6384L28.193 32.6739C28.1948 32.7075 28.5991 33.5925 28.5991 33.5925C28.5991 33.5925 28.7345 32.8756 28.7472 32.8121L28.9421 32.8681L28.6641 34.1825ZM27.6009 33.3367C27.3248 34.3039 26.2471 33.7755 26.5684 32.9129C26.841 31.9756 27.9204 32.4723 27.6009 33.3367ZM26.4746 32.2949C26.4294 32.3378 26.267 33.516 26.2778 33.6317L25.9709 33.5701C26.0269 33.4674 26.0991 32.6459 26.0991 32.6459L25.572 33.4917L25.2634 32.5376C25.2634 32.5376 25.1388 33.2228 25.1334 33.4432L24.8319 33.4002C24.9294 33.2397 25.1171 32.0279 25.1171 32.0279L25.4294 32.0876C25.4366 32.1511 25.6731 32.9745 25.6731 32.9745C25.6731 32.9745 26.0865 32.2557 26.1099 32.2183L26.4764 32.2893L26.4746 32.2949ZM34.0252 33.1276C33.6443 33.1276 33.2833 33.1202 33.1046 33.1052C31.0974 32.9036 29.11 32.3098 27.1081 31.9812C26.5305 31.886 26.0576 31.7982 25.6478 31.7982C24.7976 31.7982 24.2182 32.1791 23.5341 33.6896C23.2417 34.2628 24.22 34.8099 24.4348 34.8342C23.6316 34.1247 23.9114 33.9137 24.5449 33.9137C25.4222 33.9137 26.9746 34.3151 27.2778 34.3543C29.1136 34.6568 30.9692 35.2001 32.8339 35.4074C32.8988 35.413 32.962 35.4167 33.0216 35.4167C34.3934 35.4167 34.3267 33.8689 35.2707 33.0996C35.1028 33.1146 34.5469 33.1276 34.0252 33.1276Z\"/>\n                                 <image\n                                         src=\"/assets/images/moj-logotype-crest-2024.png\"\n                                         xlink:href=\"\"\n                                         class=\"moj-header__logotype-crest-fallback-image\"\n                                         width=\"40\"\n                                         height=\"40\"></image>\n                                </svg>\n        \n                                <span class=\"govuk-header__logotype-text\">\n                                    OPG\n                                </span>\n                            </a>\n                        </div>\n    \n                        <a class=\"govuk-header__service-name\">\n                            Sirius\n                        </a>\n                        <div class=\"govuk-header__logo\">\n                            <nav aria-label=\"Menu\" class=\"govuk-header__navigation opg-main-nav-container\">\n                                 <ul id=\"header-navigation\" class=\"govuk-header__navigation-list\">\n                                    <li class=\"govuk-header__navigation-item\">\n                                        <a class=\"govuk-header__link\" href=\"${prefix}/lpa\"> Power of Attorney</a>\n                                    </li>\n                                    <li class=\"govuk-header__navigation-item\">\n                                        <a class=\"govuk-header__link\" href=\"${prefix}/supervision\">\n                                            Supervision\n                                        </a>\n                                    </li>\n                                    <li class=\"govuk-header__navigation-item\">\n                                        <a class=\"govuk-header__link\" href=\"${prefix}/admin\">\n                                            Admin\n                                        </a>\n                                    </li>\n                                    <li class=\"govuk-header__navigation-item\">\n                                        <a class=\"govuk-header__link\" href=\"${prefix}/auth/logout\">\n                                            Sign out\n                                        </a>\n                                    </li>\n                                </ul>\n                            </nav>\n                        </div>\n                    </div>\n                </header>\n                <nav class=govuk-phase-banner\" aria-label=\"feedback-banner-navigation\"> \n                    <div class=\"govuk-phase-banner\">\n                        <p class=\"govuk-phase-banner__content\">\n                           <span id=\"feedback-span\" id=\"feedback-span\" class=\"govuk-phase-banner__text govuk-!-padding-left-5\">\n                                Your <a id=\"feedback-link\" class=\"govuk-link\" href=\"${prefix}/admin/feedback\" target=\"_blank\" rel=\"opener\">feedback</a> will help us to improve this service.\n                            </span>\n                        </p>\n                    </div>\n                </nav>\n                <div id=\"nav-search\">\n                </div>\n                <nav class=\"moj-primary-navigation\" role=\"navigation\" aria-label=\"Primary navigation\">\n                    <ul class=\"moj-primary-navigation__list\">\n                        ${navLinks\n                          .map(({ url, title, hide, openNewTab }) => {\n                            return `<li \n                          class=\"moj-primary-navigation__item ${\n                            hide ? \"hide\" : \"\"\n                          }\"\n                          >\n                            <a\n                              class=\"moj-primary-navigation__link\"\n                              ${\n                                window.location.href.includes(url)\n                                  ? 'aria-current=\"page\"'\n                                  : \"\"\n                              }\n                              href=\"${url}\"\n                              ${openNewTab ? 'target=\"_blank\"' : \"\"}\n                            >\n                              ${title}\n                            </a>\n                          </li>`;\n                        })\n                        .join(\"\")}\n                    </ul>\n                </nav>\n            </div>\n    `;\n  }\n}\ncustomElements.define(\"sirius-header\", SiriusHeader);\n", "var htmx = (function() {\n  'use strict'\n\n  // Public API\n  const htmx = {\n    // Tsc madness here, assigning the functions directly results in an invalid TypeScript output, but reassigning is fine\n    /* Event processing */\n    /** @type {typeof onLoadHelper} */\n    onLoad: null,\n    /** @type {typeof processNode} */\n    process: null,\n    /** @type {typeof addEventListenerImpl} */\n    on: null,\n    /** @type {typeof removeEventListenerImpl} */\n    off: null,\n    /** @type {typeof triggerEvent} */\n    trigger: null,\n    /** @type {typeof ajaxHelper} */\n    ajax: null,\n    /* DOM querying helpers */\n    /** @type {typeof find} */\n    find: null,\n    /** @type {typeof findAll} */\n    findAll: null,\n    /** @type {typeof closest} */\n    closest: null,\n    /**\n     * Returns the input values that would resolve for a given element via the htmx value resolution mechanism\n     *\n     * @see https://htmx.org/api/#values\n     *\n     * @param {Element} elt the element to resolve values on\n     * @param {HttpVerb} type the request type (e.g. **get** or **post**) non-GET's will include the enclosing form of the element. Defaults to **post**\n     * @returns {Object}\n     */\n    values: function(elt, type) {\n      const inputValues = getInputValues(elt, type || 'post')\n      return inputValues.values\n    },\n    /* DOM manipulation helpers */\n    /** @type {typeof removeElement} */\n    remove: null,\n    /** @type {typeof addClassToElement} */\n    addClass: null,\n    /** @type {typeof removeClassFromElement} */\n    removeClass: null,\n    /** @type {typeof toggleClassOnElement} */\n    toggleClass: null,\n    /** @type {typeof takeClassForElement} */\n    takeClass: null,\n    /** @type {typeof swap} */\n    swap: null,\n    /* Extension entrypoints */\n    /** @type {typeof defineExtension} */\n    defineExtension: null,\n    /** @type {typeof removeExtension} */\n    removeExtension: null,\n    /* Debugging */\n    /** @type {typeof logAll} */\n    logAll: null,\n    /** @type {typeof logNone} */\n    logNone: null,\n    /* Debugging */\n    /**\n     * The logger htmx uses to log with\n     *\n     * @see https://htmx.org/api/#logger\n     */\n    logger: null,\n    /**\n     * A property holding the configuration htmx uses at runtime.\n     *\n     * Note that using a [meta tag](https://htmx.org/docs/#config) is the preferred mechanism for setting these properties.\n     *\n     * @see https://htmx.org/api/#config\n     */\n    config: {\n      /**\n       * Whether to use history.\n       * @type boolean\n       * @default true\n       */\n      historyEnabled: true,\n      /**\n       * The number of pages to keep in **sessionStorage** for history support.\n       * @type number\n       * @default 10\n       */\n      historyCacheSize: 10,\n      /**\n       * @type boolean\n       * @default false\n       */\n      refreshOnHistoryMiss: false,\n      /**\n       * The default swap style to use if **[hx-swap](https://htmx.org/attributes/hx-swap)** is omitted.\n       * @type HtmxSwapStyle\n       * @default 'innerHTML'\n       */\n      defaultSwapStyle: 'innerHTML',\n      /**\n       * The default delay between receiving a response from the server and doing the swap.\n       * @type number\n       * @default 0\n       */\n      defaultSwapDelay: 0,\n      /**\n       * The default delay between completing the content swap and settling attributes.\n       * @type number\n       * @default 20\n       */\n      defaultSettleDelay: 20,\n      /**\n       * If true, htmx will inject a small amount of CSS into the page to make indicators invisible unless the **htmx-indicator** class is present.\n       * @type boolean\n       * @default true\n       */\n      includeIndicatorStyles: true,\n      /**\n       * The class to place on indicators when a request is in flight.\n       * @type string\n       * @default 'htmx-indicator'\n       */\n      indicatorClass: 'htmx-indicator',\n      /**\n       * The class to place on triggering elements when a request is in flight.\n       * @type string\n       * @default 'htmx-request'\n       */\n      requestClass: 'htmx-request',\n      /**\n       * The class to temporarily place on elements that htmx has added to the DOM.\n       * @type string\n       * @default 'htmx-added'\n       */\n      addedClass: 'htmx-added',\n      /**\n       * The class to place on target elements when htmx is in the settling phase.\n       * @type string\n       * @default 'htmx-settling'\n       */\n      settlingClass: 'htmx-settling',\n      /**\n       * The class to place on target elements when htmx is in the swapping phase.\n       * @type string\n       * @default 'htmx-swapping'\n       */\n      swappingClass: 'htmx-swapping',\n      /**\n       * Allows the use of eval-like functionality in htmx, to enable **hx-vars**, trigger conditions & script tag evaluation. Can be set to **false** for CSP compatibility.\n       * @type boolean\n       * @default true\n       */\n      allowEval: true,\n      /**\n       * If set to false, disables the interpretation of script tags.\n       * @type boolean\n       * @default true\n       */\n      allowScriptTags: true,\n      /**\n       * If set, the nonce will be added to inline scripts.\n       * @type string\n       * @default ''\n       */\n      inlineScriptNonce: '',\n      /**\n       * If set, the nonce will be added to inline styles.\n       * @type string\n       * @default ''\n       */\n      inlineStyleNonce: '',\n      /**\n       * The attributes to settle during the settling phase.\n       * @type string[]\n       * @default ['class', 'style', 'width', 'height']\n       */\n      attributesToSettle: ['class', 'style', 'width', 'height'],\n      /**\n       * Allow cross-site Access-Control requests using credentials such as cookies, authorization headers or TLS client certificates.\n       * @type boolean\n       * @default false\n       */\n      withCredentials: false,\n      /**\n       * @type number\n       * @default 0\n       */\n      timeout: 0,\n      /**\n       * The default implementation of **getWebSocketReconnectDelay** for reconnecting after unexpected connection loss by the event code **Abnormal Closure**, **Service Restart** or **Try Again Later**.\n       * @type {'full-jitter' | ((retryCount:number) => number)}\n       * @default \"full-jitter\"\n       */\n      wsReconnectDelay: 'full-jitter',\n      /**\n       * The type of binary data being received over the WebSocket connection\n       * @type BinaryType\n       * @default 'blob'\n       */\n      wsBinaryType: 'blob',\n      /**\n       * @type string\n       * @default '[hx-disable], [data-hx-disable]'\n       */\n      disableSelector: '[hx-disable], [data-hx-disable]',\n      /**\n       * @type {'auto' | 'instant' | 'smooth'}\n       * @default 'instant'\n       */\n      scrollBehavior: 'instant',\n      /**\n       * If the focused element should be scrolled into view.\n       * @type boolean\n       * @default false\n       */\n      defaultFocusScroll: false,\n      /**\n       * If set to true htmx will include a cache-busting parameter in GET requests to avoid caching partial responses by the browser\n       * @type boolean\n       * @default false\n       */\n      getCacheBusterParam: false,\n      /**\n       * If set to true, htmx will use the View Transition API when swapping in new content.\n       * @type boolean\n       * @default false\n       */\n      globalViewTransitions: false,\n      /**\n       * htmx will format requests with these methods by encoding their parameters in the URL, not the request body\n       * @type {(HttpVerb)[]}\n       * @default ['get', 'delete']\n       */\n      methodsThatUseUrlParams: ['get', 'delete'],\n      /**\n       * If set to true, disables htmx-based requests to non-origin hosts.\n       * @type boolean\n       * @default false\n       */\n      selfRequestsOnly: true,\n      /**\n       * If set to true htmx will not update the title of the document when a title tag is found in new content\n       * @type boolean\n       * @default false\n       */\n      ignoreTitle: false,\n      /**\n       * Whether the target of a boosted element is scrolled into the viewport.\n       * @type boolean\n       * @default true\n       */\n      scrollIntoViewOnBoost: true,\n      /**\n       * The cache to store evaluated trigger specifications into.\n       * You may define a simple object to use a never-clearing cache, or implement your own system using a [proxy object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Proxy)\n       * @type {Object|null}\n       * @default null\n       */\n      triggerSpecsCache: null,\n      /** @type boolean */\n      disableInheritance: false,\n      /** @type HtmxResponseHandlingConfig[] */\n      responseHandling: [\n        { code: '204', swap: false },\n        { code: '[23]..', swap: true },\n        { code: '[45]..', swap: false, error: true }\n      ],\n      /**\n       * Whether to process OOB swaps on elements that are nested within the main response element.\n       * @type boolean\n       * @default true\n       */\n      allowNestedOobSwaps: true,\n      /**\n       * Whether to treat history cache miss full page reload requests as a \"HX-Request\" by returning this response header\n       * This should always be disabled when using HX-Request header to optionally return partial responses\n       * @type boolean\n       * @default true\n       */\n      historyRestoreAsHxRequest: true,\n      /**\n       * Weather to report input validation errors to the end user and update focus to the first input that fails validation.\n       * This should always be enabled as this matches default browser form submit behaviour\n       * @type boolean\n       * @default false\n       */\n      reportValidityOfForms: false\n    },\n    /** @type {typeof parseInterval} */\n    parseInterval: null,\n    /**\n     * proxy of window.location used for page reload functions\n     * @type location\n     */\n    location,\n    /** @type {typeof internalEval} */\n    _: null,\n    version: '2.0.7'\n  }\n  // Tsc madness part 2\n  htmx.onLoad = onLoadHelper\n  htmx.process = processNode\n  htmx.on = addEventListenerImpl\n  htmx.off = removeEventListenerImpl\n  htmx.trigger = triggerEvent\n  htmx.ajax = ajaxHelper\n  htmx.find = find\n  htmx.findAll = findAll\n  htmx.closest = closest\n  htmx.remove = removeElement\n  htmx.addClass = addClassToElement\n  htmx.removeClass = removeClassFromElement\n  htmx.toggleClass = toggleClassOnElement\n  htmx.takeClass = takeClassForElement\n  htmx.swap = swap\n  htmx.defineExtension = defineExtension\n  htmx.removeExtension = removeExtension\n  htmx.logAll = logAll\n  htmx.logNone = logNone\n  htmx.parseInterval = parseInterval\n  htmx._ = internalEval\n\n  const internalAPI = {\n    addTriggerHandler,\n    bodyContains,\n    canAccessLocalStorage,\n    findThisElement,\n    filterValues,\n    swap,\n    hasAttribute,\n    getAttributeValue,\n    getClosestAttributeValue,\n    getClosestMatch,\n    getExpressionVars,\n    getHeaders,\n    getInputValues,\n    getInternalData,\n    getSwapSpecification,\n    getTriggerSpecs,\n    getTarget,\n    makeFragment,\n    mergeObjects,\n    makeSettleInfo,\n    oobSwap,\n    querySelectorExt,\n    settleImmediately,\n    shouldCancel,\n    triggerEvent,\n    triggerErrorEvent,\n    withExtensions\n  }\n\n  const VERBS = ['get', 'post', 'put', 'delete', 'patch']\n  const VERB_SELECTOR = VERBS.map(function(verb) {\n    return '[hx-' + verb + '], [data-hx-' + verb + ']'\n  }).join(', ')\n\n  //= ===================================================================\n  // Utilities\n  //= ===================================================================\n\n  /**\n   * Parses an interval string consistent with the way htmx does. Useful for plugins that have timing-related attributes.\n   *\n   * Caution: Accepts an int followed by either **s** or **ms**. All other values use **parseFloat**\n   *\n   * @see https://htmx.org/api/#parseInterval\n   *\n   * @param {string} str timing string\n   * @returns {number|undefined}\n   */\n  function parseInterval(str) {\n    if (str == undefined) {\n      return undefined\n    }\n\n    let interval = NaN\n    if (str.slice(-2) == 'ms') {\n      interval = parseFloat(str.slice(0, -2))\n    } else if (str.slice(-1) == 's') {\n      interval = parseFloat(str.slice(0, -1)) * 1000\n    } else if (str.slice(-1) == 'm') {\n      interval = parseFloat(str.slice(0, -1)) * 1000 * 60\n    } else {\n      interval = parseFloat(str)\n    }\n    return isNaN(interval) ? undefined : interval\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {string} name\n   * @returns {(string | null)}\n   */\n  function getRawAttribute(elt, name) {\n    return elt instanceof Element && elt.getAttribute(name)\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} qualifiedName\n   * @returns {boolean}\n   */\n  // resolve with both hx and data-hx prefixes\n  function hasAttribute(elt, qualifiedName) {\n    return !!elt.hasAttribute && (elt.hasAttribute(qualifiedName) ||\n      elt.hasAttribute('data-' + qualifiedName))\n  }\n\n  /**\n   *\n   * @param {Node} elt\n   * @param {string} qualifiedName\n   * @returns {(string | null)}\n   */\n  function getAttributeValue(elt, qualifiedName) {\n    return getRawAttribute(elt, qualifiedName) || getRawAttribute(elt, 'data-' + qualifiedName)\n  }\n\n  /**\n   * @param {Node} elt\n   * @returns {Node | null}\n   */\n  function parentElt(elt) {\n    const parent = elt.parentElement\n    if (!parent && elt.parentNode instanceof ShadowRoot) return elt.parentNode\n    return parent\n  }\n\n  /**\n   * @returns {Document}\n   */\n  function getDocument() {\n    return document\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {boolean} global\n   * @returns {Node|Document}\n   */\n  function getRootNode(elt, global) {\n    return elt.getRootNode ? elt.getRootNode({ composed: global }) : getDocument()\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {(e:Node) => boolean} condition\n   * @returns {Node | null}\n   */\n  function getClosestMatch(elt, condition) {\n    while (elt && !condition(elt)) {\n      elt = parentElt(elt)\n    }\n\n    return elt || null\n  }\n\n  /**\n   * @param {Element} initialElement\n   * @param {Element} ancestor\n   * @param {string} attributeName\n   * @returns {string|null}\n   */\n  function getAttributeValueWithDisinheritance(initialElement, ancestor, attributeName) {\n    const attributeValue = getAttributeValue(ancestor, attributeName)\n    const disinherit = getAttributeValue(ancestor, 'hx-disinherit')\n    var inherit = getAttributeValue(ancestor, 'hx-inherit')\n    if (initialElement !== ancestor) {\n      if (htmx.config.disableInheritance) {\n        if (inherit && (inherit === '*' || inherit.split(' ').indexOf(attributeName) >= 0)) {\n          return attributeValue\n        } else {\n          return null\n        }\n      }\n      if (disinherit && (disinherit === '*' || disinherit.split(' ').indexOf(attributeName) >= 0)) {\n        return 'unset'\n      }\n    }\n    return attributeValue\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} attributeName\n   * @returns {string | null}\n   */\n  function getClosestAttributeValue(elt, attributeName) {\n    let closestAttr = null\n    getClosestMatch(elt, function(e) {\n      return !!(closestAttr = getAttributeValueWithDisinheritance(elt, asElement(e), attributeName))\n    })\n    if (closestAttr !== 'unset') {\n      return closestAttr\n    }\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {string} selector\n   * @returns {boolean}\n   */\n  function matches(elt, selector) {\n    return elt instanceof Element && elt.matches(selector)\n  }\n\n  /**\n   * @param {string} str\n   * @returns {string}\n   */\n  function getStartTag(str) {\n    const tagMatcher = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i\n    const match = tagMatcher.exec(str)\n    if (match) {\n      return match[1].toLowerCase()\n    } else {\n      return ''\n    }\n  }\n\n  /**\n   * @param {string} resp\n   * @returns {Document}\n   */\n  function parseHTML(resp) {\n    const parser = new DOMParser()\n    return parser.parseFromString(resp, 'text/html')\n  }\n\n  /**\n   * @param {DocumentFragment} fragment\n   * @param {Node} elt\n   */\n  function takeChildrenFor(fragment, elt) {\n    while (elt.childNodes.length > 0) {\n      fragment.append(elt.childNodes[0])\n    }\n  }\n\n  /**\n   * @param {HTMLScriptElement} script\n   * @returns {HTMLScriptElement}\n   */\n  function duplicateScript(script) {\n    const newScript = getDocument().createElement('script')\n    forEach(script.attributes, function(attr) {\n      newScript.setAttribute(attr.name, attr.value)\n    })\n    newScript.textContent = script.textContent\n    newScript.async = false\n    if (htmx.config.inlineScriptNonce) {\n      newScript.nonce = htmx.config.inlineScriptNonce\n    }\n    return newScript\n  }\n\n  /**\n   * @param {HTMLScriptElement} script\n   * @returns {boolean}\n   */\n  function isJavaScriptScriptNode(script) {\n    return script.matches('script') && (script.type === 'text/javascript' || script.type === 'module' || script.type === '')\n  }\n\n  /**\n   * we have to make new copies of script tags that we are going to insert because\n   * SOME browsers (not saying who, but it involves an element and an animal) don't\n   * execute scripts created in <template> tags when they are inserted into the DOM\n   * and all the others do lmao\n   * @param {DocumentFragment} fragment\n   */\n  function normalizeScriptTags(fragment) {\n    Array.from(fragment.querySelectorAll('script')).forEach(/** @param {HTMLScriptElement} script */ (script) => {\n      if (isJavaScriptScriptNode(script)) {\n        const newScript = duplicateScript(script)\n        const parent = script.parentNode\n        try {\n          parent.insertBefore(newScript, script)\n        } catch (e) {\n          logError(e)\n        } finally {\n          script.remove()\n        }\n      }\n    })\n  }\n\n  /**\n   * @typedef {DocumentFragment & {title?: string}} DocumentFragmentWithTitle\n   * @description  a document fragment representing the response HTML, including\n   * a `title` property for any title information found\n   */\n\n  /**\n   * @param {string} response HTML\n   * @returns {DocumentFragmentWithTitle}\n   */\n  function makeFragment(response) {\n    // strip head tag to determine shape of response we are dealing with\n    const responseWithNoHead = response.replace(/<head(\\s[^>]*)?>[\\s\\S]*?<\\/head>/i, '')\n    const startTag = getStartTag(responseWithNoHead)\n    /** @type DocumentFragmentWithTitle */\n    let fragment\n    if (startTag === 'html') {\n      // if it is a full document, parse it and return the body\n      fragment = /** @type DocumentFragmentWithTitle */ (new DocumentFragment())\n      const doc = parseHTML(response)\n      takeChildrenFor(fragment, doc.body)\n      fragment.title = doc.title\n    } else if (startTag === 'body') {\n      // parse body w/o wrapping in template\n      fragment = /** @type DocumentFragmentWithTitle */ (new DocumentFragment())\n      const doc = parseHTML(responseWithNoHead)\n      takeChildrenFor(fragment, doc.body)\n      fragment.title = doc.title\n    } else {\n      // otherwise we have non-body partial HTML content, so wrap it in a template to maximize parsing flexibility\n      const doc = parseHTML('<body><template class=\"internal-htmx-wrapper\">' + responseWithNoHead + '</template></body>')\n      fragment = /** @type DocumentFragmentWithTitle */ (doc.querySelector('template').content)\n      // extract title into fragment for later processing\n      fragment.title = doc.title\n\n      // for legacy reasons we support a title tag at the root level of non-body responses, so we need to handle it\n      var titleElement = fragment.querySelector('title')\n      if (titleElement && titleElement.parentNode === fragment) {\n        titleElement.remove()\n        fragment.title = titleElement.innerText\n      }\n    }\n    if (fragment) {\n      if (htmx.config.allowScriptTags) {\n        normalizeScriptTags(fragment)\n      } else {\n        // remove all script tags if scripts are disabled\n        fragment.querySelectorAll('script').forEach((script) => script.remove())\n      }\n    }\n    return fragment\n  }\n\n  /**\n   * @param {Function} func\n   */\n  function maybeCall(func) {\n    if (func) {\n      func()\n    }\n  }\n\n  /**\n   * @param {any} o\n   * @param {string} type\n   * @returns\n   */\n  function isType(o, type) {\n    return Object.prototype.toString.call(o) === '[object ' + type + ']'\n  }\n\n  /**\n   * @param {*} o\n   * @returns {o is Function}\n   */\n  function isFunction(o) {\n    return typeof o === 'function'\n  }\n\n  /**\n   * @param {*} o\n   * @returns {o is Object}\n   */\n  function isRawObject(o) {\n    return isType(o, 'Object')\n  }\n\n  /**\n   * @typedef {Object} OnHandler\n   * @property {(keyof HTMLElementEventMap)|string} event\n   * @property {EventListener} listener\n   */\n\n  /**\n   * @typedef {Object} ListenerInfo\n   * @property {string} trigger\n   * @property {EventListener} listener\n   * @property {EventTarget} on\n   */\n\n  /**\n   * @typedef {Object} HtmxNodeInternalData\n   * Element data\n   * @property {number} [initHash]\n   * @property {boolean} [boosted]\n   * @property {OnHandler[]} [onHandlers]\n   * @property {number} [timeout]\n   * @property {ListenerInfo[]} [listenerInfos]\n   * @property {boolean} [cancelled]\n   * @property {boolean} [triggeredOnce]\n   * @property {number} [delayed]\n   * @property {number|null} [throttle]\n   * @property {WeakMap<HtmxTriggerSpecification,WeakMap<EventTarget,string>>} [lastValue]\n   * @property {boolean} [loaded]\n   * @property {string} [path]\n   * @property {string} [verb]\n   * @property {boolean} [polling]\n   * @property {HTMLButtonElement|HTMLInputElement|null} [lastButtonClicked]\n   * @property {number} [requestCount]\n   * @property {XMLHttpRequest} [xhr]\n   * @property {(() => void)[]} [queuedRequests]\n   * @property {boolean} [abortable]\n   * @property {boolean} [firstInitCompleted]\n   *\n   * Event data\n   * @property {HtmxTriggerSpecification} [triggerSpec]\n   * @property {EventTarget[]} [handledFor]\n   */\n\n  /**\n   * getInternalData retrieves \"private\" data stored by htmx within an element\n   * @param {EventTarget|Event} elt\n   * @returns {HtmxNodeInternalData}\n   */\n  function getInternalData(elt) {\n    const dataProp = 'htmx-internal-data'\n    let data = elt[dataProp]\n    if (!data) {\n      data = elt[dataProp] = {}\n    }\n    return data\n  }\n\n  /**\n   * toArray converts an ArrayLike object into a real array.\n   * @template T\n   * @param {ArrayLike<T>} arr\n   * @returns {T[]}\n   */\n  function toArray(arr) {\n    const returnArr = []\n    if (arr) {\n      for (let i = 0; i < arr.length; i++) {\n        returnArr.push(arr[i])\n      }\n    }\n    return returnArr\n  }\n\n  /**\n   * @template T\n   * @param {T[]|NamedNodeMap|HTMLCollection|HTMLFormControlsCollection|ArrayLike<T>} arr\n   * @param {(T) => void} func\n   */\n  function forEach(arr, func) {\n    if (arr) {\n      for (let i = 0; i < arr.length; i++) {\n        func(arr[i])\n      }\n    }\n  }\n\n  /**\n   * @param {Element} el\n   * @returns {boolean}\n   */\n  function isScrolledIntoView(el) {\n    const rect = el.getBoundingClientRect()\n    const elemTop = rect.top\n    const elemBottom = rect.bottom\n    return elemTop < window.innerHeight && elemBottom >= 0\n  }\n\n  /**\n   * Checks whether the element is in the document (includes shadow roots).\n   * This function this is a slight misnomer; it will return true even for elements in the head.\n   *\n   * @param {Node} elt\n   * @returns {boolean}\n   */\n  function bodyContains(elt) {\n    return elt.getRootNode({ composed: true }) === document\n  }\n\n  /**\n   * @param {string} trigger\n   * @returns {string[]}\n   */\n  function splitOnWhitespace(trigger) {\n    return trigger.trim().split(/\\s+/)\n  }\n\n  /**\n   * mergeObjects takes all the keys from\n   * obj2 and duplicates them into obj1\n   * @template T1\n   * @template T2\n   * @param {T1} obj1\n   * @param {T2} obj2\n   * @returns {T1 & T2}\n   */\n  function mergeObjects(obj1, obj2) {\n    for (const key in obj2) {\n      if (obj2.hasOwnProperty(key)) {\n        // @ts-ignore tsc doesn't seem to properly handle types merging\n        obj1[key] = obj2[key]\n      }\n    }\n    // @ts-ignore tsc doesn't seem to properly handle types merging\n    return obj1\n  }\n\n  /**\n   * @param {string} jString\n   * @returns {any|null}\n   */\n  function parseJSON(jString) {\n    try {\n      return JSON.parse(jString)\n    } catch (error) {\n      logError(error)\n      return null\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  function canAccessLocalStorage() {\n    const test = 'htmx:sessionStorageTest'\n    try {\n      sessionStorage.setItem(test, test)\n      sessionStorage.removeItem(test)\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  function normalizePath(path) {\n    // use dummy base URL to allow normalize on path only\n    const url = new URL(path, 'http://x')\n    if (url) {\n      path = url.pathname + url.search\n    }\n    // remove trailing slash, unless index page\n    if (path != '/') {\n      path = path.replace(/\\/+$/, '')\n    }\n    return path\n  }\n\n  //= =========================================================================================\n  // public API\n  //= =========================================================================================\n\n  /**\n   * @param {string} str\n   * @returns {any}\n   */\n  function internalEval(str) {\n    return maybeEval(getDocument().body, function() {\n      return eval(str)\n    })\n  }\n\n  /**\n   * Adds a callback for the **htmx:load** event. This can be used to process new content, for example initializing the content with a javascript library\n   *\n   * @see https://htmx.org/api/#onLoad\n   *\n   * @param {(elt: Node) => void} callback the callback to call on newly loaded content\n   * @returns {EventListener}\n   */\n  function onLoadHelper(callback) {\n    const value = htmx.on('htmx:load', /** @param {CustomEvent} evt */ function(evt) {\n      callback(evt.detail.elt)\n    })\n    return value\n  }\n\n  /**\n   * Log all htmx events, useful for debugging.\n   *\n   * @see https://htmx.org/api/#logAll\n   */\n  function logAll() {\n    htmx.logger = function(elt, event, data) {\n      if (console) {\n        console.log(event, elt, data)\n      }\n    }\n  }\n\n  function logNone() {\n    htmx.logger = null\n  }\n\n  /**\n   * Finds an element matching the selector\n   *\n   * @see https://htmx.org/api/#find\n   *\n   * @param {ParentNode|string} eltOrSelector  the root element to find the matching element in, inclusive | the selector to match\n   * @param {string} [selector] the selector to match\n   * @returns {Element|null}\n   */\n  function find(eltOrSelector, selector) {\n    if (typeof eltOrSelector !== 'string') {\n      return eltOrSelector.querySelector(selector)\n    } else {\n      return find(getDocument(), eltOrSelector)\n    }\n  }\n\n  /**\n   * Finds all elements matching the selector\n   *\n   * @see https://htmx.org/api/#findAll\n   *\n   * @param {ParentNode|string} eltOrSelector the root element to find the matching elements in, inclusive | the selector to match\n   * @param {string} [selector] the selector to match\n   * @returns {NodeListOf<Element>}\n   */\n  function findAll(eltOrSelector, selector) {\n    if (typeof eltOrSelector !== 'string') {\n      return eltOrSelector.querySelectorAll(selector)\n    } else {\n      return findAll(getDocument(), eltOrSelector)\n    }\n  }\n\n  /**\n   * @returns Window\n   */\n  function getWindow() {\n    return window\n  }\n\n  /**\n   * Removes an element from the DOM\n   *\n   * @see https://htmx.org/api/#remove\n   *\n   * @param {Node} elt\n   * @param {number} [delay]\n   */\n  function removeElement(elt, delay) {\n    elt = resolveTarget(elt)\n    if (delay) {\n      getWindow().setTimeout(function() {\n        removeElement(elt)\n        elt = null\n      }, delay)\n    } else {\n      parentElt(elt).removeChild(elt)\n    }\n  }\n\n  /**\n   * @param {any} elt\n   * @return {Element|null}\n   */\n  function asElement(elt) {\n    return elt instanceof Element ? elt : null\n  }\n\n  /**\n   * @param {any} elt\n   * @return {HTMLElement|null}\n   */\n  function asHtmlElement(elt) {\n    return elt instanceof HTMLElement ? elt : null\n  }\n\n  /**\n   * @param {any} value\n   * @return {string|null}\n   */\n  function asString(value) {\n    return typeof value === 'string' ? value : null\n  }\n\n  /**\n   * @param {EventTarget} elt\n   * @return {ParentNode|null}\n   */\n  function asParentNode(elt) {\n    return elt instanceof Element || elt instanceof Document || elt instanceof DocumentFragment ? elt : null\n  }\n\n  /**\n   * This method adds a class to the given element.\n   *\n   * @see https://htmx.org/api/#addClass\n   *\n   * @param {Element|string} elt the element to add the class to\n   * @param {string} clazz the class to add\n   * @param {number} [delay] the delay (in milliseconds) before class is added\n   */\n  function addClassToElement(elt, clazz, delay) {\n    elt = asElement(resolveTarget(elt))\n    if (!elt) {\n      return\n    }\n    if (delay) {\n      getWindow().setTimeout(function() {\n        addClassToElement(elt, clazz)\n        elt = null\n      }, delay)\n    } else {\n      elt.classList && elt.classList.add(clazz)\n    }\n  }\n\n  /**\n   * Removes a class from the given element\n   *\n   * @see https://htmx.org/api/#removeClass\n   *\n   * @param {Node|string} node element to remove the class from\n   * @param {string} clazz the class to remove\n   * @param {number} [delay] the delay (in milliseconds before class is removed)\n   */\n  function removeClassFromElement(node, clazz, delay) {\n    let elt = asElement(resolveTarget(node))\n    if (!elt) {\n      return\n    }\n    if (delay) {\n      getWindow().setTimeout(function() {\n        removeClassFromElement(elt, clazz)\n        elt = null\n      }, delay)\n    } else {\n      if (elt.classList) {\n        elt.classList.remove(clazz)\n        // if there are no classes left, remove the class attribute\n        if (elt.classList.length === 0) {\n          elt.removeAttribute('class')\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles the given class on an element\n   *\n   * @see https://htmx.org/api/#toggleClass\n   *\n   * @param {Element|string} elt the element to toggle the class on\n   * @param {string} clazz the class to toggle\n   */\n  function toggleClassOnElement(elt, clazz) {\n    elt = resolveTarget(elt)\n    elt.classList.toggle(clazz)\n  }\n\n  /**\n   * Takes the given class from its siblings, so that among its siblings, only the given element will have the class.\n   *\n   * @see https://htmx.org/api/#takeClass\n   *\n   * @param {Node|string} elt the element that will take the class\n   * @param {string} clazz the class to take\n   */\n  function takeClassForElement(elt, clazz) {\n    elt = resolveTarget(elt)\n    forEach(elt.parentElement.children, function(child) {\n      removeClassFromElement(child, clazz)\n    })\n    addClassToElement(asElement(elt), clazz)\n  }\n\n  /**\n   * Finds the closest matching element in the given elements parentage, inclusive of the element\n   *\n   * @see https://htmx.org/api/#closest\n   *\n   * @param {Element|string} elt the element to find the selector from\n   * @param {string} selector the selector to find\n   * @returns {Element|null}\n   */\n  function closest(elt, selector) {\n    elt = asElement(resolveTarget(elt))\n    if (elt) {\n      return elt.closest(selector)\n    }\n    return null\n  }\n\n  /**\n   * @param {string} str\n   * @param {string} prefix\n   * @returns {boolean}\n   */\n  function startsWith(str, prefix) {\n    return str.substring(0, prefix.length) === prefix\n  }\n\n  /**\n   * @param {string} str\n   * @param {string} suffix\n   * @returns {boolean}\n   */\n  function endsWith(str, suffix) {\n    return str.substring(str.length - suffix.length) === suffix\n  }\n\n  /**\n   * @param {string} selector\n   * @returns {string}\n   */\n  function normalizeSelector(selector) {\n    const trimmedSelector = selector.trim()\n    if (startsWith(trimmedSelector, '<') && endsWith(trimmedSelector, '/>')) {\n      return trimmedSelector.substring(1, trimmedSelector.length - 2)\n    } else {\n      return trimmedSelector\n    }\n  }\n\n  /**\n   * @param {Node|Element|Document|string} elt\n   * @param {string} selector\n   * @param {boolean=} global\n   * @returns {(Node|Window)[]}\n   */\n  function querySelectorAllExt(elt, selector, global) {\n    if (selector.indexOf('global ') === 0) {\n      return querySelectorAllExt(elt, selector.slice(7), true)\n    }\n\n    elt = resolveTarget(elt)\n\n    const parts = []\n    {\n      let chevronsCount = 0\n      let offset = 0\n      for (let i = 0; i < selector.length; i++) {\n        const char = selector[i]\n        if (char === ',' && chevronsCount === 0) {\n          parts.push(selector.substring(offset, i))\n          offset = i + 1\n          continue\n        }\n        if (char === '<') {\n          chevronsCount++\n        } else if (char === '/' && i < selector.length - 1 && selector[i + 1] === '>') {\n          chevronsCount--\n        }\n      }\n      if (offset < selector.length) {\n        parts.push(selector.substring(offset))\n      }\n    }\n\n    const result = []\n    const unprocessedParts = []\n    while (parts.length > 0) {\n      const selector = normalizeSelector(parts.shift())\n      let item\n      if (selector.indexOf('closest ') === 0) {\n        item = closest(asElement(elt), normalizeSelector(selector.slice(8)))\n      } else if (selector.indexOf('find ') === 0) {\n        item = find(asParentNode(elt), normalizeSelector(selector.slice(5)))\n      } else if (selector === 'next' || selector === 'nextElementSibling') {\n        item = asElement(elt).nextElementSibling\n      } else if (selector.indexOf('next ') === 0) {\n        item = scanForwardQuery(elt, normalizeSelector(selector.slice(5)), !!global)\n      } else if (selector === 'previous' || selector === 'previousElementSibling') {\n        item = asElement(elt).previousElementSibling\n      } else if (selector.indexOf('previous ') === 0) {\n        item = scanBackwardsQuery(elt, normalizeSelector(selector.slice(9)), !!global)\n      } else if (selector === 'document') {\n        item = document\n      } else if (selector === 'window') {\n        item = window\n      } else if (selector === 'body') {\n        item = document.body\n      } else if (selector === 'root') {\n        item = getRootNode(elt, !!global)\n      } else if (selector === 'host') {\n        item = (/** @type ShadowRoot */(elt.getRootNode())).host\n      } else {\n        unprocessedParts.push(selector)\n      }\n\n      if (item) {\n        result.push(item)\n      }\n    }\n\n    if (unprocessedParts.length > 0) {\n      const standardSelector = unprocessedParts.join(',')\n      const rootNode = asParentNode(getRootNode(elt, !!global))\n      result.push(...toArray(rootNode.querySelectorAll(standardSelector)))\n    }\n\n    return result\n  }\n\n  /**\n   * @param {Node} start\n   * @param {string} match\n   * @param {boolean} global\n   * @returns {Element}\n   */\n  var scanForwardQuery = function(start, match, global) {\n    const results = asParentNode(getRootNode(start, global)).querySelectorAll(match)\n    for (let i = 0; i < results.length; i++) {\n      const elt = results[i]\n      if (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_PRECEDING) {\n        return elt\n      }\n    }\n  }\n\n  /**\n   * @param {Node} start\n   * @param {string} match\n   * @param {boolean} global\n   * @returns {Element}\n   */\n  var scanBackwardsQuery = function(start, match, global) {\n    const results = asParentNode(getRootNode(start, global)).querySelectorAll(match)\n    for (let i = results.length - 1; i >= 0; i--) {\n      const elt = results[i]\n      if (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_FOLLOWING) {\n        return elt\n      }\n    }\n  }\n\n  /**\n   * @param {Node|string} eltOrSelector\n   * @param {string=} selector\n   * @returns {Node|Window}\n   */\n  function querySelectorExt(eltOrSelector, selector) {\n    if (typeof eltOrSelector !== 'string') {\n      return querySelectorAllExt(eltOrSelector, selector)[0]\n    } else {\n      return querySelectorAllExt(getDocument().body, eltOrSelector)[0]\n    }\n  }\n\n  /**\n   * @template {EventTarget} T\n   * @param {T|string} eltOrSelector\n   * @param {T} [context]\n   * @returns {Element|T|null}\n   */\n  function resolveTarget(eltOrSelector, context) {\n    if (typeof eltOrSelector === 'string') {\n      return find(asParentNode(context) || document, eltOrSelector)\n    } else {\n      return eltOrSelector\n    }\n  }\n\n  /**\n   * @typedef {keyof HTMLElementEventMap|string} AnyEventName\n   */\n\n  /**\n   * @typedef {Object} EventArgs\n   * @property {EventTarget} target\n   * @property {AnyEventName} event\n   * @property {EventListener} listener\n   * @property {Object|boolean} options\n   */\n\n  /**\n   * @param {EventTarget|AnyEventName} arg1\n   * @param {AnyEventName|EventListener} arg2\n   * @param {EventListener|Object|boolean} [arg3]\n   * @param {Object|boolean} [arg4]\n   * @returns {EventArgs}\n   */\n  function processEventArgs(arg1, arg2, arg3, arg4) {\n    if (isFunction(arg2)) {\n      return {\n        target: getDocument().body,\n        event: asString(arg1),\n        listener: arg2,\n        options: arg3\n      }\n    } else {\n      return {\n        target: resolveTarget(arg1),\n        event: asString(arg2),\n        listener: arg3,\n        options: arg4\n      }\n    }\n  }\n\n  /**\n   * Adds an event listener to an element\n   *\n   * @see https://htmx.org/api/#on\n   *\n   * @param {EventTarget|string} arg1 the element to add the listener to | the event name to add the listener for\n   * @param {string|EventListener} arg2 the event name to add the listener for | the listener to add\n   * @param {EventListener|Object|boolean} [arg3] the listener to add | options to add\n   * @param {Object|boolean} [arg4] options to add\n   * @returns {EventListener}\n   */\n  function addEventListenerImpl(arg1, arg2, arg3, arg4) {\n    ready(function() {\n      const eventArgs = processEventArgs(arg1, arg2, arg3, arg4)\n      eventArgs.target.addEventListener(eventArgs.event, eventArgs.listener, eventArgs.options)\n    })\n    const b = isFunction(arg2)\n    return b ? arg2 : arg3\n  }\n\n  /**\n   * Removes an event listener from an element\n   *\n   * @see https://htmx.org/api/#off\n   *\n   * @param {EventTarget|string} arg1 the element to remove the listener from | the event name to remove the listener from\n   * @param {string|EventListener} arg2 the event name to remove the listener from | the listener to remove\n   * @param {EventListener} [arg3] the listener to remove\n   * @returns {EventListener}\n   */\n  function removeEventListenerImpl(arg1, arg2, arg3) {\n    ready(function() {\n      const eventArgs = processEventArgs(arg1, arg2, arg3)\n      eventArgs.target.removeEventListener(eventArgs.event, eventArgs.listener)\n    })\n    return isFunction(arg2) ? arg2 : arg3\n  }\n\n  //= ===================================================================\n  // Node processing\n  //= ===================================================================\n\n  const DUMMY_ELT = getDocument().createElement('output') // dummy element for bad selectors\n  /**\n   * @param {Element} elt\n   * @param {string} attrName\n   * @returns {(Node|Window)[]}\n   */\n  function findAttributeTargets(elt, attrName) {\n    const attrTarget = getClosestAttributeValue(elt, attrName)\n    if (attrTarget) {\n      if (attrTarget === 'this') {\n        return [findThisElement(elt, attrName)]\n      } else {\n        const result = querySelectorAllExt(elt, attrTarget)\n        // find `inherit` whole word in value, make sure it's surrounded by commas or is at the start/end of string\n        const shouldInherit = /(^|,)(\\s*)inherit(\\s*)($|,)/.test(attrTarget)\n        if (shouldInherit) {\n          const eltToInheritFrom = asElement(getClosestMatch(elt, function(parent) {\n            return parent !== elt && hasAttribute(asElement(parent), attrName)\n          }))\n          if (eltToInheritFrom) {\n            result.push(...findAttributeTargets(eltToInheritFrom, attrName))\n          }\n        }\n        if (result.length === 0) {\n          logError('The selector \"' + attrTarget + '\" on ' + attrName + ' returned no matches!')\n          return [DUMMY_ELT]\n        } else {\n          return result\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} attribute\n   * @returns {Element|null}\n   */\n  function findThisElement(elt, attribute) {\n    return asElement(getClosestMatch(elt, function(elt) {\n      return getAttributeValue(asElement(elt), attribute) != null\n    }))\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {Node|Window|null}\n   */\n  function getTarget(elt) {\n    const targetStr = getClosestAttributeValue(elt, 'hx-target')\n    if (targetStr) {\n      if (targetStr === 'this') {\n        return findThisElement(elt, 'hx-target')\n      } else {\n        return querySelectorExt(elt, targetStr)\n      }\n    } else {\n      const data = getInternalData(elt)\n      if (data.boosted) {\n        return getDocument().body\n      } else {\n        return elt\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @returns {boolean}\n   */\n  function shouldSettleAttribute(name) {\n    return htmx.config.attributesToSettle.includes(name)\n  }\n\n  /**\n   * @param {Element} mergeTo\n   * @param {Element} mergeFrom\n   */\n  function cloneAttributes(mergeTo, mergeFrom) {\n    forEach(Array.from(mergeTo.attributes), function(attr) {\n      if (!mergeFrom.hasAttribute(attr.name) && shouldSettleAttribute(attr.name)) {\n        mergeTo.removeAttribute(attr.name)\n      }\n    })\n    forEach(mergeFrom.attributes, function(attr) {\n      if (shouldSettleAttribute(attr.name)) {\n        mergeTo.setAttribute(attr.name, attr.value)\n      }\n    })\n  }\n\n  /**\n   * @param {HtmxSwapStyle} swapStyle\n   * @param {Element} target\n   * @returns {boolean}\n   */\n  function isInlineSwap(swapStyle, target) {\n    const extensions = getExtensions(target)\n    for (let i = 0; i < extensions.length; i++) {\n      const extension = extensions[i]\n      try {\n        if (extension.isInlineSwap(swapStyle)) {\n          return true\n        }\n      } catch (e) {\n        logError(e)\n      }\n    }\n    return swapStyle === 'outerHTML'\n  }\n\n  /**\n   * @param {string} oobValue\n   * @param {Element} oobElement\n   * @param {HtmxSettleInfo} settleInfo\n   * @param {Node|Document} [rootNode]\n   * @returns\n   */\n  function oobSwap(oobValue, oobElement, settleInfo, rootNode) {\n    rootNode = rootNode || getDocument()\n    let selector = '#' + CSS.escape(getRawAttribute(oobElement, 'id'))\n    /** @type HtmxSwapStyle */\n    let swapStyle = 'outerHTML'\n    if (oobValue === 'true') {\n      // do nothing\n    } else if (oobValue.indexOf(':') > 0) {\n      swapStyle = oobValue.substring(0, oobValue.indexOf(':'))\n      selector = oobValue.substring(oobValue.indexOf(':') + 1)\n    } else {\n      swapStyle = oobValue\n    }\n    oobElement.removeAttribute('hx-swap-oob')\n    oobElement.removeAttribute('data-hx-swap-oob')\n\n    const targets = querySelectorAllExt(rootNode, selector, false)\n    if (targets.length) {\n      forEach(\n        targets,\n        function(target) {\n          let fragment\n          const oobElementClone = oobElement.cloneNode(true)\n          fragment = getDocument().createDocumentFragment()\n          fragment.appendChild(oobElementClone)\n          if (!isInlineSwap(swapStyle, target)) {\n            fragment = asParentNode(oobElementClone) // if this is not an inline swap, we use the content of the node, not the node itself\n          }\n\n          const beforeSwapDetails = { shouldSwap: true, target, fragment }\n          if (!triggerEvent(target, 'htmx:oobBeforeSwap', beforeSwapDetails)) return\n\n          target = beforeSwapDetails.target // allow re-targeting\n          if (beforeSwapDetails.shouldSwap) {\n            handlePreservedElements(fragment)\n            swapWithStyle(swapStyle, target, target, fragment, settleInfo)\n            restorePreservedElements()\n          }\n          forEach(settleInfo.elts, function(elt) {\n            triggerEvent(elt, 'htmx:oobAfterSwap', beforeSwapDetails)\n          })\n        }\n      )\n      oobElement.parentNode.removeChild(oobElement)\n    } else {\n      oobElement.parentNode.removeChild(oobElement)\n      triggerErrorEvent(getDocument().body, 'htmx:oobErrorNoTarget', { content: oobElement })\n    }\n    return oobValue\n  }\n\n  function restorePreservedElements() {\n    const pantry = find('#--htmx-preserve-pantry--')\n    if (pantry) {\n      for (const preservedElt of [...pantry.children]) {\n        const existingElement = find('#' + preservedElt.id)\n        // @ts-ignore - use proposed moveBefore feature\n        existingElement.parentNode.moveBefore(preservedElt, existingElement)\n        existingElement.remove()\n      }\n      pantry.remove()\n    }\n  }\n\n  /**\n   * @param {DocumentFragment|ParentNode} fragment\n   */\n  function handlePreservedElements(fragment) {\n    forEach(findAll(fragment, '[hx-preserve], [data-hx-preserve]'), function(preservedElt) {\n      const id = getAttributeValue(preservedElt, 'id')\n      const existingElement = getDocument().getElementById(id)\n      if (existingElement != null) {\n        if (preservedElt.moveBefore) { // if the moveBefore API exists, use it\n          // get or create a storage spot for stuff\n          let pantry = find('#--htmx-preserve-pantry--')\n          if (pantry == null) {\n            getDocument().body.insertAdjacentHTML('afterend', \"<div id='--htmx-preserve-pantry--'></div>\")\n            pantry = find('#--htmx-preserve-pantry--')\n          }\n          // @ts-ignore - use proposed moveBefore feature\n          pantry.moveBefore(existingElement, null)\n        } else {\n          preservedElt.parentNode.replaceChild(existingElement, preservedElt)\n        }\n      }\n    })\n  }\n\n  /**\n   * @param {Node} parentNode\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function handleAttributes(parentNode, fragment, settleInfo) {\n    forEach(fragment.querySelectorAll('[id]'), function(newNode) {\n      const id = getRawAttribute(newNode, 'id')\n      if (id && id.length > 0) {\n        const normalizedId = id.replace(\"'\", \"\\\\'\")\n        const normalizedTag = newNode.tagName.replace(':', '\\\\:')\n        const parentElt = asParentNode(parentNode)\n        const oldNode = parentElt && parentElt.querySelector(normalizedTag + \"[id='\" + normalizedId + \"']\")\n        if (oldNode && oldNode !== parentElt) {\n          const newAttributes = newNode.cloneNode()\n          cloneAttributes(newNode, oldNode)\n          settleInfo.tasks.push(function() {\n            cloneAttributes(newNode, newAttributes)\n          })\n        }\n      }\n    })\n  }\n\n  /**\n   * @param {Node} child\n   * @returns {HtmxSettleTask}\n   */\n  function makeAjaxLoadTask(child) {\n    return function() {\n      removeClassFromElement(child, htmx.config.addedClass)\n      processNode(asElement(child))\n      processFocus(asParentNode(child))\n      triggerEvent(child, 'htmx:load')\n    }\n  }\n\n  /**\n   * @param {ParentNode} child\n   */\n  function processFocus(child) {\n    const autofocus = '[autofocus]'\n    const autoFocusedElt = asHtmlElement(matches(child, autofocus) ? child : child.querySelector(autofocus))\n    if (autoFocusedElt != null) {\n      autoFocusedElt.focus()\n    }\n  }\n\n  /**\n   * @param {Node} parentNode\n   * @param {Node} insertBefore\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function insertNodesBefore(parentNode, insertBefore, fragment, settleInfo) {\n    handleAttributes(parentNode, fragment, settleInfo)\n    while (fragment.childNodes.length > 0) {\n      const child = fragment.firstChild\n      addClassToElement(asElement(child), htmx.config.addedClass)\n      parentNode.insertBefore(child, insertBefore)\n      if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n        settleInfo.tasks.push(makeAjaxLoadTask(child))\n      }\n    }\n  }\n\n  /**\n   * based on https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0,\n   * derived from Java's string hashcode implementation\n   * @param {string} string\n   * @param {number} hash\n   * @returns {number}\n   */\n  function stringHash(string, hash) {\n    let char = 0\n    while (char < string.length) {\n      hash = (hash << 5) - hash + string.charCodeAt(char++) | 0 // bitwise or ensures we have a 32-bit int\n    }\n    return hash\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {number}\n   */\n  function attributeHash(elt) {\n    let hash = 0\n    for (let i = 0; i < elt.attributes.length; i++) {\n      const attribute = elt.attributes[i]\n      if (attribute.value) { // only include attributes w/ actual values (empty is same as non-existent)\n        hash = stringHash(attribute.name, hash)\n        hash = stringHash(attribute.value, hash)\n      }\n    }\n    return hash\n  }\n\n  /**\n   * @param {EventTarget} elt\n   */\n  function deInitOnHandlers(elt) {\n    const internalData = getInternalData(elt)\n    if (internalData.onHandlers) {\n      for (let i = 0; i < internalData.onHandlers.length; i++) {\n        const handlerInfo = internalData.onHandlers[i]\n        removeEventListenerImpl(elt, handlerInfo.event, handlerInfo.listener)\n      }\n      delete internalData.onHandlers\n    }\n  }\n\n  /**\n   * @param {Node} element\n   */\n  function deInitNode(element) {\n    const internalData = getInternalData(element)\n    if (internalData.timeout) {\n      clearTimeout(internalData.timeout)\n    }\n    if (internalData.listenerInfos) {\n      forEach(internalData.listenerInfos, function(info) {\n        if (info.on) {\n          removeEventListenerImpl(info.on, info.trigger, info.listener)\n        }\n      })\n    }\n    deInitOnHandlers(element)\n    forEach(Object.keys(internalData), function(key) { if (key !== 'firstInitCompleted') delete internalData[key] })\n  }\n\n  /**\n   * @param {Node} element\n   */\n  function cleanUpElement(element) {\n    triggerEvent(element, 'htmx:beforeCleanupElement')\n    deInitNode(element)\n    // @ts-ignore\n    forEach(element.children, function(child) { cleanUpElement(child) })\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapOuterHTML(target, fragment, settleInfo) {\n    if (target.tagName === 'BODY') { // special case the body to innerHTML because DocumentFragments can't contain a body elt unfortunately\n      return swapInnerHTML(target, fragment, settleInfo)\n    }\n    /** @type {Node} */\n    let newElt\n    const eltBeforeNewContent = target.previousSibling\n    const parentNode = parentElt(target)\n    if (!parentNode) { // when parent node disappears, we can't do anything\n      return\n    }\n    insertNodesBefore(parentNode, target, fragment, settleInfo)\n    if (eltBeforeNewContent == null) {\n      newElt = parentNode.firstChild\n    } else {\n      newElt = eltBeforeNewContent.nextSibling\n    }\n    settleInfo.elts = settleInfo.elts.filter(function(e) { return e !== target })\n    // scan through all newly added content and add all elements to the settle info so we trigger\n    // events properly on them\n    while (newElt && newElt !== target) {\n      if (newElt instanceof Element) {\n        settleInfo.elts.push(newElt)\n      }\n      newElt = newElt.nextSibling\n    }\n    cleanUpElement(target)\n    target.remove()\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapAfterBegin(target, fragment, settleInfo) {\n    return insertNodesBefore(target, target.firstChild, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapBeforeBegin(target, fragment, settleInfo) {\n    return insertNodesBefore(parentElt(target), target, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapBeforeEnd(target, fragment, settleInfo) {\n    return insertNodesBefore(target, null, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapAfterEnd(target, fragment, settleInfo) {\n    return insertNodesBefore(parentElt(target), target.nextSibling, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Element} target\n   */\n  function swapDelete(target) {\n    cleanUpElement(target)\n    const parent = parentElt(target)\n    if (parent) {\n      return parent.removeChild(target)\n    }\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapInnerHTML(target, fragment, settleInfo) {\n    const firstChild = target.firstChild\n    insertNodesBefore(target, firstChild, fragment, settleInfo)\n    if (firstChild) {\n      while (firstChild.nextSibling) {\n        cleanUpElement(firstChild.nextSibling)\n        target.removeChild(firstChild.nextSibling)\n      }\n      cleanUpElement(firstChild)\n      target.removeChild(firstChild)\n    }\n  }\n\n  /**\n   * @param {HtmxSwapStyle} swapStyle\n   * @param {Element} elt\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapWithStyle(swapStyle, elt, target, fragment, settleInfo) {\n    switch (swapStyle) {\n      case 'none':\n        return\n      case 'outerHTML':\n        swapOuterHTML(target, fragment, settleInfo)\n        return\n      case 'afterbegin':\n        swapAfterBegin(target, fragment, settleInfo)\n        return\n      case 'beforebegin':\n        swapBeforeBegin(target, fragment, settleInfo)\n        return\n      case 'beforeend':\n        swapBeforeEnd(target, fragment, settleInfo)\n        return\n      case 'afterend':\n        swapAfterEnd(target, fragment, settleInfo)\n        return\n      case 'delete':\n        swapDelete(target)\n        return\n      default:\n        var extensions = getExtensions(elt)\n        for (let i = 0; i < extensions.length; i++) {\n          const ext = extensions[i]\n          try {\n            const newElements = ext.handleSwap(swapStyle, target, fragment, settleInfo)\n            if (newElements) {\n              if (Array.isArray(newElements)) {\n                // if handleSwap returns an array (like) of elements, we handle them\n                for (let j = 0; j < newElements.length; j++) {\n                  const child = newElements[j]\n                  if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n                    settleInfo.tasks.push(makeAjaxLoadTask(child))\n                  }\n                }\n              }\n              return\n            }\n          } catch (e) {\n            logError(e)\n          }\n        }\n        if (swapStyle === 'innerHTML') {\n          swapInnerHTML(target, fragment, settleInfo)\n        } else {\n          swapWithStyle(htmx.config.defaultSwapStyle, elt, target, fragment, settleInfo)\n        }\n    }\n  }\n\n  /**\n   * @param {DocumentFragment} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   * @param {Node|Document} [rootNode]\n   */\n  function findAndSwapOobElements(fragment, settleInfo, rootNode) {\n    var oobElts = findAll(fragment, '[hx-swap-oob], [data-hx-swap-oob]')\n    forEach(oobElts, function(oobElement) {\n      if (htmx.config.allowNestedOobSwaps || oobElement.parentElement === null) {\n        const oobValue = getAttributeValue(oobElement, 'hx-swap-oob')\n        if (oobValue != null) {\n          oobSwap(oobValue, oobElement, settleInfo, rootNode)\n        }\n      } else {\n        oobElement.removeAttribute('hx-swap-oob')\n        oobElement.removeAttribute('data-hx-swap-oob')\n      }\n    })\n    return oobElts.length > 0\n  }\n\n  /**\n   * Implements complete swapping pipeline, including: delay, view transitions, focus and selection preservation,\n   * title updates, scroll, OOB swapping, normal swapping and settling\n   * @param {string|Element} target\n   * @param {string} content\n   * @param {HtmxSwapSpecification} swapSpec\n   * @param {SwapOptions} [swapOptions]\n   */\n  function swap(target, content, swapSpec, swapOptions) {\n    if (!swapOptions) {\n      swapOptions = {}\n    }\n    // optional transition API promise callbacks\n    let settleResolve = null\n    let settleReject = null\n\n    let doSwap = function() {\n      maybeCall(swapOptions.beforeSwapCallback)\n\n      target = resolveTarget(target)\n      const rootNode = swapOptions.contextElement ? getRootNode(swapOptions.contextElement, false) : getDocument()\n\n      // preserve focus and selection\n      const activeElt = document.activeElement\n      let selectionInfo = {}\n      selectionInfo = {\n        elt: activeElt,\n        // @ts-ignore\n        start: activeElt ? activeElt.selectionStart : null,\n        // @ts-ignore\n        end: activeElt ? activeElt.selectionEnd : null\n      }\n      const settleInfo = makeSettleInfo(target)\n\n      // For text content swaps, don't parse the response as HTML, just insert it\n      if (swapSpec.swapStyle === 'textContent') {\n        target.textContent = content\n      // Otherwise, make the fragment and process it\n      } else {\n        let fragment = makeFragment(content)\n\n        settleInfo.title = swapOptions.title || fragment.title\n        if (swapOptions.historyRequest) {\n          // @ts-ignore fragment can be a parentNode Element\n          fragment = fragment.querySelector('[hx-history-elt],[data-hx-history-elt]') || fragment\n        }\n\n        // select-oob swaps\n        if (swapOptions.selectOOB) {\n          const oobSelectValues = swapOptions.selectOOB.split(',')\n          for (let i = 0; i < oobSelectValues.length; i++) {\n            const oobSelectValue = oobSelectValues[i].split(':', 2)\n            let id = oobSelectValue[0].trim()\n            if (id.indexOf('#') === 0) {\n              id = id.substring(1)\n            }\n            const oobValue = oobSelectValue[1] || 'true'\n            const oobElement = fragment.querySelector('#' + id)\n            if (oobElement) {\n              oobSwap(oobValue, oobElement, settleInfo, rootNode)\n            }\n          }\n        }\n        // oob swaps\n        findAndSwapOobElements(fragment, settleInfo, rootNode)\n        forEach(findAll(fragment, 'template'), /** @param {HTMLTemplateElement} template */function(template) {\n          if (template.content && findAndSwapOobElements(template.content, settleInfo, rootNode)) {\n            // Avoid polluting the DOM with empty templates that were only used to encapsulate oob swap\n            template.remove()\n          }\n        })\n\n        // normal swap\n        if (swapOptions.select) {\n          const newFragment = getDocument().createDocumentFragment()\n          forEach(fragment.querySelectorAll(swapOptions.select), function(node) {\n            newFragment.appendChild(node)\n          })\n          fragment = newFragment\n        }\n        handlePreservedElements(fragment)\n        swapWithStyle(swapSpec.swapStyle, swapOptions.contextElement, target, fragment, settleInfo)\n        restorePreservedElements()\n      }\n\n      // apply saved focus and selection information to swapped content\n      if (selectionInfo.elt &&\n        !bodyContains(selectionInfo.elt) &&\n        getRawAttribute(selectionInfo.elt, 'id')) {\n        const newActiveElt = document.getElementById(getRawAttribute(selectionInfo.elt, 'id'))\n        const focusOptions = { preventScroll: swapSpec.focusScroll !== undefined ? !swapSpec.focusScroll : !htmx.config.defaultFocusScroll }\n        if (newActiveElt) {\n          // @ts-ignore\n          if (selectionInfo.start && newActiveElt.setSelectionRange) {\n            try {\n              // @ts-ignore\n              newActiveElt.setSelectionRange(selectionInfo.start, selectionInfo.end)\n            } catch (e) {\n              // the setSelectionRange method is present on fields that don't support it, so just let this fail\n            }\n          }\n          newActiveElt.focus(focusOptions)\n        }\n      }\n\n      target.classList.remove(htmx.config.swappingClass)\n      forEach(settleInfo.elts, function(elt) {\n        if (elt.classList) {\n          elt.classList.add(htmx.config.settlingClass)\n        }\n        triggerEvent(elt, 'htmx:afterSwap', swapOptions.eventInfo)\n      })\n      maybeCall(swapOptions.afterSwapCallback)\n\n      // merge in new title after swap but before settle\n      if (!swapSpec.ignoreTitle) {\n        handleTitle(settleInfo.title)\n      }\n\n      // settle\n      const doSettle = function() {\n        forEach(settleInfo.tasks, function(task) {\n          task.call()\n        })\n        forEach(settleInfo.elts, function(elt) {\n          if (elt.classList) {\n            elt.classList.remove(htmx.config.settlingClass)\n          }\n          triggerEvent(elt, 'htmx:afterSettle', swapOptions.eventInfo)\n        })\n\n        if (swapOptions.anchor) {\n          const anchorTarget = asElement(resolveTarget('#' + swapOptions.anchor))\n          if (anchorTarget) {\n            anchorTarget.scrollIntoView({ block: 'start', behavior: 'auto' })\n          }\n        }\n\n        updateScrollState(settleInfo.elts, swapSpec)\n        maybeCall(swapOptions.afterSettleCallback)\n        maybeCall(settleResolve)\n      }\n\n      if (swapSpec.settleDelay > 0) {\n        getWindow().setTimeout(doSettle, swapSpec.settleDelay)\n      } else {\n        doSettle()\n      }\n    }\n    let shouldTransition = htmx.config.globalViewTransitions\n    if (swapSpec.hasOwnProperty('transition')) {\n      shouldTransition = swapSpec.transition\n    }\n\n    const elt = swapOptions.contextElement || getDocument()\n\n    if (shouldTransition &&\n            triggerEvent(elt, 'htmx:beforeTransition', swapOptions.eventInfo) &&\n            typeof Promise !== 'undefined' &&\n            // @ts-ignore experimental feature atm\n            document.startViewTransition) {\n      const settlePromise = new Promise(function(_resolve, _reject) {\n        settleResolve = _resolve\n        settleReject = _reject\n      })\n      // wrap the original doSwap() in a call to startViewTransition()\n      const innerDoSwap = doSwap\n      doSwap = function() {\n        // @ts-ignore experimental feature atm\n        document.startViewTransition(function() {\n          innerDoSwap()\n          return settlePromise\n        })\n      }\n    }\n\n    try {\n      if (swapSpec?.swapDelay && swapSpec.swapDelay > 0) {\n        getWindow().setTimeout(doSwap, swapSpec.swapDelay)\n      } else {\n        doSwap()\n      }\n    } catch (e) {\n      triggerErrorEvent(elt, 'htmx:swapError', swapOptions.eventInfo)\n      maybeCall(settleReject)\n      throw e\n    }\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {string} header\n   * @param {EventTarget} elt\n   */\n  function handleTriggerHeader(xhr, header, elt) {\n    const triggerBody = xhr.getResponseHeader(header)\n    if (triggerBody.indexOf('{') === 0) {\n      const triggers = parseJSON(triggerBody)\n      for (const eventName in triggers) {\n        if (triggers.hasOwnProperty(eventName)) {\n          let detail = triggers[eventName]\n          if (isRawObject(detail)) {\n            // @ts-ignore\n            elt = detail.target !== undefined ? detail.target : elt\n          } else {\n            detail = { value: detail }\n          }\n          triggerEvent(elt, eventName, detail)\n        }\n      }\n    } else {\n      const eventNames = triggerBody.split(',')\n      for (let i = 0; i < eventNames.length; i++) {\n        triggerEvent(elt, eventNames[i].trim(), [])\n      }\n    }\n  }\n\n  const WHITESPACE = /\\s/\n  const WHITESPACE_OR_COMMA = /[\\s,]/\n  const SYMBOL_START = /[_$a-zA-Z]/\n  const SYMBOL_CONT = /[_$a-zA-Z0-9]/\n  const STRINGISH_START = ['\"', \"'\", '/']\n  const NOT_WHITESPACE = /[^\\s]/\n  const COMBINED_SELECTOR_START = /[{(]/\n  const COMBINED_SELECTOR_END = /[})]/\n\n  /**\n   * @param {string} str\n   * @returns {string[]}\n   */\n  function tokenizeString(str) {\n    /** @type string[] */\n    const tokens = []\n    let position = 0\n    while (position < str.length) {\n      if (SYMBOL_START.exec(str.charAt(position))) {\n        var startPosition = position\n        while (SYMBOL_CONT.exec(str.charAt(position + 1))) {\n          position++\n        }\n        tokens.push(str.substring(startPosition, position + 1))\n      } else if (STRINGISH_START.indexOf(str.charAt(position)) !== -1) {\n        const startChar = str.charAt(position)\n        var startPosition = position\n        position++\n        while (position < str.length && str.charAt(position) !== startChar) {\n          if (str.charAt(position) === '\\\\') {\n            position++\n          }\n          position++\n        }\n        tokens.push(str.substring(startPosition, position + 1))\n      } else {\n        const symbol = str.charAt(position)\n        tokens.push(symbol)\n      }\n      position++\n    }\n    return tokens\n  }\n\n  /**\n   * @param {string} token\n   * @param {string|null} last\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  function isPossibleRelativeReference(token, last, paramName) {\n    return SYMBOL_START.exec(token.charAt(0)) &&\n      token !== 'true' &&\n      token !== 'false' &&\n      token !== 'this' &&\n      token !== paramName &&\n      last !== '.'\n  }\n\n  /**\n   * @param {EventTarget|string} elt\n   * @param {string[]} tokens\n   * @param {string} paramName\n   * @returns {ConditionalFunction|null}\n   */\n  function maybeGenerateConditional(elt, tokens, paramName) {\n    if (tokens[0] === '[') {\n      tokens.shift()\n      let bracketCount = 1\n      let conditionalSource = ' return (function(' + paramName + '){ return ('\n      let last = null\n      while (tokens.length > 0) {\n        const token = tokens[0]\n        // @ts-ignore For some reason tsc doesn't understand the shift call, and thinks we're comparing the same value here, i.e. '[' vs ']'\n        if (token === ']') {\n          bracketCount--\n          if (bracketCount === 0) {\n            if (last === null) {\n              conditionalSource = conditionalSource + 'true'\n            }\n            tokens.shift()\n            conditionalSource += ')})'\n            try {\n              const conditionFunction = maybeEval(elt, function() {\n                return Function(conditionalSource)()\n              },\n              function() { return true })\n              conditionFunction.source = conditionalSource\n              return conditionFunction\n            } catch (e) {\n              triggerErrorEvent(getDocument().body, 'htmx:syntax:error', { error: e, source: conditionalSource })\n              return null\n            }\n          }\n        } else if (token === '[') {\n          bracketCount++\n        }\n        if (isPossibleRelativeReference(token, last, paramName)) {\n          conditionalSource += '((' + paramName + '.' + token + ') ? (' + paramName + '.' + token + ') : (window.' + token + '))'\n        } else {\n          conditionalSource = conditionalSource + token\n        }\n        last = tokens.shift()\n      }\n    }\n  }\n\n  /**\n   * @param {string[]} tokens\n   * @param {RegExp} match\n   * @returns {string}\n   */\n  function consumeUntil(tokens, match) {\n    let result = ''\n    while (tokens.length > 0 && !match.test(tokens[0])) {\n      result += tokens.shift()\n    }\n    return result\n  }\n\n  /**\n   * @param {string[]} tokens\n   * @returns {string}\n   */\n  function consumeCSSSelector(tokens) {\n    let result\n    if (tokens.length > 0 && COMBINED_SELECTOR_START.test(tokens[0])) {\n      tokens.shift()\n      result = consumeUntil(tokens, COMBINED_SELECTOR_END).trim()\n      tokens.shift()\n    } else {\n      result = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n    }\n    return result\n  }\n\n  const INPUT_SELECTOR = 'input, textarea, select'\n\n  /**\n   * @param {Element} elt\n   * @param {string} explicitTrigger\n   * @param {Object} cache for trigger specs\n   * @returns {HtmxTriggerSpecification[]}\n   */\n  function parseAndCacheTrigger(elt, explicitTrigger, cache) {\n    /** @type HtmxTriggerSpecification[] */\n    const triggerSpecs = []\n    const tokens = tokenizeString(explicitTrigger)\n    do {\n      consumeUntil(tokens, NOT_WHITESPACE)\n      const initialLength = tokens.length\n      const trigger = consumeUntil(tokens, /[,\\[\\s]/)\n      if (trigger !== '') {\n        if (trigger === 'every') {\n          /** @type HtmxTriggerSpecification */\n          const every = { trigger: 'every' }\n          consumeUntil(tokens, NOT_WHITESPACE)\n          every.pollInterval = parseInterval(consumeUntil(tokens, /[,\\[\\s]/))\n          consumeUntil(tokens, NOT_WHITESPACE)\n          var eventFilter = maybeGenerateConditional(elt, tokens, 'event')\n          if (eventFilter) {\n            every.eventFilter = eventFilter\n          }\n          triggerSpecs.push(every)\n        } else {\n          /** @type HtmxTriggerSpecification */\n          const triggerSpec = { trigger }\n          var eventFilter = maybeGenerateConditional(elt, tokens, 'event')\n          if (eventFilter) {\n            triggerSpec.eventFilter = eventFilter\n          }\n          consumeUntil(tokens, NOT_WHITESPACE)\n          while (tokens.length > 0 && tokens[0] !== ',') {\n            const token = tokens.shift()\n            if (token === 'changed') {\n              triggerSpec.changed = true\n            } else if (token === 'once') {\n              triggerSpec.once = true\n            } else if (token === 'consume') {\n              triggerSpec.consume = true\n            } else if (token === 'delay' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec.delay = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA))\n            } else if (token === 'from' && tokens[0] === ':') {\n              tokens.shift()\n              if (COMBINED_SELECTOR_START.test(tokens[0])) {\n                var from_arg = consumeCSSSelector(tokens)\n              } else {\n                var from_arg = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n                if (from_arg === 'closest' || from_arg === 'find' || from_arg === 'next' || from_arg === 'previous') {\n                  tokens.shift()\n                  const selector = consumeCSSSelector(tokens)\n                  // `next` and `previous` allow a selector-less syntax\n                  if (selector.length > 0) {\n                    from_arg += ' ' + selector\n                  }\n                }\n              }\n              triggerSpec.from = from_arg\n            } else if (token === 'target' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec.target = consumeCSSSelector(tokens)\n            } else if (token === 'throttle' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec.throttle = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA))\n            } else if (token === 'queue' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec.queue = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n            } else if (token === 'root' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec[token] = consumeCSSSelector(tokens)\n            } else if (token === 'threshold' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec[token] = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n            } else {\n              triggerErrorEvent(elt, 'htmx:syntax:error', { token: tokens.shift() })\n            }\n            consumeUntil(tokens, NOT_WHITESPACE)\n          }\n          triggerSpecs.push(triggerSpec)\n        }\n      }\n      if (tokens.length === initialLength) {\n        triggerErrorEvent(elt, 'htmx:syntax:error', { token: tokens.shift() })\n      }\n      consumeUntil(tokens, NOT_WHITESPACE)\n    } while (tokens[0] === ',' && tokens.shift())\n    if (cache) {\n      cache[explicitTrigger] = triggerSpecs\n    }\n    return triggerSpecs\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {HtmxTriggerSpecification[]}\n   */\n  function getTriggerSpecs(elt) {\n    const explicitTrigger = getAttributeValue(elt, 'hx-trigger')\n    let triggerSpecs = []\n    if (explicitTrigger) {\n      const cache = htmx.config.triggerSpecsCache\n      triggerSpecs = (cache && cache[explicitTrigger]) || parseAndCacheTrigger(elt, explicitTrigger, cache)\n    }\n\n    if (triggerSpecs.length > 0) {\n      return triggerSpecs\n    } else if (matches(elt, 'form')) {\n      return [{ trigger: 'submit' }]\n    } else if (matches(elt, 'input[type=\"button\"], input[type=\"submit\"]')) {\n      return [{ trigger: 'click' }]\n    } else if (matches(elt, INPUT_SELECTOR)) {\n      return [{ trigger: 'change' }]\n    } else {\n      return [{ trigger: 'click' }]\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function cancelPolling(elt) {\n    getInternalData(elt).cancelled = true\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxTriggerSpecification} spec\n   */\n  function processPolling(elt, handler, spec) {\n    const nodeData = getInternalData(elt)\n    nodeData.timeout = getWindow().setTimeout(function() {\n      if (bodyContains(elt) && nodeData.cancelled !== true) {\n        if (!maybeFilterEvent(spec, elt, makeEvent('hx:poll:trigger', {\n          triggerSpec: spec,\n          target: elt\n        }))) {\n          handler(elt)\n        }\n        processPolling(elt, handler, spec)\n      }\n    }, spec.pollInterval)\n  }\n\n  /**\n   * @param {HTMLAnchorElement} elt\n   * @returns {boolean}\n   */\n  function isLocalLink(elt) {\n    return location.hostname === elt.hostname &&\n      getRawAttribute(elt, 'href') &&\n      getRawAttribute(elt, 'href').indexOf('#') !== 0\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function eltIsDisabled(elt) {\n    return closest(elt, htmx.config.disableSelector)\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification[]} triggerSpecs\n   */\n  function boostElement(elt, nodeData, triggerSpecs) {\n    if ((elt instanceof HTMLAnchorElement && isLocalLink(elt) && (elt.target === '' || elt.target === '_self')) || (elt.tagName === 'FORM' && String(getRawAttribute(elt, 'method')).toLowerCase() !== 'dialog')) {\n      nodeData.boosted = true\n      let verb, path\n      if (elt.tagName === 'A') {\n        verb = (/** @type HttpVerb */('get'))\n        path = getRawAttribute(elt, 'href')\n      } else {\n        const rawAttribute = getRawAttribute(elt, 'method')\n        verb = (/** @type HttpVerb */(rawAttribute ? rawAttribute.toLowerCase() : 'get'))\n        path = getRawAttribute(elt, 'action')\n        if (path == null || path === '') {\n          // if there is no action attribute on the form set path to current href before the\n          // following logic to properly clear parameters on a GET (not on a POST!)\n          path = location.href\n        }\n        if (verb === 'get' && path.includes('?')) {\n          path = path.replace(/\\?[^#]+/, '')\n        }\n      }\n      triggerSpecs.forEach(function(triggerSpec) {\n        addEventListener(elt, function(node, evt) {\n          const elt = asElement(node)\n          if (eltIsDisabled(elt)) {\n            cleanUpElement(elt)\n            return\n          }\n          issueAjaxRequest(verb, path, elt, evt)\n        }, nodeData, triggerSpec, true)\n      })\n    }\n  }\n\n  /**\n   * @param {Event} evt\n   * @param {Element} elt\n   * @returns {boolean}\n   */\n  function shouldCancel(evt, elt) {\n    if (evt.type === 'submit' && elt.tagName === 'FORM') {\n      return true\n    } else if (evt.type === 'click') {\n      // find button wrapping the trigger element\n      const btn = /** @type {HTMLButtonElement|HTMLInputElement|null} */ (elt.closest('input[type=\"submit\"], button'))\n      // Do not cancel on buttons that 1) don't have a related form or 2) have a type attribute of 'reset'/'button'.\n      if (btn && btn.form && btn.type === 'submit') {\n        return true\n      }\n\n      // find link wrapping the trigger element\n      const link = elt.closest('a')\n      // Allow links with href=\"#fragment\" (anchors with content after #) to perform normal fragment navigation.\n      // Cancel default action for links with href=\"#\" (bare hash) to prevent scrolling to top and unwanted URL changes.\n      const samePageAnchor = /^#.+/\n      if (link && link.href && !samePageAnchor.test(link.getAttribute('href'))) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {Event|MouseEvent|KeyboardEvent|TouchEvent} evt\n   * @returns {boolean}\n   */\n  function ignoreBoostedAnchorCtrlClick(elt, evt) {\n    return getInternalData(elt).boosted && elt instanceof HTMLAnchorElement && evt.type === 'click' &&\n      // @ts-ignore this will resolve to undefined for events that don't define those properties, which is fine\n      (evt.ctrlKey || evt.metaKey)\n  }\n\n  /**\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {Node} elt\n   * @param {Event} evt\n   * @returns {boolean}\n   */\n  function maybeFilterEvent(triggerSpec, elt, evt) {\n    const eventFilter = triggerSpec.eventFilter\n    if (eventFilter) {\n      try {\n        return eventFilter.call(elt, evt) !== true\n      } catch (e) {\n        const source = eventFilter.source\n        triggerErrorEvent(getDocument().body, 'htmx:eventFilter:error', { error: e, source })\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {boolean} [explicitCancel]\n   */\n  function addEventListener(elt, handler, nodeData, triggerSpec, explicitCancel) {\n    const elementData = getInternalData(elt)\n    /** @type {(Node|Window)[]} */\n    let eltsToListenOn\n    if (triggerSpec.from) {\n      eltsToListenOn = querySelectorAllExt(elt, triggerSpec.from)\n    } else {\n      eltsToListenOn = [elt]\n    }\n    // store the initial values of the elements, so we can tell if they change\n    if (triggerSpec.changed) {\n      if (!('lastValue' in elementData)) {\n        elementData.lastValue = new WeakMap()\n      }\n      eltsToListenOn.forEach(function(eltToListenOn) {\n        if (!elementData.lastValue.has(triggerSpec)) {\n          elementData.lastValue.set(triggerSpec, new WeakMap())\n        }\n        // @ts-ignore value will be undefined for non-input elements, which is fine\n        elementData.lastValue.get(triggerSpec).set(eltToListenOn, eltToListenOn.value)\n      })\n    }\n    forEach(eltsToListenOn, function(eltToListenOn) {\n      /** @type EventListener */\n      const eventListener = function(evt) {\n        if (!bodyContains(elt)) {\n          eltToListenOn.removeEventListener(triggerSpec.trigger, eventListener)\n          return\n        }\n        if (ignoreBoostedAnchorCtrlClick(elt, evt)) {\n          return\n        }\n        if (explicitCancel || shouldCancel(evt, eltToListenOn)) {\n          evt.preventDefault()\n        }\n        if (maybeFilterEvent(triggerSpec, elt, evt)) {\n          return\n        }\n        const eventData = getInternalData(evt)\n        eventData.triggerSpec = triggerSpec\n        if (eventData.handledFor == null) {\n          eventData.handledFor = []\n        }\n        if (eventData.handledFor.indexOf(elt) < 0) {\n          eventData.handledFor.push(elt)\n          if (triggerSpec.consume) {\n            evt.stopPropagation()\n          }\n          if (triggerSpec.target && evt.target) {\n            if (!matches(asElement(evt.target), triggerSpec.target)) {\n              return\n            }\n          }\n          if (triggerSpec.once) {\n            if (elementData.triggeredOnce) {\n              return\n            } else {\n              elementData.triggeredOnce = true\n            }\n          }\n          if (triggerSpec.changed) {\n            const node = evt.target\n            // @ts-ignore value will be undefined for non-input elements, which is fine\n            const value = node.value\n            const lastValue = elementData.lastValue.get(triggerSpec)\n            if (lastValue.has(node) && lastValue.get(node) === value) {\n              return\n            }\n            lastValue.set(node, value)\n          }\n          if (elementData.delayed) {\n            clearTimeout(elementData.delayed)\n          }\n          if (elementData.throttle) {\n            return\n          }\n\n          if (triggerSpec.throttle > 0) {\n            if (!elementData.throttle) {\n              triggerEvent(elt, 'htmx:trigger')\n              handler(elt, evt)\n              elementData.throttle = getWindow().setTimeout(function() {\n                elementData.throttle = null\n              }, triggerSpec.throttle)\n            }\n          } else if (triggerSpec.delay > 0) {\n            elementData.delayed = getWindow().setTimeout(function() {\n              triggerEvent(elt, 'htmx:trigger')\n              handler(elt, evt)\n            }, triggerSpec.delay)\n          } else {\n            triggerEvent(elt, 'htmx:trigger')\n            handler(elt, evt)\n          }\n        }\n      }\n      if (nodeData.listenerInfos == null) {\n        nodeData.listenerInfos = []\n      }\n      nodeData.listenerInfos.push({\n        trigger: triggerSpec.trigger,\n        listener: eventListener,\n        on: eltToListenOn\n      })\n      eltToListenOn.addEventListener(triggerSpec.trigger, eventListener)\n    })\n  }\n\n  let windowIsScrolling = false // used by initScrollHandler\n  let scrollHandler = null\n  function initScrollHandler() {\n    if (!scrollHandler) {\n      scrollHandler = function() {\n        windowIsScrolling = true\n      }\n      window.addEventListener('scroll', scrollHandler)\n      window.addEventListener('resize', scrollHandler)\n      setInterval(function() {\n        if (windowIsScrolling) {\n          windowIsScrolling = false\n          forEach(getDocument().querySelectorAll(\"[hx-trigger*='revealed'],[data-hx-trigger*='revealed']\"), function(elt) {\n            maybeReveal(elt)\n          })\n        }\n      }, 200)\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function maybeReveal(elt) {\n    if (!hasAttribute(elt, 'data-hx-revealed') && isScrolledIntoView(elt)) {\n      elt.setAttribute('data-hx-revealed', 'true')\n      const nodeData = getInternalData(elt)\n      if (nodeData.initHash) {\n        triggerEvent(elt, 'revealed')\n      } else {\n        // if the node isn't initialized, wait for it before triggering the request\n        elt.addEventListener('htmx:afterProcessNode', function() { triggerEvent(elt, 'revealed') }, { once: true })\n      }\n    }\n  }\n\n  //= ===================================================================\n\n  /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {number} delay\n   */\n  function loadImmediately(elt, handler, nodeData, delay) {\n    const load = function() {\n      if (!nodeData.loaded) {\n        nodeData.loaded = true\n        triggerEvent(elt, 'htmx:trigger')\n        handler(elt)\n      }\n    }\n    if (delay > 0) {\n      getWindow().setTimeout(load, delay)\n    } else {\n      load()\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification[]} triggerSpecs\n   * @returns {boolean}\n   */\n  function processVerbs(elt, nodeData, triggerSpecs) {\n    let explicitAction = false\n    forEach(VERBS, function(verb) {\n      if (hasAttribute(elt, 'hx-' + verb)) {\n        const path = getAttributeValue(elt, 'hx-' + verb)\n        explicitAction = true\n        nodeData.path = path\n        nodeData.verb = verb\n        triggerSpecs.forEach(function(triggerSpec) {\n          addTriggerHandler(elt, triggerSpec, nodeData, function(node, evt) {\n            const elt = asElement(node)\n            if (eltIsDisabled(elt)) {\n              cleanUpElement(elt)\n              return\n            }\n            issueAjaxRequest(verb, path, elt, evt)\n          })\n        })\n      }\n    })\n    return explicitAction\n  }\n\n  /**\n   * @callback TriggerHandler\n   * @param {Element} elt\n   * @param {Event} [evt]\n   */\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {TriggerHandler} handler\n   */\n  function addTriggerHandler(elt, triggerSpec, nodeData, handler) {\n    if (triggerSpec.trigger === 'revealed') {\n      initScrollHandler()\n      addEventListener(elt, handler, nodeData, triggerSpec)\n      maybeReveal(asElement(elt))\n    } else if (triggerSpec.trigger === 'intersect') {\n      const observerOptions = {}\n      if (triggerSpec.root) {\n        observerOptions.root = querySelectorExt(elt, triggerSpec.root)\n      }\n      if (triggerSpec.threshold) {\n        observerOptions.threshold = parseFloat(triggerSpec.threshold)\n      }\n      const observer = new IntersectionObserver(function(entries) {\n        for (let i = 0; i < entries.length; i++) {\n          const entry = entries[i]\n          if (entry.isIntersecting) {\n            triggerEvent(elt, 'intersect')\n            break\n          }\n        }\n      }, observerOptions)\n      observer.observe(asElement(elt))\n      addEventListener(asElement(elt), handler, nodeData, triggerSpec)\n    } else if (!nodeData.firstInitCompleted && triggerSpec.trigger === 'load') {\n      if (!maybeFilterEvent(triggerSpec, elt, makeEvent('load', { elt }))) {\n        loadImmediately(asElement(elt), handler, nodeData, triggerSpec.delay)\n      }\n    } else if (triggerSpec.pollInterval > 0) {\n      nodeData.polling = true\n      processPolling(asElement(elt), handler, triggerSpec)\n    } else {\n      addEventListener(elt, handler, nodeData, triggerSpec)\n    }\n  }\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function shouldProcessHxOn(node) {\n    const elt = asElement(node)\n    if (!elt) {\n      return false\n    }\n    const attributes = elt.attributes\n    for (let j = 0; j < attributes.length; j++) {\n      const attrName = attributes[j].name\n      if (startsWith(attrName, 'hx-on:') || startsWith(attrName, 'data-hx-on:') ||\n        startsWith(attrName, 'hx-on-') || startsWith(attrName, 'data-hx-on-')) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Node} elt\n   * @returns {Element[]}\n   */\n  const HX_ON_QUERY = new XPathEvaluator()\n    .createExpression('.//*[@*[ starts-with(name(), \"hx-on:\") or starts-with(name(), \"data-hx-on:\") or' +\n      ' starts-with(name(), \"hx-on-\") or starts-with(name(), \"data-hx-on-\") ]]')\n\n  function processHXOnRoot(elt, elements) {\n    if (shouldProcessHxOn(elt)) {\n      elements.push(asElement(elt))\n    }\n    const iter = HX_ON_QUERY.evaluate(elt)\n    let node = null\n    while (node = iter.iterateNext()) elements.push(asElement(node))\n  }\n\n  function findHxOnWildcardElements(elt) {\n    /** @type {Element[]} */\n    const elements = []\n    if (elt instanceof DocumentFragment) {\n      for (const child of elt.childNodes) {\n        processHXOnRoot(child, elements)\n      }\n    } else {\n      processHXOnRoot(elt, elements)\n    }\n    return elements\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {NodeListOf<Element>|[]}\n   */\n  function findElementsToProcess(elt) {\n    if (elt.querySelectorAll) {\n      const boostedSelector = ', [hx-boost] a, [data-hx-boost] a, a[hx-boost], a[data-hx-boost]'\n\n      const extensionSelectors = []\n      for (const e in extensions) {\n        const extension = extensions[e]\n        if (extension.getSelectors) {\n          var selectors = extension.getSelectors()\n          if (selectors) {\n            extensionSelectors.push(selectors)\n          }\n        }\n      }\n\n      const results = elt.querySelectorAll(VERB_SELECTOR + boostedSelector + \", form, [type='submit'],\" +\n        ' [hx-ext], [data-hx-ext], [hx-trigger], [data-hx-trigger]' + extensionSelectors.flat().map(s => ', ' + s).join(''))\n\n      return results\n    } else {\n      return []\n    }\n  }\n\n  /**\n   * Handle submit buttons/inputs that have the form attribute set\n   * see https://developer.mozilla.org/docs/Web/HTML/Element/button\n   * @param {Event} evt\n   */\n  function maybeSetLastButtonClicked(evt) {\n    const elt = getTargetButton(evt.target)\n    const internalData = getRelatedFormData(evt)\n    if (internalData) {\n      internalData.lastButtonClicked = elt\n    }\n  }\n\n  /**\n   * @param {Event} evt\n   */\n  function maybeUnsetLastButtonClicked(evt) {\n    const internalData = getRelatedFormData(evt)\n    if (internalData) {\n      internalData.lastButtonClicked = null\n    }\n  }\n\n  /**\n   * @param {EventTarget} target\n   * @returns {HTMLButtonElement|HTMLInputElement|null}\n   */\n  function getTargetButton(target) {\n    return /** @type {HTMLButtonElement|HTMLInputElement|null} */ (closest(asElement(target), \"button, input[type='submit']\"))\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {HTMLFormElement|null}\n   */\n  function getRelatedForm(elt) {\n    // @ts-ignore Get the related form if available, else find the closest parent form\n    return elt.form || closest(elt, 'form')\n  }\n\n  /**\n   * @param {Event} evt\n   * @returns {HtmxNodeInternalData|undefined}\n   */\n  function getRelatedFormData(evt) {\n    const elt = getTargetButton(evt.target)\n    if (!elt) {\n      return\n    }\n    const form = getRelatedForm(elt)\n    if (!form) {\n      return\n    }\n    return getInternalData(form)\n  }\n\n  /**\n   * @param {EventTarget} elt\n   */\n  function initButtonTracking(elt) {\n    // need to handle both click and focus in:\n    //   focusin - in case someone tabs in to a button and hits the space bar\n    //   click - on OSX buttons do not focus on click see https://bugs.webkit.org/show_bug.cgi?id=13724\n    elt.addEventListener('click', maybeSetLastButtonClicked)\n    elt.addEventListener('focusin', maybeSetLastButtonClicked)\n    elt.addEventListener('focusout', maybeUnsetLastButtonClicked)\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} eventName\n   * @param {string} code\n   */\n  function addHxOnEventHandler(elt, eventName, code) {\n    const nodeData = getInternalData(elt)\n    if (!Array.isArray(nodeData.onHandlers)) {\n      nodeData.onHandlers = []\n    }\n    let func\n    /** @type EventListener */\n    const listener = function(e) {\n      maybeEval(elt, function() {\n        if (eltIsDisabled(elt)) {\n          return\n        }\n        if (!func) {\n          func = new Function('event', code)\n        }\n        func.call(elt, e)\n      })\n    }\n    elt.addEventListener(eventName, listener)\n    nodeData.onHandlers.push({ event: eventName, listener })\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function processHxOnWildcard(elt) {\n    // wipe any previous on handlers so that this function takes precedence\n    deInitOnHandlers(elt)\n\n    for (let i = 0; i < elt.attributes.length; i++) {\n      const name = elt.attributes[i].name\n      const value = elt.attributes[i].value\n      if (startsWith(name, 'hx-on') || startsWith(name, 'data-hx-on')) {\n        const afterOnPosition = name.indexOf('-on') + 3\n        const nextChar = name.slice(afterOnPosition, afterOnPosition + 1)\n        if (nextChar === '-' || nextChar === ':') {\n          let eventName = name.slice(afterOnPosition + 1)\n          // if the eventName starts with a colon or dash, prepend \"htmx\" for shorthand support\n          if (startsWith(eventName, ':')) {\n            eventName = 'htmx' + eventName\n          } else if (startsWith(eventName, '-')) {\n            eventName = 'htmx:' + eventName.slice(1)\n          } else if (startsWith(eventName, 'htmx-')) {\n            eventName = 'htmx:' + eventName.slice(5)\n          }\n\n          addHxOnEventHandler(elt, eventName, value)\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Element|HTMLInputElement} elt\n   */\n  function initNode(elt) {\n    triggerEvent(elt, 'htmx:beforeProcessNode')\n\n    const nodeData = getInternalData(elt)\n    const triggerSpecs = getTriggerSpecs(elt)\n    const hasExplicitHttpAction = processVerbs(elt, nodeData, triggerSpecs)\n\n    if (!hasExplicitHttpAction) {\n      if (getClosestAttributeValue(elt, 'hx-boost') === 'true') {\n        boostElement(elt, nodeData, triggerSpecs)\n      } else if (hasAttribute(elt, 'hx-trigger')) {\n        triggerSpecs.forEach(function(triggerSpec) {\n          // For \"naked\" triggers, don't do anything at all\n          addTriggerHandler(elt, triggerSpec, nodeData, function() {\n          })\n        })\n      }\n    }\n\n    // Handle submit buttons/inputs that have the form attribute set\n    // see https://developer.mozilla.org/docs/Web/HTML/Element/button\n    if (elt.tagName === 'FORM' || (getRawAttribute(elt, 'type') === 'submit' && hasAttribute(elt, 'form'))) {\n      initButtonTracking(elt)\n    }\n\n    nodeData.firstInitCompleted = true\n    triggerEvent(elt, 'htmx:afterProcessNode')\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {boolean}\n   */\n  function maybeDeInitAndHash(elt) {\n    // Ensure only valid Elements and not shadow DOM roots are inited\n    if (!(elt instanceof Element)) {\n      return false\n    }\n\n    const nodeData = getInternalData(elt)\n    const hash = attributeHash(elt)\n    if (nodeData.initHash !== hash) {\n      deInitNode(elt)\n      nodeData.initHash = hash\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Processes new content, enabling htmx behavior. This can be useful if you have content that is added to the DOM outside of the normal htmx request cycle but still want htmx attributes to work.\n   *\n   * @see https://htmx.org/api/#process\n   *\n   * @param {Element|string} elt element to process\n   */\n  function processNode(elt) {\n    elt = resolveTarget(elt)\n    if (eltIsDisabled(elt)) {\n      cleanUpElement(elt)\n      return\n    }\n\n    const elementsToInit = []\n    if (maybeDeInitAndHash(elt)) {\n      elementsToInit.push(elt)\n    }\n    forEach(findElementsToProcess(elt), function(child) {\n      if (eltIsDisabled(child)) {\n        cleanUpElement(child)\n        return\n      }\n      if (maybeDeInitAndHash(child)) {\n        elementsToInit.push(child)\n      }\n    })\n\n    forEach(findHxOnWildcardElements(elt), processHxOnWildcard)\n    forEach(elementsToInit, initNode)\n  }\n\n  //= ===================================================================\n  // Event/Log Support\n  //= ===================================================================\n\n  /**\n   * @param {string} str\n   * @returns {string}\n   */\n  function kebabEventName(str) {\n    return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {any} detail\n   * @returns {CustomEvent}\n   */\n  function makeEvent(eventName, detail) {\n    // TODO: `composed: true` here is a hack to make global event handlers work with events in shadow DOM\n    // This breaks expected encapsulation but needs to be here until decided otherwise by core devs\n    return new CustomEvent(eventName, { bubbles: true, cancelable: true, composed: true, detail })\n  }\n\n  /**\n   * @param {EventTarget|string} elt\n   * @param {string} eventName\n   * @param {any=} detail\n   */\n  function triggerErrorEvent(elt, eventName, detail) {\n    triggerEvent(elt, eventName, mergeObjects({ error: eventName }, detail))\n  }\n\n  /**\n   * @param {string} eventName\n   * @returns {boolean}\n   */\n  function ignoreEventForLogging(eventName) {\n    return eventName === 'htmx:afterProcessNode'\n  }\n\n  /**\n   * `withExtensions` locates all active extensions for a provided element, then\n   * executes the provided function using each of the active extensions. You can filter\n   * the element's extensions by giving it a list of extensions to ignore. It should\n   * be called internally at every extendable execution point in htmx.\n   *\n   * @param {Element} elt\n   * @param {(extension:HtmxExtension) => void} toDo\n   * @param {string[]=} extensionsToIgnore\n   * @returns void\n   */\n  function withExtensions(elt, toDo, extensionsToIgnore) {\n    forEach(getExtensions(elt, [], extensionsToIgnore), function(extension) {\n      try {\n        toDo(extension)\n      } catch (e) {\n        logError(e)\n      }\n    })\n  }\n\n  function logError(msg) {\n    console.error(msg)\n  }\n\n  /**\n   * Triggers a given event on an element\n   *\n   * @see https://htmx.org/api/#trigger\n   *\n   * @param {EventTarget|string} elt the element to trigger the event on\n   * @param {string} eventName the name of the event to trigger\n   * @param {any=} detail details for the event\n   * @returns {boolean}\n   */\n  function triggerEvent(elt, eventName, detail) {\n    elt = resolveTarget(elt)\n    if (detail == null) {\n      detail = {}\n    }\n    detail.elt = elt\n    const event = makeEvent(eventName, detail)\n    if (htmx.logger && !ignoreEventForLogging(eventName)) {\n      htmx.logger(elt, eventName, detail)\n    }\n    if (detail.error) {\n      logError(detail.error)\n      triggerEvent(elt, 'htmx:error', { errorInfo: detail })\n    }\n    let eventResult = elt.dispatchEvent(event)\n    const kebabName = kebabEventName(eventName)\n    if (eventResult && kebabName !== eventName) {\n      const kebabedEvent = makeEvent(kebabName, event.detail)\n      eventResult = eventResult && elt.dispatchEvent(kebabedEvent)\n    }\n    withExtensions(asElement(elt), function(extension) {\n      eventResult = eventResult && (extension.onEvent(eventName, event) !== false && !event.defaultPrevented)\n    })\n    return eventResult\n  }\n\n  //= ===================================================================\n  // History Support\n  //= ===================================================================\n  let currentPathForHistory = location.pathname + location.search\n\n  /**\n   * @param {string} path\n   */\n  function setCurrentPathForHistory(path) {\n    currentPathForHistory = path\n    if (canAccessLocalStorage()) {\n      sessionStorage.setItem('htmx-current-path-for-history', path)\n    }\n  }\n\n  /**\n   * @returns {Element}\n   */\n  function getHistoryElement() {\n    const historyElt = getDocument().querySelector('[hx-history-elt],[data-hx-history-elt]')\n    return historyElt || getDocument().body\n  }\n\n  /**\n   * @param {string} url\n   * @param {Element} rootElt\n   */\n  function saveToHistoryCache(url, rootElt) {\n    if (!canAccessLocalStorage()) {\n      return\n    }\n\n    // get state to save\n    const innerHTML = cleanInnerHtmlForHistory(rootElt)\n    const title = getDocument().title\n    const scroll = window.scrollY\n\n    if (htmx.config.historyCacheSize <= 0) {\n      // make sure that an eventually already existing cache is purged\n      sessionStorage.removeItem('htmx-history-cache')\n      return\n    }\n\n    url = normalizePath(url)\n\n    const historyCache = parseJSON(sessionStorage.getItem('htmx-history-cache')) || []\n    for (let i = 0; i < historyCache.length; i++) {\n      if (historyCache[i].url === url) {\n        historyCache.splice(i, 1)\n        break\n      }\n    }\n\n    /** @type HtmxHistoryItem */\n    const newHistoryItem = { url, content: innerHTML, title, scroll }\n\n    triggerEvent(getDocument().body, 'htmx:historyItemCreated', { item: newHistoryItem, cache: historyCache })\n\n    historyCache.push(newHistoryItem)\n    while (historyCache.length > htmx.config.historyCacheSize) {\n      historyCache.shift()\n    }\n\n    // keep trying to save the cache until it succeeds or is empty\n    while (historyCache.length > 0) {\n      try {\n        sessionStorage.setItem('htmx-history-cache', JSON.stringify(historyCache))\n        break\n      } catch (e) {\n        triggerErrorEvent(getDocument().body, 'htmx:historyCacheError', { cause: e, cache: historyCache })\n        historyCache.shift() // shrink the cache and retry\n      }\n    }\n  }\n\n  /**\n   * @typedef {Object} HtmxHistoryItem\n   * @property {string} url\n   * @property {string} content\n   * @property {string} title\n   * @property {number} scroll\n   */\n\n  /**\n   * @param {string} url\n   * @returns {HtmxHistoryItem|null}\n   */\n  function getCachedHistory(url) {\n    if (!canAccessLocalStorage()) {\n      return null\n    }\n\n    url = normalizePath(url)\n\n    const historyCache = parseJSON(sessionStorage.getItem('htmx-history-cache')) || []\n    for (let i = 0; i < historyCache.length; i++) {\n      if (historyCache[i].url === url) {\n        return historyCache[i]\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {string}\n   */\n  function cleanInnerHtmlForHistory(elt) {\n    const className = htmx.config.requestClass\n    const clone = /** @type Element */ (elt.cloneNode(true))\n    forEach(findAll(clone, '.' + className), function(child) {\n      removeClassFromElement(child, className)\n    })\n    // remove the disabled attribute for any element disabled due to an htmx request\n    forEach(findAll(clone, '[data-disabled-by-htmx]'), function(child) {\n      child.removeAttribute('disabled')\n    })\n    return clone.innerHTML\n  }\n\n  function saveCurrentPageToHistory() {\n    const elt = getHistoryElement()\n    let path = currentPathForHistory\n    if (canAccessLocalStorage()) {\n      path = sessionStorage.getItem('htmx-current-path-for-history')\n    }\n    path = path || location.pathname + location.search\n\n    // Allow history snapshot feature to be disabled where hx-history=\"false\"\n    // is present *anywhere* in the current document we're about to save,\n    // so we can prevent privileged data entering the cache.\n    // The page will still be reachable as a history entry, but htmx will fetch it\n    // live from the server onpopstate rather than look in the sessionStorage cache\n    const disableHistoryCache = getDocument().querySelector('[hx-history=\"false\" i],[data-hx-history=\"false\" i]')\n    if (!disableHistoryCache) {\n      triggerEvent(getDocument().body, 'htmx:beforeHistorySave', { path, historyElt: elt })\n      saveToHistoryCache(path, elt)\n    }\n\n    if (htmx.config.historyEnabled) history.replaceState({ htmx: true }, getDocument().title, location.href)\n  }\n\n  /**\n   * @param {string} path\n   */\n  function pushUrlIntoHistory(path) {\n  // remove the cache buster parameter, if any\n    if (htmx.config.getCacheBusterParam) {\n      path = path.replace(/org\\.htmx\\.cache-buster=[^&]*&?/, '')\n      if (endsWith(path, '&') || endsWith(path, '?')) {\n        path = path.slice(0, -1)\n      }\n    }\n    if (htmx.config.historyEnabled) {\n      history.pushState({ htmx: true }, '', path)\n    }\n    setCurrentPathForHistory(path)\n  }\n\n  /**\n   * @param {string} path\n   */\n  function replaceUrlInHistory(path) {\n    if (htmx.config.historyEnabled) history.replaceState({ htmx: true }, '', path)\n    setCurrentPathForHistory(path)\n  }\n\n  /**\n   * @param {HtmxSettleTask[]} tasks\n   */\n  function settleImmediately(tasks) {\n    forEach(tasks, function(task) {\n      task.call(undefined)\n    })\n  }\n\n  /**\n   * @param {string} path\n   */\n  function loadHistoryFromServer(path) {\n    const request = new XMLHttpRequest()\n    const swapSpec = { swapStyle: 'innerHTML', swapDelay: 0, settleDelay: 0 }\n    const details = { path, xhr: request, historyElt: getHistoryElement(), swapSpec }\n    request.open('GET', path, true)\n    if (htmx.config.historyRestoreAsHxRequest) {\n      request.setRequestHeader('HX-Request', 'true')\n    }\n    request.setRequestHeader('HX-History-Restore-Request', 'true')\n    request.setRequestHeader('HX-Current-URL', location.href)\n    request.onload = function() {\n      if (this.status >= 200 && this.status < 400) {\n        details.response = this.response\n        triggerEvent(getDocument().body, 'htmx:historyCacheMissLoad', details)\n        swap(details.historyElt, details.response, swapSpec, {\n          contextElement: details.historyElt,\n          historyRequest: true\n        })\n        setCurrentPathForHistory(details.path)\n        triggerEvent(getDocument().body, 'htmx:historyRestore', { path, cacheMiss: true, serverResponse: details.response })\n      } else {\n        triggerErrorEvent(getDocument().body, 'htmx:historyCacheMissLoadError', details)\n      }\n    }\n    if (triggerEvent(getDocument().body, 'htmx:historyCacheMiss', details)) {\n      request.send() // only send request if event not prevented\n    }\n  }\n\n  /**\n   * @param {string} [path]\n   */\n  function restoreHistory(path) {\n    saveCurrentPageToHistory()\n    path = path || location.pathname + location.search\n    const cached = getCachedHistory(path)\n    if (cached) {\n      const swapSpec = { swapStyle: 'innerHTML', swapDelay: 0, settleDelay: 0, scroll: cached.scroll }\n      const details = { path, item: cached, historyElt: getHistoryElement(), swapSpec }\n      if (triggerEvent(getDocument().body, 'htmx:historyCacheHit', details)) {\n        swap(details.historyElt, cached.content, swapSpec, {\n          contextElement: details.historyElt,\n          title: cached.title\n        })\n        setCurrentPathForHistory(details.path)\n        triggerEvent(getDocument().body, 'htmx:historyRestore', details)\n      }\n    } else {\n      if (htmx.config.refreshOnHistoryMiss) {\n        // @ts-ignore: optional parameter in reload() function throws error\n        // noinspection JSUnresolvedReference\n        htmx.location.reload(true)\n      } else {\n        loadHistoryFromServer(path)\n      }\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {Element[]}\n   */\n  function addRequestIndicatorClasses(elt) {\n    let indicators = /** @type Element[] */ (findAttributeTargets(elt, 'hx-indicator'))\n    if (indicators == null) {\n      indicators = [elt]\n    }\n    forEach(indicators, function(ic) {\n      const internalData = getInternalData(ic)\n      internalData.requestCount = (internalData.requestCount || 0) + 1\n      ic.classList.add.call(ic.classList, htmx.config.requestClass)\n    })\n    return indicators\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {Element[]}\n   */\n  function disableElements(elt) {\n    let disabledElts = /** @type Element[] */ (findAttributeTargets(elt, 'hx-disabled-elt'))\n    if (disabledElts == null) {\n      disabledElts = []\n    }\n    forEach(disabledElts, function(disabledElement) {\n      const internalData = getInternalData(disabledElement)\n      internalData.requestCount = (internalData.requestCount || 0) + 1\n      disabledElement.setAttribute('disabled', '')\n      disabledElement.setAttribute('data-disabled-by-htmx', '')\n    })\n    return disabledElts\n  }\n\n  /**\n   * @param {Element[]} indicators\n   * @param {Element[]} disabled\n   */\n  function removeRequestIndicators(indicators, disabled) {\n    forEach(indicators.concat(disabled), function(ele) {\n      const internalData = getInternalData(ele)\n      internalData.requestCount = (internalData.requestCount || 1) - 1\n    })\n    forEach(indicators, function(ic) {\n      const internalData = getInternalData(ic)\n      if (internalData.requestCount === 0) {\n        ic.classList.remove.call(ic.classList, htmx.config.requestClass)\n      }\n    })\n    forEach(disabled, function(disabledElement) {\n      const internalData = getInternalData(disabledElement)\n      if (internalData.requestCount === 0) {\n        disabledElement.removeAttribute('disabled')\n        disabledElement.removeAttribute('data-disabled-by-htmx')\n      }\n    })\n  }\n\n  //= ===================================================================\n  // Input Value Processing\n  //= ===================================================================\n\n  /**\n   * @param {Element[]} processed\n   * @param {Element} elt\n   * @returns {boolean}\n   */\n  function haveSeenNode(processed, elt) {\n    for (let i = 0; i < processed.length; i++) {\n      const node = processed[i]\n      if (node.isSameNode(elt)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Element} element\n   * @return {boolean}\n   */\n  function shouldInclude(element) {\n    // Cast to trick tsc, undefined values will work fine here\n    const elt = /** @type {HTMLInputElement} */ (element)\n    if (elt.name === '' || elt.name == null || elt.disabled || closest(elt, 'fieldset[disabled]')) {\n      return false\n    }\n    // ignore \"submitter\" types (see jQuery src/serialize.js)\n    if (elt.type === 'button' || elt.type === 'submit' || elt.tagName === 'image' || elt.tagName === 'reset' || elt.tagName === 'file') {\n      return false\n    }\n    if (elt.type === 'checkbox' || elt.type === 'radio') {\n      return elt.checked\n    }\n    return true\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|Array|FormDataEntryValue} value\n   * @param {FormData} formData */\n  function addValueToFormData(name, value, formData) {\n    if (name != null && value != null) {\n      if (Array.isArray(value)) {\n        value.forEach(function(v) { formData.append(name, v) })\n      } else {\n        formData.append(name, value)\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|Array} value\n   * @param {FormData} formData */\n  function removeValueFromFormData(name, value, formData) {\n    if (name != null && value != null) {\n      let values = formData.getAll(name)\n      if (Array.isArray(value)) {\n        values = values.filter(v => value.indexOf(v) < 0)\n      } else {\n        values = values.filter(v => v !== value)\n      }\n      formData.delete(name)\n      forEach(values, v => formData.append(name, v))\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {string|Array}\n   */\n  function getValueFromInput(elt) {\n    if (elt instanceof HTMLSelectElement && elt.multiple) {\n      return toArray(elt.querySelectorAll('option:checked')).map(function(e) { return (/** @type HTMLOptionElement */(e)).value })\n    }\n    // include file inputs\n    if (elt instanceof HTMLInputElement && elt.files) {\n      return toArray(elt.files)\n    }\n    // @ts-ignore value will be undefined for non-input elements, which is fine\n    return elt.value\n  }\n\n  /**\n   * @param {Element[]} processed\n   * @param {FormData} formData\n   * @param {HtmxElementValidationError[]} errors\n   * @param {Element|HTMLInputElement|HTMLSelectElement|HTMLFormElement} elt\n   * @param {boolean} validate\n   */\n  function processInputValue(processed, formData, errors, elt, validate) {\n    if (elt == null || haveSeenNode(processed, elt)) {\n      return\n    } else {\n      processed.push(elt)\n    }\n    if (shouldInclude(elt)) {\n      const name = getRawAttribute(elt, 'name')\n      addValueToFormData(name, getValueFromInput(elt), formData)\n      if (validate) {\n        validateElement(elt, errors)\n      }\n    }\n    if (elt instanceof HTMLFormElement) {\n      forEach(elt.elements, function(input) {\n        if (processed.indexOf(input) >= 0) {\n          // The input has already been processed and added to the values, but the FormData that will be\n          //  constructed right after on the form, will include it once again. So remove that input's value\n          //  now to avoid duplicates\n          removeValueFromFormData(input.name, getValueFromInput(input), formData)\n        } else {\n          processed.push(input)\n        }\n        if (validate) {\n          validateElement(input, errors)\n        }\n      })\n      new FormData(elt).forEach(function(value, name) {\n        if (value instanceof File && value.name === '') {\n          return // ignore no-name files\n        }\n        addValueToFormData(name, value, formData)\n      })\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxElementValidationError[]} errors\n   */\n  function validateElement(elt, errors) {\n    const element = /** @type {HTMLElement & ElementInternals} */ (elt)\n    if (element.willValidate) {\n      triggerEvent(element, 'htmx:validation:validate')\n      if (!element.checkValidity()) {\n        if (\n          triggerEvent(element, 'htmx:validation:failed', {\n            message: element.validationMessage,\n            validity: element.validity\n          }) &&\n          !errors.length &&\n          htmx.config.reportValidityOfForms\n        ) {\n          element.reportValidity()\n        }\n        errors.push({ elt: element, message: element.validationMessage, validity: element.validity })\n      }\n    }\n  }\n\n  /**\n   * Override values in the one FormData with those from another.\n   * @param {FormData} receiver the formdata that will be mutated\n   * @param {FormData} donor the formdata that will provide the overriding values\n   * @returns {FormData} the {@linkcode receiver}\n   */\n  function overrideFormData(receiver, donor) {\n    for (const key of donor.keys()) {\n      receiver.delete(key)\n    }\n    donor.forEach(function(value, key) {\n      receiver.append(key, value)\n    })\n    return receiver\n  }\n\n  /**\n * @param {Element|HTMLFormElement} elt\n * @param {HttpVerb} verb\n * @returns {{errors: HtmxElementValidationError[], formData: FormData, values: Object}}\n */\n  function getInputValues(elt, verb) {\n    /** @type Element[] */\n    const processed = []\n    const formData = new FormData()\n    const priorityFormData = new FormData()\n    /** @type HtmxElementValidationError[] */\n    const errors = []\n    const internalData = getInternalData(elt)\n    if (internalData.lastButtonClicked && !bodyContains(internalData.lastButtonClicked)) {\n      internalData.lastButtonClicked = null\n    }\n\n    // only validate when form is directly submitted and novalidate or formnovalidate are not set\n    // or if the element has an explicit hx-validate=\"true\" on it\n    let validate = (elt instanceof HTMLFormElement && elt.noValidate !== true) || getAttributeValue(elt, 'hx-validate') === 'true'\n    if (internalData.lastButtonClicked) {\n      validate = validate && internalData.lastButtonClicked.formNoValidate !== true\n    }\n\n    // for a non-GET include the related form, which may or may not be a parent element of elt\n    if (verb !== 'get') {\n      processInputValue(processed, priorityFormData, errors, getRelatedForm(elt), validate)\n    }\n\n    // include the element itself\n    processInputValue(processed, formData, errors, elt, validate)\n\n    // if a button or submit was clicked last, include its value\n    if (internalData.lastButtonClicked || elt.tagName === 'BUTTON' ||\n    (elt.tagName === 'INPUT' && getRawAttribute(elt, 'type') === 'submit')) {\n      const button = internalData.lastButtonClicked || (/** @type HTMLInputElement|HTMLButtonElement */(elt))\n      const name = getRawAttribute(button, 'name')\n      addValueToFormData(name, button.value, priorityFormData)\n    }\n\n    // include any explicit includes\n    const includes = findAttributeTargets(elt, 'hx-include')\n    forEach(includes, function(node) {\n      processInputValue(processed, formData, errors, asElement(node), validate)\n      // if a non-form is included, include any input values within it\n      if (!matches(node, 'form')) {\n        forEach(asParentNode(node).querySelectorAll(INPUT_SELECTOR), function(descendant) {\n          processInputValue(processed, formData, errors, descendant, validate)\n        })\n      }\n    })\n\n    // values from a <form> take precedence, overriding the regular values\n    overrideFormData(formData, priorityFormData)\n\n    return { errors, formData, values: formDataProxy(formData) }\n  }\n\n  /**\n   * @param {string} returnStr\n   * @param {string} name\n   * @param {any} realValue\n   * @returns {string}\n   */\n  function appendParam(returnStr, name, realValue) {\n    if (returnStr !== '') {\n      returnStr += '&'\n    }\n    if (String(realValue) === '[object Object]') {\n      realValue = JSON.stringify(realValue)\n    }\n    const s = encodeURIComponent(realValue)\n    returnStr += encodeURIComponent(name) + '=' + s\n    return returnStr\n  }\n\n  /**\n   * @param {FormData|Object} values\n   * @returns string\n   */\n  function urlEncode(values) {\n    values = formDataFromObject(values)\n    let returnStr = ''\n    values.forEach(function(value, key) {\n      returnStr = appendParam(returnStr, key, value)\n    })\n    return returnStr\n  }\n\n  //= ===================================================================\n  // Ajax\n  //= ===================================================================\n\n  /**\n * @param {Element} elt\n * @param {Element} target\n * @param {string} prompt\n * @returns {HtmxHeaderSpecification}\n */\n  function getHeaders(elt, target, prompt) {\n    /** @type HtmxHeaderSpecification */\n    const headers = {\n      'HX-Request': 'true',\n      'HX-Trigger': getRawAttribute(elt, 'id'),\n      'HX-Trigger-Name': getRawAttribute(elt, 'name'),\n      'HX-Target': getAttributeValue(target, 'id'),\n      'HX-Current-URL': location.href\n    }\n    getValuesForElement(elt, 'hx-headers', false, headers)\n    if (prompt !== undefined) {\n      headers['HX-Prompt'] = prompt\n    }\n    if (getInternalData(elt).boosted) {\n      headers['HX-Boosted'] = 'true'\n    }\n    return headers\n  }\n\n  /**\n * filterValues takes an object containing form input values\n * and returns a new object that only contains keys that are\n * specified by the closest \"hx-params\" attribute\n * @param {FormData} inputValues\n * @param {Element} elt\n * @returns {FormData}\n */\n  function filterValues(inputValues, elt) {\n    const paramsValue = getClosestAttributeValue(elt, 'hx-params')\n    if (paramsValue) {\n      if (paramsValue === 'none') {\n        return new FormData()\n      } else if (paramsValue === '*') {\n        return inputValues\n      } else if (paramsValue.indexOf('not ') === 0) {\n        forEach(paramsValue.slice(4).split(','), function(name) {\n          name = name.trim()\n          inputValues.delete(name)\n        })\n        return inputValues\n      } else {\n        const newValues = new FormData()\n        forEach(paramsValue.split(','), function(name) {\n          name = name.trim()\n          if (inputValues.has(name)) {\n            inputValues.getAll(name).forEach(function(value) { newValues.append(name, value) })\n          }\n        })\n        return newValues\n      }\n    } else {\n      return inputValues\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @return {boolean}\n   */\n  function isAnchorLink(elt) {\n    return !!getRawAttribute(elt, 'href') && getRawAttribute(elt, 'href').indexOf('#') >= 0\n  }\n\n  /**\n * @param {Element} elt\n * @param {HtmxSwapStyle} [swapInfoOverride]\n * @returns {HtmxSwapSpecification}\n */\n  function getSwapSpecification(elt, swapInfoOverride) {\n    const swapInfo = swapInfoOverride || getClosestAttributeValue(elt, 'hx-swap')\n    /** @type HtmxSwapSpecification */\n    const swapSpec = {\n      swapStyle: getInternalData(elt).boosted ? 'innerHTML' : htmx.config.defaultSwapStyle,\n      swapDelay: htmx.config.defaultSwapDelay,\n      settleDelay: htmx.config.defaultSettleDelay\n    }\n    if (htmx.config.scrollIntoViewOnBoost && getInternalData(elt).boosted && !isAnchorLink(elt)) {\n      swapSpec.show = 'top'\n    }\n    if (swapInfo) {\n      const split = splitOnWhitespace(swapInfo)\n      if (split.length > 0) {\n        for (let i = 0; i < split.length; i++) {\n          const value = split[i]\n          if (value.indexOf('swap:') === 0) {\n            swapSpec.swapDelay = parseInterval(value.slice(5))\n          } else if (value.indexOf('settle:') === 0) {\n            swapSpec.settleDelay = parseInterval(value.slice(7))\n          } else if (value.indexOf('transition:') === 0) {\n            swapSpec.transition = value.slice(11) === 'true'\n          } else if (value.indexOf('ignoreTitle:') === 0) {\n            swapSpec.ignoreTitle = value.slice(12) === 'true'\n          } else if (value.indexOf('scroll:') === 0) {\n            const scrollSpec = value.slice(7)\n            var splitSpec = scrollSpec.split(':')\n            const scrollVal = splitSpec.pop()\n            var selectorVal = splitSpec.length > 0 ? splitSpec.join(':') : null\n            // @ts-ignore\n            swapSpec.scroll = scrollVal\n            swapSpec.scrollTarget = selectorVal\n          } else if (value.indexOf('show:') === 0) {\n            const showSpec = value.slice(5)\n            var splitSpec = showSpec.split(':')\n            const showVal = splitSpec.pop()\n            var selectorVal = splitSpec.length > 0 ? splitSpec.join(':') : null\n            swapSpec.show = showVal\n            swapSpec.showTarget = selectorVal\n          } else if (value.indexOf('focus-scroll:') === 0) {\n            const focusScrollVal = value.slice('focus-scroll:'.length)\n            swapSpec.focusScroll = focusScrollVal == 'true'\n          } else if (i == 0) {\n            swapSpec.swapStyle = value\n          } else {\n            logError('Unknown modifier in hx-swap: ' + value)\n          }\n        }\n      }\n    }\n    return swapSpec\n  }\n\n  /**\n   * @param {Element} elt\n   * @return {boolean}\n   */\n  function usesFormData(elt) {\n    return getClosestAttributeValue(elt, 'hx-encoding') === 'multipart/form-data' ||\n    (matches(elt, 'form') && getRawAttribute(elt, 'enctype') === 'multipart/form-data')\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {Element} elt\n   * @param {FormData} filteredParameters\n   * @returns {*|string|null}\n   */\n  function encodeParamsForBody(xhr, elt, filteredParameters) {\n    let encodedParameters = null\n    withExtensions(elt, function(extension) {\n      if (encodedParameters == null) {\n        encodedParameters = extension.encodeParameters(xhr, filteredParameters, elt)\n      }\n    })\n    if (encodedParameters != null) {\n      return encodedParameters\n    } else {\n      if (usesFormData(elt)) {\n        // Force conversion to an actual FormData object in case filteredParameters is a formDataProxy\n        // See https://github.com/bigskysoftware/htmx/issues/2317\n        return overrideFormData(new FormData(), formDataFromObject(filteredParameters))\n      } else {\n        return urlEncode(filteredParameters)\n      }\n    }\n  }\n\n  /**\n *\n * @param {Element} target\n * @returns {HtmxSettleInfo}\n */\n  function makeSettleInfo(target) {\n    return { tasks: [], elts: [target] }\n  }\n\n  /**\n   * @param {Element[]} content\n   * @param {HtmxSwapSpecification} swapSpec\n   */\n  function updateScrollState(content, swapSpec) {\n    const first = content[0]\n    const last = content[content.length - 1]\n    if (swapSpec.scroll) {\n      var target = null\n      if (swapSpec.scrollTarget) {\n        target = asElement(querySelectorExt(first, swapSpec.scrollTarget))\n      }\n      if (swapSpec.scroll === 'top' && (first || target)) {\n        target = target || first\n        target.scrollTop = 0\n      }\n      if (swapSpec.scroll === 'bottom' && (last || target)) {\n        target = target || last\n        target.scrollTop = target.scrollHeight\n      }\n      if (typeof swapSpec.scroll === 'number') {\n        getWindow().setTimeout(function() {\n          window.scrollTo(0, /** @type number */ (swapSpec.scroll))\n        }, 0) // next 'tick', so browser has time to render layout\n      }\n    }\n    if (swapSpec.show) {\n      var target = null\n      if (swapSpec.showTarget) {\n        let targetStr = swapSpec.showTarget\n        if (swapSpec.showTarget === 'window') {\n          targetStr = 'body'\n        }\n        target = asElement(querySelectorExt(first, targetStr))\n      }\n      if (swapSpec.show === 'top' && (first || target)) {\n        target = target || first\n        // @ts-ignore For some reason tsc doesn't recognize \"instant\" as a valid option for now\n        target.scrollIntoView({ block: 'start', behavior: htmx.config.scrollBehavior })\n      }\n      if (swapSpec.show === 'bottom' && (last || target)) {\n        target = target || last\n        // @ts-ignore For some reason tsc doesn't recognize \"instant\" as a valid option for now\n        target.scrollIntoView({ block: 'end', behavior: htmx.config.scrollBehavior })\n      }\n    }\n  }\n\n  /**\n * @param {Element} elt\n * @param {string} attr\n * @param {boolean=} evalAsDefault\n * @param {Object=} values\n * @param {Event=} event\n * @returns {Object}\n */\n  function getValuesForElement(elt, attr, evalAsDefault, values, event) {\n    if (values == null) {\n      values = {}\n    }\n    if (elt == null) {\n      return values\n    }\n    const attributeValue = getAttributeValue(elt, attr)\n    if (attributeValue) {\n      let str = attributeValue.trim()\n      let evaluateValue = evalAsDefault\n      if (str === 'unset') {\n        return null\n      }\n      if (str.indexOf('javascript:') === 0) {\n        str = str.slice(11)\n        evaluateValue = true\n      } else if (str.indexOf('js:') === 0) {\n        str = str.slice(3)\n        evaluateValue = true\n      }\n      if (str.indexOf('{') !== 0) {\n        str = '{' + str + '}'\n      }\n      let varsValues\n      if (evaluateValue) {\n        varsValues = maybeEval(elt, function() {\n          if (event) {\n            return Function('event', 'return (' + str + ')').call(elt, event)\n          } else { // allow window.event to be accessible\n            return Function('return (' + str + ')').call(elt)\n          }\n        }, {})\n      } else {\n        varsValues = parseJSON(str)\n      }\n      for (const key in varsValues) {\n        if (varsValues.hasOwnProperty(key)) {\n          if (values[key] == null) {\n            values[key] = varsValues[key]\n          }\n        }\n      }\n    }\n    return getValuesForElement(asElement(parentElt(elt)), attr, evalAsDefault, values, event)\n  }\n\n  /**\n   * @param {EventTarget|string} elt\n   * @param {() => any} toEval\n   * @param {any=} defaultVal\n   * @returns {any}\n   */\n  function maybeEval(elt, toEval, defaultVal) {\n    if (htmx.config.allowEval) {\n      return toEval()\n    } else {\n      triggerErrorEvent(elt, 'htmx:evalDisallowedError')\n      return defaultVal\n    }\n  }\n\n  /**\n * @param {Element} elt\n * @param {Event=} event\n * @param {*?=} expressionVars\n * @returns\n */\n  function getHXVarsForElement(elt, event, expressionVars) {\n    return getValuesForElement(elt, 'hx-vars', true, expressionVars, event)\n  }\n\n  /**\n * @param {Element} elt\n * @param {Event=} event\n * @param {*?=} expressionVars\n * @returns\n */\n  function getHXValsForElement(elt, event, expressionVars) {\n    return getValuesForElement(elt, 'hx-vals', false, expressionVars, event)\n  }\n\n  /**\n * @param {Element} elt\n * @param {Event=} event\n * @returns {FormData}\n */\n  function getExpressionVars(elt, event) {\n    return mergeObjects(getHXVarsForElement(elt, event), getHXValsForElement(elt, event))\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {string} header\n   * @param {string|null} headerValue\n   */\n  function safelySetHeaderValue(xhr, header, headerValue) {\n    if (headerValue !== null) {\n      try {\n        xhr.setRequestHeader(header, headerValue)\n      } catch (e) {\n      // On an exception, try to set the header URI encoded instead\n        xhr.setRequestHeader(header, encodeURIComponent(headerValue))\n        xhr.setRequestHeader(header + '-URI-AutoEncoded', 'true')\n      }\n    }\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @return {string}\n   */\n  function getPathFromResponse(xhr) {\n    if (xhr.responseURL) {\n      try {\n        const url = new URL(xhr.responseURL)\n        return url.pathname + url.search\n      } catch (e) {\n        triggerErrorEvent(getDocument().body, 'htmx:badResponseUrl', { url: xhr.responseURL })\n      }\n    }\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {RegExp} regexp\n   * @return {boolean}\n   */\n  function hasHeader(xhr, regexp) {\n    return regexp.test(xhr.getAllResponseHeaders())\n  }\n\n  /**\n   * Issues an htmx-style AJAX request\n   *\n   * @see https://htmx.org/api/#ajax\n   *\n   * @param {HttpVerb} verb\n   * @param {string} path the URL path to make the AJAX\n   * @param {Element|string|HtmxAjaxHelperContext} context the element to target (defaults to the **body**) | a selector for the target | a context object that contains any of the following\n   * @return {Promise<void>} Promise that resolves immediately if no request is sent, or when the request is complete\n   */\n  function ajaxHelper(verb, path, context) {\n    verb = (/** @type HttpVerb */(verb.toLowerCase()))\n    if (context) {\n      if (context instanceof Element || typeof context === 'string') {\n        return issueAjaxRequest(verb, path, null, null, {\n          targetOverride: resolveTarget(context) || DUMMY_ELT,\n          returnPromise: true\n        })\n      } else {\n        let resolvedTarget = resolveTarget(context.target)\n        // If target is supplied but can't resolve OR source is supplied but both target and source can't be resolved\n        // then use DUMMY_ELT to abort the request with htmx:targetError to avoid it replacing body by mistake\n        if ((context.target && !resolvedTarget) || (context.source && !resolvedTarget && !resolveTarget(context.source))) {\n          resolvedTarget = DUMMY_ELT\n        }\n        return issueAjaxRequest(verb, path, resolveTarget(context.source), context.event,\n          {\n            handler: context.handler,\n            headers: context.headers,\n            values: context.values,\n            targetOverride: resolvedTarget,\n            swapOverride: context.swap,\n            select: context.select,\n            returnPromise: true\n          })\n      }\n    } else {\n      return issueAjaxRequest(verb, path, null, null, {\n        returnPromise: true\n      })\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @return {Element[]}\n   */\n  function hierarchyForElt(elt) {\n    const arr = []\n    while (elt) {\n      arr.push(elt)\n      elt = elt.parentElement\n    }\n    return arr\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} path\n   * @param {HtmxRequestConfig} requestConfig\n   * @return {boolean}\n   */\n  function verifyPath(elt, path, requestConfig) {\n    const url = new URL(path, location.protocol !== 'about:' ? location.href : window.origin)\n    const origin = location.protocol !== 'about:' ? location.origin : window.origin\n    const sameHost = origin === url.origin\n\n    if (htmx.config.selfRequestsOnly) {\n      if (!sameHost) {\n        return false\n      }\n    }\n    return triggerEvent(elt, 'htmx:validateUrl', mergeObjects({ url, sameHost }, requestConfig))\n  }\n\n  /**\n   * @param {Object|FormData} obj\n   * @return {FormData}\n   */\n  function formDataFromObject(obj) {\n    if (obj instanceof FormData) return obj\n    const formData = new FormData()\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (obj[key] && typeof obj[key].forEach === 'function') {\n          obj[key].forEach(function(v) { formData.append(key, v) })\n        } else if (typeof obj[key] === 'object' && !(obj[key] instanceof Blob)) {\n          formData.append(key, JSON.stringify(obj[key]))\n        } else {\n          formData.append(key, obj[key])\n        }\n      }\n    }\n    return formData\n  }\n\n  /**\n   * @param {FormData} formData\n   * @param {string} name\n   * @param {Array} array\n   * @returns {Array}\n   */\n  function formDataArrayProxy(formData, name, array) {\n    // mutating the array should mutate the underlying form data\n    return new Proxy(array, {\n      get: function(target, key) {\n        if (typeof key === 'number') return target[key]\n        if (key === 'length') return target.length\n        if (key === 'push') {\n          return function(value) {\n            target.push(value)\n            formData.append(name, value)\n          }\n        }\n        if (typeof target[key] === 'function') {\n          return function() {\n            target[key].apply(target, arguments)\n            formData.delete(name)\n            target.forEach(function(v) { formData.append(name, v) })\n          }\n        }\n\n        if (target[key] && target[key].length === 1) {\n          return target[key][0]\n        } else {\n          return target[key]\n        }\n      },\n      set: function(target, index, value) {\n        target[index] = value\n        formData.delete(name)\n        target.forEach(function(v) { formData.append(name, v) })\n        return true\n      }\n    })\n  }\n\n  /**\n   * @param {FormData} formData\n   * @returns {Object}\n   */\n  function formDataProxy(formData) {\n    return new Proxy(formData, {\n      get: function(target, name) {\n        if (typeof name === 'symbol') {\n          // Forward symbol calls to the FormData itself directly\n          const result = Reflect.get(target, name)\n          // Wrap in function with apply to correctly bind the FormData context, as a direct call would result in an illegal invocation error\n          if (typeof result === 'function') {\n            return function() {\n              return result.apply(formData, arguments)\n            }\n          } else {\n            return result\n          }\n        }\n        if (name === 'toJSON') {\n          // Support JSON.stringify call on proxy\n          return () => Object.fromEntries(formData)\n        }\n        if (name in target) {\n          // Wrap in function with apply to correctly bind the FormData context, as a direct call would result in an illegal invocation error\n          if (typeof target[name] === 'function') {\n            return function() {\n              return formData[name].apply(formData, arguments)\n            }\n          }\n        }\n        const array = formData.getAll(name)\n        // Those 2 undefined & single value returns are for retro-compatibility as we weren't using FormData before\n        if (array.length === 0) {\n          return undefined\n        } else if (array.length === 1) {\n          return array[0]\n        } else {\n          return formDataArrayProxy(target, name, array)\n        }\n      },\n      set: function(target, name, value) {\n        if (typeof name !== 'string') {\n          return false\n        }\n        target.delete(name)\n        if (value && typeof value.forEach === 'function') {\n          value.forEach(function(v) { target.append(name, v) })\n        } else if (typeof value === 'object' && !(value instanceof Blob)) {\n          target.append(name, JSON.stringify(value))\n        } else {\n          target.append(name, value)\n        }\n        return true\n      },\n      deleteProperty: function(target, name) {\n        if (typeof name === 'string') {\n          target.delete(name)\n        }\n        return true\n      },\n      // Support Object.assign call from proxy\n      ownKeys: function(target) {\n        return Reflect.ownKeys(Object.fromEntries(target))\n      },\n      getOwnPropertyDescriptor: function(target, prop) {\n        return Reflect.getOwnPropertyDescriptor(Object.fromEntries(target), prop)\n      }\n    })\n  }\n\n  /**\n   * @param {HttpVerb} verb\n   * @param {string} path\n   * @param {Element} elt\n   * @param {Event} event\n   * @param {HtmxAjaxEtc} [etc]\n   * @param {boolean} [confirmed]\n   * @return {Promise<void>}\n   */\n  function issueAjaxRequest(verb, path, elt, event, etc, confirmed) {\n    let resolve = null\n    let reject = null\n    etc = etc != null ? etc : {}\n    if (etc.returnPromise && typeof Promise !== 'undefined') {\n      var promise = new Promise(function(_resolve, _reject) {\n        resolve = _resolve\n        reject = _reject\n      })\n    }\n    if (elt == null) {\n      elt = getDocument().body\n    }\n    const responseHandler = etc.handler || handleAjaxResponse\n    const select = etc.select || null\n\n    if (!bodyContains(elt)) {\n    // do not issue requests for elements removed from the DOM\n      maybeCall(resolve)\n      return promise\n    }\n    const target = etc.targetOverride || asElement(getTarget(elt))\n    if (target == null || target == DUMMY_ELT) {\n      triggerErrorEvent(elt, 'htmx:targetError', { target: getClosestAttributeValue(elt, 'hx-target') })\n      maybeCall(reject)\n      return promise\n    }\n\n    let eltData = getInternalData(elt)\n    const submitter = eltData.lastButtonClicked\n\n    if (submitter) {\n      const buttonPath = getRawAttribute(submitter, 'formaction')\n      if (buttonPath != null) {\n        path = buttonPath\n      }\n\n      const buttonVerb = getRawAttribute(submitter, 'formmethod')\n      if (buttonVerb != null) {\n        if (VERBS.includes(buttonVerb.toLowerCase())) {\n          verb = (/** @type HttpVerb */(buttonVerb))\n        } else {\n          maybeCall(resolve)\n          return promise\n        }\n      }\n    }\n\n    const confirmQuestion = getClosestAttributeValue(elt, 'hx-confirm')\n    // allow event-based confirmation w/ a callback\n    if (confirmed === undefined) {\n      const issueRequest = function(skipConfirmation) {\n        return issueAjaxRequest(verb, path, elt, event, etc, !!skipConfirmation)\n      }\n      const confirmDetails = { target, elt, path, verb, triggeringEvent: event, etc, issueRequest, question: confirmQuestion }\n      if (triggerEvent(elt, 'htmx:confirm', confirmDetails) === false) {\n        maybeCall(resolve)\n        return promise\n      }\n    }\n\n    let syncElt = elt\n    let syncStrategy = getClosestAttributeValue(elt, 'hx-sync')\n    let queueStrategy = null\n    let abortable = false\n    if (syncStrategy) {\n      const syncStrings = syncStrategy.split(':')\n      const selector = syncStrings[0].trim()\n      if (selector === 'this') {\n        syncElt = findThisElement(elt, 'hx-sync')\n      } else {\n        syncElt = asElement(querySelectorExt(elt, selector))\n      }\n      // default to the drop strategy\n      syncStrategy = (syncStrings[1] || 'drop').trim()\n      eltData = getInternalData(syncElt)\n      if (syncStrategy === 'drop' && eltData.xhr && eltData.abortable !== true) {\n        maybeCall(resolve)\n        return promise\n      } else if (syncStrategy === 'abort') {\n        if (eltData.xhr) {\n          maybeCall(resolve)\n          return promise\n        } else {\n          abortable = true\n        }\n      } else if (syncStrategy === 'replace') {\n        triggerEvent(syncElt, 'htmx:abort') // abort the current request and continue\n      } else if (syncStrategy.indexOf('queue') === 0) {\n        const queueStrArray = syncStrategy.split(' ')\n        queueStrategy = (queueStrArray[1] || 'last').trim()\n      }\n    }\n\n    if (eltData.xhr) {\n      if (eltData.abortable) {\n        triggerEvent(syncElt, 'htmx:abort') // abort the current request and continue\n      } else {\n        if (queueStrategy == null) {\n          if (event) {\n            const eventData = getInternalData(event)\n            if (eventData && eventData.triggerSpec && eventData.triggerSpec.queue) {\n              queueStrategy = eventData.triggerSpec.queue\n            }\n          }\n          if (queueStrategy == null) {\n            queueStrategy = 'last'\n          }\n        }\n        if (eltData.queuedRequests == null) {\n          eltData.queuedRequests = []\n        }\n        if (queueStrategy === 'first' && eltData.queuedRequests.length === 0) {\n          eltData.queuedRequests.push(function() {\n            issueAjaxRequest(verb, path, elt, event, etc)\n          })\n        } else if (queueStrategy === 'all') {\n          eltData.queuedRequests.push(function() {\n            issueAjaxRequest(verb, path, elt, event, etc)\n          })\n        } else if (queueStrategy === 'last') {\n          eltData.queuedRequests = [] // dump existing queue\n          eltData.queuedRequests.push(function() {\n            issueAjaxRequest(verb, path, elt, event, etc)\n          })\n        }\n        maybeCall(resolve)\n        return promise\n      }\n    }\n\n    const xhr = new XMLHttpRequest()\n    eltData.xhr = xhr\n    eltData.abortable = abortable\n    const endRequestLock = function() {\n      eltData.xhr = null\n      eltData.abortable = false\n      if (eltData.queuedRequests != null &&\n      eltData.queuedRequests.length > 0) {\n        const queuedRequest = eltData.queuedRequests.shift()\n        queuedRequest()\n      }\n    }\n    const promptQuestion = getClosestAttributeValue(elt, 'hx-prompt')\n    if (promptQuestion) {\n      var promptResponse = prompt(promptQuestion)\n      // prompt returns null if cancelled and empty string if accepted with no entry\n      if (promptResponse === null ||\n      !triggerEvent(elt, 'htmx:prompt', { prompt: promptResponse, target })) {\n        maybeCall(resolve)\n        endRequestLock()\n        return promise\n      }\n    }\n\n    if (confirmQuestion && !confirmed) {\n      if (!confirm(confirmQuestion)) {\n        maybeCall(resolve)\n        endRequestLock()\n        return promise\n      }\n    }\n\n    let headers = getHeaders(elt, target, promptResponse)\n\n    if (verb !== 'get' && !usesFormData(elt)) {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded'\n    }\n\n    if (etc.headers) {\n      headers = mergeObjects(headers, etc.headers)\n    }\n    const results = getInputValues(elt, verb)\n    let errors = results.errors\n    const rawFormData = results.formData\n    if (etc.values) {\n      overrideFormData(rawFormData, formDataFromObject(etc.values))\n    }\n    const expressionVars = formDataFromObject(getExpressionVars(elt, event))\n    const allFormData = overrideFormData(rawFormData, expressionVars)\n    let filteredFormData = filterValues(allFormData, elt)\n\n    if (htmx.config.getCacheBusterParam && verb === 'get') {\n      filteredFormData.set('org.htmx.cache-buster', getRawAttribute(target, 'id') || 'true')\n    }\n\n    // behavior of anchors w/ empty href is to use the current URL\n    if (path == null || path === '') {\n      path = location.href\n    }\n\n    /**\n     * @type {Object}\n     * @property {boolean} [credentials]\n     * @property {number} [timeout]\n     * @property {boolean} [noHeaders]\n     */\n    const requestAttrValues = getValuesForElement(elt, 'hx-request')\n\n    const eltIsBoosted = getInternalData(elt).boosted\n\n    let useUrlParams = htmx.config.methodsThatUseUrlParams.indexOf(verb) >= 0\n\n    /** @type HtmxRequestConfig */\n    const requestConfig = {\n      boosted: eltIsBoosted,\n      useUrlParams,\n      formData: filteredFormData,\n      parameters: formDataProxy(filteredFormData),\n      unfilteredFormData: allFormData,\n      unfilteredParameters: formDataProxy(allFormData),\n      headers,\n      elt,\n      target,\n      verb,\n      errors,\n      withCredentials: etc.credentials || requestAttrValues.credentials || htmx.config.withCredentials,\n      timeout: etc.timeout || requestAttrValues.timeout || htmx.config.timeout,\n      path,\n      triggeringEvent: event\n    }\n\n    if (!triggerEvent(elt, 'htmx:configRequest', requestConfig)) {\n      maybeCall(resolve)\n      endRequestLock()\n      return promise\n    }\n\n    // copy out in case the object was overwritten\n    path = requestConfig.path\n    verb = requestConfig.verb\n    headers = requestConfig.headers\n    filteredFormData = formDataFromObject(requestConfig.parameters)\n    errors = requestConfig.errors\n    useUrlParams = requestConfig.useUrlParams\n\n    if (errors && errors.length > 0) {\n      triggerEvent(elt, 'htmx:validation:halted', requestConfig)\n      maybeCall(resolve)\n      endRequestLock()\n      return promise\n    }\n\n    const splitPath = path.split('#')\n    const pathNoAnchor = splitPath[0]\n    const anchor = splitPath[1]\n\n    let finalPath = path\n    if (useUrlParams) {\n      finalPath = pathNoAnchor\n      const hasValues = !filteredFormData.keys().next().done\n      if (hasValues) {\n        if (finalPath.indexOf('?') < 0) {\n          finalPath += '?'\n        } else {\n          finalPath += '&'\n        }\n        finalPath += urlEncode(filteredFormData)\n        if (anchor) {\n          finalPath += '#' + anchor\n        }\n      }\n    }\n\n    if (!verifyPath(elt, finalPath, requestConfig)) {\n      triggerErrorEvent(elt, 'htmx:invalidPath', requestConfig)\n      maybeCall(reject)\n      endRequestLock()\n      return promise\n    }\n\n    xhr.open(verb.toUpperCase(), finalPath, true)\n    xhr.overrideMimeType('text/html')\n    xhr.withCredentials = requestConfig.withCredentials\n    xhr.timeout = requestConfig.timeout\n\n    // request headers\n    if (requestAttrValues.noHeaders) {\n    // ignore all headers\n    } else {\n      for (const header in headers) {\n        if (headers.hasOwnProperty(header)) {\n          const headerValue = headers[header]\n          safelySetHeaderValue(xhr, header, headerValue)\n        }\n      }\n    }\n\n    /** @type {HtmxResponseInfo} */\n    const responseInfo = {\n      xhr,\n      target,\n      requestConfig,\n      etc,\n      boosted: eltIsBoosted,\n      select,\n      pathInfo: {\n        requestPath: path,\n        finalRequestPath: finalPath,\n        responsePath: null,\n        anchor\n      }\n    }\n\n    xhr.onload = function() {\n      try {\n        const hierarchy = hierarchyForElt(elt)\n        responseInfo.pathInfo.responsePath = getPathFromResponse(xhr)\n        responseHandler(elt, responseInfo)\n        if (responseInfo.keepIndicators !== true) {\n          removeRequestIndicators(indicators, disableElts)\n        }\n        triggerEvent(elt, 'htmx:afterRequest', responseInfo)\n        triggerEvent(elt, 'htmx:afterOnLoad', responseInfo)\n        // if the body no longer contains the element, trigger the event on the closest parent\n        // remaining in the DOM\n        if (!bodyContains(elt)) {\n          let secondaryTriggerElt = null\n          while (hierarchy.length > 0 && secondaryTriggerElt == null) {\n            const parentEltInHierarchy = hierarchy.shift()\n            if (bodyContains(parentEltInHierarchy)) {\n              secondaryTriggerElt = parentEltInHierarchy\n            }\n          }\n          if (secondaryTriggerElt) {\n            triggerEvent(secondaryTriggerElt, 'htmx:afterRequest', responseInfo)\n            triggerEvent(secondaryTriggerElt, 'htmx:afterOnLoad', responseInfo)\n          }\n        }\n        maybeCall(resolve)\n      } catch (e) {\n        triggerErrorEvent(elt, 'htmx:onLoadError', mergeObjects({ error: e }, responseInfo))\n        throw e\n      } finally {\n        endRequestLock()\n      }\n    }\n    xhr.onerror = function() {\n      removeRequestIndicators(indicators, disableElts)\n      triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo)\n      triggerErrorEvent(elt, 'htmx:sendError', responseInfo)\n      maybeCall(reject)\n      endRequestLock()\n    }\n    xhr.onabort = function() {\n      removeRequestIndicators(indicators, disableElts)\n      triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo)\n      triggerErrorEvent(elt, 'htmx:sendAbort', responseInfo)\n      maybeCall(reject)\n      endRequestLock()\n    }\n    xhr.ontimeout = function() {\n      removeRequestIndicators(indicators, disableElts)\n      triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo)\n      triggerErrorEvent(elt, 'htmx:timeout', responseInfo)\n      maybeCall(reject)\n      endRequestLock()\n    }\n    if (!triggerEvent(elt, 'htmx:beforeRequest', responseInfo)) {\n      maybeCall(resolve)\n      endRequestLock()\n      return promise\n    }\n    var indicators = addRequestIndicatorClasses(elt)\n    var disableElts = disableElements(elt)\n\n    forEach(['loadstart', 'loadend', 'progress', 'abort'], function(eventName) {\n      forEach([xhr, xhr.upload], function(target) {\n        target.addEventListener(eventName, function(event) {\n          triggerEvent(elt, 'htmx:xhr:' + eventName, {\n            lengthComputable: event.lengthComputable,\n            loaded: event.loaded,\n            total: event.total\n          })\n        })\n      })\n    })\n    triggerEvent(elt, 'htmx:beforeSend', responseInfo)\n    const params = useUrlParams ? null : encodeParamsForBody(xhr, elt, filteredFormData)\n    xhr.send(params)\n    return promise\n  }\n\n  /**\n   * @typedef {Object} HtmxHistoryUpdate\n   * @property {string|null} [type]\n   * @property {string|null} [path]\n   */\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxResponseInfo} responseInfo\n   * @return {HtmxHistoryUpdate}\n   */\n  function determineHistoryUpdates(elt, responseInfo) {\n    const xhr = responseInfo.xhr\n\n    //= ==========================================\n    // First consult response headers\n    //= ==========================================\n    let pathFromHeaders = null\n    let typeFromHeaders = null\n    if (hasHeader(xhr, /HX-Push:/i)) {\n      pathFromHeaders = xhr.getResponseHeader('HX-Push')\n      typeFromHeaders = 'push'\n    } else if (hasHeader(xhr, /HX-Push-Url:/i)) {\n      pathFromHeaders = xhr.getResponseHeader('HX-Push-Url')\n      typeFromHeaders = 'push'\n    } else if (hasHeader(xhr, /HX-Replace-Url:/i)) {\n      pathFromHeaders = xhr.getResponseHeader('HX-Replace-Url')\n      typeFromHeaders = 'replace'\n    }\n\n    // if there was a response header, that has priority\n    if (pathFromHeaders) {\n      if (pathFromHeaders === 'false') {\n        return {}\n      } else {\n        return {\n          type: typeFromHeaders,\n          path: pathFromHeaders\n        }\n      }\n    }\n\n    //= ==========================================\n    // Next resolve via DOM values\n    //= ==========================================\n    const requestPath = responseInfo.pathInfo.finalRequestPath\n    const responsePath = responseInfo.pathInfo.responsePath\n\n    const pushUrl = getClosestAttributeValue(elt, 'hx-push-url')\n    const replaceUrl = getClosestAttributeValue(elt, 'hx-replace-url')\n    const elementIsBoosted = getInternalData(elt).boosted\n\n    let saveType = null\n    let path = null\n\n    if (pushUrl) {\n      saveType = 'push'\n      path = pushUrl\n    } else if (replaceUrl) {\n      saveType = 'replace'\n      path = replaceUrl\n    } else if (elementIsBoosted) {\n      saveType = 'push'\n      path = responsePath || requestPath // if there is no response path, go with the original request path\n    }\n\n    if (path) {\n    // false indicates no push, return empty object\n      if (path === 'false') {\n        return {}\n      }\n\n      // true indicates we want to follow wherever the server ended up sending us\n      if (path === 'true') {\n        path = responsePath || requestPath // if there is no response path, go with the original request path\n      }\n\n      // restore any anchor associated with the request\n      if (responseInfo.pathInfo.anchor && path.indexOf('#') === -1) {\n        path = path + '#' + responseInfo.pathInfo.anchor\n      }\n\n      return {\n        type: saveType,\n        path\n      }\n    } else {\n      return {}\n    }\n  }\n\n  /**\n   * @param {HtmxResponseHandlingConfig} responseHandlingConfig\n   * @param {number} status\n   * @return {boolean}\n   */\n  function codeMatches(responseHandlingConfig, status) {\n    var regExp = new RegExp(responseHandlingConfig.code)\n    return regExp.test(status.toString(10))\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @return {HtmxResponseHandlingConfig}\n   */\n  function resolveResponseHandling(xhr) {\n    for (var i = 0; i < htmx.config.responseHandling.length; i++) {\n      /** @type HtmxResponseHandlingConfig */\n      var responseHandlingElement = htmx.config.responseHandling[i]\n      if (codeMatches(responseHandlingElement, xhr.status)) {\n        return responseHandlingElement\n      }\n    }\n    // no matches, return no swap\n    return {\n      swap: false\n    }\n  }\n\n  /**\n   * @param {string} title\n   */\n  function handleTitle(title) {\n    if (title) {\n      const titleElt = find('title')\n      if (titleElt) {\n        titleElt.textContent = title\n      } else {\n        window.document.title = title\n      }\n    }\n  }\n\n  /**\n   * Resove the Retarget selector and throw if not found\n   * @param {Element} elt\n   * @param {String} target\n   * @returns {Element}\n   */\n  function resolveRetarget(elt, target) {\n    if (target === 'this') {\n      return elt\n    }\n    const resolvedTarget = asElement(querySelectorExt(elt, target))\n    if (resolvedTarget == null) {\n      triggerErrorEvent(elt, 'htmx:targetError', { target })\n      throw new Error(`Invalid re-target ${target}`)\n    }\n    return resolvedTarget\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxResponseInfo} responseInfo\n   */\n  function handleAjaxResponse(elt, responseInfo) {\n    const xhr = responseInfo.xhr\n    let target = responseInfo.target\n    const etc = responseInfo.etc\n    const responseInfoSelect = responseInfo.select\n\n    if (!triggerEvent(elt, 'htmx:beforeOnLoad', responseInfo)) return\n\n    if (hasHeader(xhr, /HX-Trigger:/i)) {\n      handleTriggerHeader(xhr, 'HX-Trigger', elt)\n    }\n\n    if (hasHeader(xhr, /HX-Location:/i)) {\n      saveCurrentPageToHistory()\n      let redirectPath = xhr.getResponseHeader('HX-Location')\n      /** @type {HtmxAjaxHelperContext&{path:string}} */\n      var redirectSwapSpec\n      if (redirectPath.indexOf('{') === 0) {\n        redirectSwapSpec = parseJSON(redirectPath)\n        // what's the best way to throw an error if the user didn't include this\n        redirectPath = redirectSwapSpec.path\n        delete redirectSwapSpec.path\n      }\n      ajaxHelper('get', redirectPath, redirectSwapSpec).then(function() {\n        pushUrlIntoHistory(redirectPath)\n      })\n      return\n    }\n\n    const shouldRefresh = hasHeader(xhr, /HX-Refresh:/i) && xhr.getResponseHeader('HX-Refresh') === 'true'\n\n    if (hasHeader(xhr, /HX-Redirect:/i)) {\n      responseInfo.keepIndicators = true\n      htmx.location.href = xhr.getResponseHeader('HX-Redirect')\n      shouldRefresh && htmx.location.reload()\n      return\n    }\n\n    if (shouldRefresh) {\n      responseInfo.keepIndicators = true\n      htmx.location.reload()\n      return\n    }\n\n    const historyUpdate = determineHistoryUpdates(elt, responseInfo)\n\n    const responseHandling = resolveResponseHandling(xhr)\n    const shouldSwap = responseHandling.swap\n    let isError = !!responseHandling.error\n    let ignoreTitle = htmx.config.ignoreTitle || responseHandling.ignoreTitle\n    let selectOverride = responseHandling.select\n    if (responseHandling.target) {\n      responseInfo.target = resolveRetarget(elt, responseHandling.target)\n    }\n    var swapOverride = etc.swapOverride\n    if (swapOverride == null && responseHandling.swapOverride) {\n      swapOverride = responseHandling.swapOverride\n    }\n\n    // response headers override response handling config\n    if (hasHeader(xhr, /HX-Retarget:/i)) {\n      responseInfo.target = resolveRetarget(elt, xhr.getResponseHeader('HX-Retarget'))\n    }\n\n    if (hasHeader(xhr, /HX-Reswap:/i)) {\n      swapOverride = xhr.getResponseHeader('HX-Reswap')\n    }\n\n    var serverResponse = xhr.response\n    /** @type HtmxBeforeSwapDetails */\n    var beforeSwapDetails = mergeObjects({\n      shouldSwap,\n      serverResponse,\n      isError,\n      ignoreTitle,\n      selectOverride,\n      swapOverride\n    }, responseInfo)\n\n    if (responseHandling.event && !triggerEvent(target, responseHandling.event, beforeSwapDetails)) return\n\n    if (!triggerEvent(target, 'htmx:beforeSwap', beforeSwapDetails)) return\n\n    target = beforeSwapDetails.target // allow re-targeting\n    serverResponse = beforeSwapDetails.serverResponse // allow updating content\n    isError = beforeSwapDetails.isError // allow updating error\n    ignoreTitle = beforeSwapDetails.ignoreTitle // allow updating ignoring title\n    selectOverride = beforeSwapDetails.selectOverride // allow updating select override\n    swapOverride = beforeSwapDetails.swapOverride // allow updating swap override\n\n    responseInfo.target = target // Make updated target available to response events\n    responseInfo.failed = isError // Make failed property available to response events\n    responseInfo.successful = !isError // Make successful property available to response events\n\n    if (beforeSwapDetails.shouldSwap) {\n      if (xhr.status === 286) {\n        cancelPolling(elt)\n      }\n\n      withExtensions(elt, function(extension) {\n        serverResponse = extension.transformResponse(serverResponse, xhr, elt)\n      })\n\n      // Save current page if there will be a history update\n      if (historyUpdate.type) {\n        saveCurrentPageToHistory()\n      }\n\n      var swapSpec = getSwapSpecification(elt, swapOverride)\n\n      if (!swapSpec.hasOwnProperty('ignoreTitle')) {\n        swapSpec.ignoreTitle = ignoreTitle\n      }\n\n      target.classList.add(htmx.config.swappingClass)\n\n      if (responseInfoSelect) {\n        selectOverride = responseInfoSelect\n      }\n\n      if (hasHeader(xhr, /HX-Reselect:/i)) {\n        selectOverride = xhr.getResponseHeader('HX-Reselect')\n      }\n\n      const selectOOB = getClosestAttributeValue(elt, 'hx-select-oob')\n      const select = getClosestAttributeValue(elt, 'hx-select')\n\n      swap(target, serverResponse, swapSpec, {\n        select: selectOverride === 'unset' ? null : selectOverride || select,\n        selectOOB,\n        eventInfo: responseInfo,\n        anchor: responseInfo.pathInfo.anchor,\n        contextElement: elt,\n        afterSwapCallback: function() {\n          if (hasHeader(xhr, /HX-Trigger-After-Swap:/i)) {\n            let finalElt = elt\n            if (!bodyContains(elt)) {\n              finalElt = getDocument().body\n            }\n            handleTriggerHeader(xhr, 'HX-Trigger-After-Swap', finalElt)\n          }\n        },\n        afterSettleCallback: function() {\n          if (hasHeader(xhr, /HX-Trigger-After-Settle:/i)) {\n            let finalElt = elt\n            if (!bodyContains(elt)) {\n              finalElt = getDocument().body\n            }\n            handleTriggerHeader(xhr, 'HX-Trigger-After-Settle', finalElt)\n          }\n        },\n        beforeSwapCallback: function() {\n          // if we need to save history, do so, before swapping so that relative resources have the correct base URL\n          if (historyUpdate.type) {\n            triggerEvent(getDocument().body, 'htmx:beforeHistoryUpdate', mergeObjects({ history: historyUpdate }, responseInfo))\n            if (historyUpdate.type === 'push') {\n              pushUrlIntoHistory(historyUpdate.path)\n              triggerEvent(getDocument().body, 'htmx:pushedIntoHistory', { path: historyUpdate.path })\n            } else {\n              replaceUrlInHistory(historyUpdate.path)\n              triggerEvent(getDocument().body, 'htmx:replacedInHistory', { path: historyUpdate.path })\n            }\n          }\n        }\n      })\n    }\n    if (isError) {\n      triggerErrorEvent(elt, 'htmx:responseError', mergeObjects({ error: 'Response Status Error Code ' + xhr.status + ' from ' + responseInfo.pathInfo.requestPath }, responseInfo))\n    }\n  }\n\n  //= ===================================================================\n  // Extensions API\n  //= ===================================================================\n\n  /** @type {Object<string, HtmxExtension>} */\n  const extensions = {}\n\n  /**\n   * extensionBase defines the default functions for all extensions.\n   * @returns {HtmxExtension}\n   */\n  function extensionBase() {\n    return {\n      init: function(api) { return null },\n      getSelectors: function() { return null },\n      onEvent: function(name, evt) { return true },\n      transformResponse: function(text, xhr, elt) { return text },\n      isInlineSwap: function(swapStyle) { return false },\n      handleSwap: function(swapStyle, target, fragment, settleInfo) { return false },\n      encodeParameters: function(xhr, parameters, elt) { return null }\n    }\n  }\n\n  /**\n   * defineExtension initializes the extension and adds it to the htmx registry\n   *\n   * @see https://htmx.org/api/#defineExtension\n   *\n   * @param {string} name the extension name\n   * @param {Partial<HtmxExtension>} extension the extension definition\n   */\n  function defineExtension(name, extension) {\n    if (extension.init) {\n      extension.init(internalAPI)\n    }\n    extensions[name] = mergeObjects(extensionBase(), extension)\n  }\n\n  /**\n   * removeExtension removes an extension from the htmx registry\n   *\n   * @see https://htmx.org/api/#removeExtension\n   *\n   * @param {string} name\n   */\n  function removeExtension(name) {\n    delete extensions[name]\n  }\n\n  /**\n   * getExtensions searches up the DOM tree to return all extensions that can be applied to a given element\n   *\n   * @param {Element} elt\n   * @param {HtmxExtension[]=} extensionsToReturn\n   * @param {string[]=} extensionsToIgnore\n   * @returns {HtmxExtension[]}\n   */\n  function getExtensions(elt, extensionsToReturn, extensionsToIgnore) {\n    if (extensionsToReturn == undefined) {\n      extensionsToReturn = []\n    }\n    if (elt == undefined) {\n      return extensionsToReturn\n    }\n    if (extensionsToIgnore == undefined) {\n      extensionsToIgnore = []\n    }\n    const extensionsForElement = getAttributeValue(elt, 'hx-ext')\n    if (extensionsForElement) {\n      forEach(extensionsForElement.split(','), function(extensionName) {\n        extensionName = extensionName.replace(/ /g, '')\n        if (extensionName.slice(0, 7) == 'ignore:') {\n          extensionsToIgnore.push(extensionName.slice(7))\n          return\n        }\n        if (extensionsToIgnore.indexOf(extensionName) < 0) {\n          const extension = extensions[extensionName]\n          if (extension && extensionsToReturn.indexOf(extension) < 0) {\n            extensionsToReturn.push(extension)\n          }\n        }\n      })\n    }\n    return getExtensions(asElement(parentElt(elt)), extensionsToReturn, extensionsToIgnore)\n  }\n\n  //= ===================================================================\n  // Initialization\n  //= ===================================================================\n  var isReady = false\n  getDocument().addEventListener('DOMContentLoaded', function() {\n    isReady = true\n  })\n\n  /**\n   * Execute a function now if DOMContentLoaded has fired, otherwise listen for it.\n   *\n   * This function uses isReady because there is no reliable way to ask the browser whether\n   * the DOMContentLoaded event has already been fired; there's a gap between DOMContentLoaded\n   * firing and readystate=complete.\n   */\n  function ready(fn) {\n    // Checking readyState here is a failsafe in case the htmx script tag entered the DOM by\n    // some means other than the initial page load.\n    if (isReady || getDocument().readyState === 'complete') {\n      fn()\n    } else {\n      getDocument().addEventListener('DOMContentLoaded', fn)\n    }\n  }\n\n  function insertIndicatorStyles() {\n    if (htmx.config.includeIndicatorStyles !== false) {\n      const nonceAttribute = htmx.config.inlineStyleNonce ? ` nonce=\"${htmx.config.inlineStyleNonce}\"` : ''\n      const indicator = htmx.config.indicatorClass\n      const request = htmx.config.requestClass\n      getDocument().head.insertAdjacentHTML('beforeend',\n        `<style${nonceAttribute}>` +\n        `.${indicator}{opacity:0;visibility: hidden} ` +\n        `.${request} .${indicator}, .${request}.${indicator}{opacity:1;visibility: visible;transition: opacity 200ms ease-in}` +\n        '</style>'\n      )\n    }\n  }\n\n  function getMetaConfig() {\n    /** @type HTMLMetaElement */\n    const element = getDocument().querySelector('meta[name=\"htmx-config\"]')\n    if (element) {\n      return parseJSON(element.content)\n    } else {\n      return null\n    }\n  }\n\n  function mergeMetaConfig() {\n    const metaConfig = getMetaConfig()\n    if (metaConfig) {\n      htmx.config = mergeObjects(htmx.config, metaConfig)\n    }\n  }\n\n  // initialize the document\n  ready(function() {\n    mergeMetaConfig()\n    insertIndicatorStyles()\n    let body = getDocument().body\n    processNode(body)\n    const restoredElts = getDocument().querySelectorAll(\n      \"[hx-trigger='restored'],[data-hx-trigger='restored']\"\n    )\n    body.addEventListener('htmx:abort', function(evt) {\n      const target = evt.target\n      const internalData = getInternalData(target)\n      if (internalData && internalData.xhr) {\n        internalData.xhr.abort()\n      }\n    })\n    /** @type {(ev: PopStateEvent) => any} */\n    const originalPopstate = window.onpopstate ? window.onpopstate.bind(window) : null\n    /** @type {(ev: PopStateEvent) => any} */\n    window.onpopstate = function(event) {\n      if (event.state && event.state.htmx) {\n        restoreHistory()\n        forEach(restoredElts, function(elt) {\n          triggerEvent(elt, 'htmx:restored', {\n            document: getDocument(),\n            triggerEvent\n          })\n        })\n      } else {\n        if (originalPopstate) {\n          originalPopstate(event)\n        }\n      }\n    }\n    getWindow().setTimeout(function() {\n      triggerEvent(body, 'htmx:load', {}) // give ready handlers a chance to load up before firing this event\n      body = null // kill reference for gc\n    }, 0)\n  })\n\n  return htmx\n})()\n\n/** @typedef {'get'|'head'|'post'|'put'|'delete'|'connect'|'options'|'trace'|'patch'} HttpVerb */\n\n/**\n * @typedef {Object} SwapOptions\n * @property {string} [select]\n * @property {string} [selectOOB]\n * @property {*} [eventInfo]\n * @property {string} [anchor]\n * @property {Element} [contextElement]\n * @property {swapCallback} [afterSwapCallback]\n * @property {swapCallback} [afterSettleCallback]\n * @property {swapCallback} [beforeSwapCallback]\n * @property {string} [title]\n * @property {boolean} [historyRequest]\n */\n\n/**\n * @callback swapCallback\n */\n\n/**\n * @typedef {'innerHTML' | 'outerHTML' | 'beforebegin' | 'afterbegin' | 'beforeend' | 'afterend' | 'delete' | 'none' | string} HtmxSwapStyle\n */\n\n/**\n * @typedef HtmxSwapSpecification\n * @property {HtmxSwapStyle} swapStyle\n * @property {number} swapDelay\n * @property {number} settleDelay\n * @property {boolean} [transition]\n * @property {boolean} [ignoreTitle]\n * @property {string} [head]\n * @property {'top' | 'bottom' | number } [scroll]\n * @property {string} [scrollTarget]\n * @property {string} [show]\n * @property {string} [showTarget]\n * @property {boolean} [focusScroll]\n */\n\n/**\n * @typedef {((this:Node, evt:Event) => boolean) & {source: string}} ConditionalFunction\n */\n\n/**\n * @typedef {Object} HtmxTriggerSpecification\n * @property {string} trigger\n * @property {number} [pollInterval]\n * @property {ConditionalFunction} [eventFilter]\n * @property {boolean} [changed]\n * @property {boolean} [once]\n * @property {boolean} [consume]\n * @property {number} [delay]\n * @property {string} [from]\n * @property {string} [target]\n * @property {number} [throttle]\n * @property {string} [queue]\n * @property {string} [root]\n * @property {string} [threshold]\n */\n\n/**\n * @typedef {{elt: Element, message: string, validity: ValidityState}} HtmxElementValidationError\n */\n\n/**\n * @typedef {Record<string, string>} HtmxHeaderSpecification\n * @property {'true'} HX-Request\n * @property {string|null} HX-Trigger\n * @property {string|null} HX-Trigger-Name\n * @property {string|null} HX-Target\n * @property {string} HX-Current-URL\n * @property {string} [HX-Prompt]\n * @property {'true'} [HX-Boosted]\n * @property {string} [Content-Type]\n * @property {'true'} [HX-History-Restore-Request]\n */\n\n/**\n * @typedef HtmxAjaxHelperContext\n * @property {Element|string} [source]\n * @property {Event} [event]\n * @property {HtmxAjaxHandler} [handler]\n * @property {Element|string} [target]\n * @property {HtmxSwapStyle} [swap]\n * @property {Object|FormData} [values]\n * @property {Record<string,string>} [headers]\n * @property {string} [select]\n */\n\n/**\n * @typedef {Object} HtmxRequestConfig\n * @property {boolean} boosted\n * @property {boolean} useUrlParams\n * @property {FormData} formData\n * @property {Object} parameters formData proxy\n * @property {FormData} unfilteredFormData\n * @property {Object} unfilteredParameters unfilteredFormData proxy\n * @property {HtmxHeaderSpecification} headers\n * @property {Element} elt\n * @property {Element} target\n * @property {HttpVerb} verb\n * @property {HtmxElementValidationError[]} errors\n * @property {boolean} withCredentials\n * @property {number} timeout\n * @property {string} path\n * @property {Event} triggeringEvent\n */\n\n/**\n * @typedef {Object} HtmxResponseInfo\n * @property {XMLHttpRequest} xhr\n * @property {Element} target\n * @property {HtmxRequestConfig} requestConfig\n * @property {HtmxAjaxEtc} etc\n * @property {boolean} boosted\n * @property {string} select\n * @property {{requestPath: string, finalRequestPath: string, responsePath: string|null, anchor: string}} pathInfo\n * @property {boolean} [failed]\n * @property {boolean} [successful]\n * @property {boolean} [keepIndicators]\n */\n\n/**\n * @typedef {Object} HtmxAjaxEtc\n * @property {boolean} [returnPromise]\n * @property {HtmxAjaxHandler} [handler]\n * @property {string} [select]\n * @property {Element} [targetOverride]\n * @property {HtmxSwapStyle} [swapOverride]\n * @property {Record<string,string>} [headers]\n * @property {Object|FormData} [values]\n * @property {boolean} [credentials]\n * @property {number} [timeout]\n */\n\n/**\n * @typedef {Object} HtmxResponseHandlingConfig\n * @property {string} [code]\n * @property {boolean} swap\n * @property {boolean} [error]\n * @property {boolean} [ignoreTitle]\n * @property {string} [select]\n * @property {string} [target]\n * @property {string} [swapOverride]\n * @property {string} [event]\n */\n\n/**\n * @typedef {HtmxResponseInfo & {shouldSwap: boolean, serverResponse: any, isError: boolean, ignoreTitle: boolean, selectOverride:string, swapOverride:string}} HtmxBeforeSwapDetails\n */\n\n/**\n * @callback HtmxAjaxHandler\n * @param {Element} elt\n * @param {HtmxResponseInfo} responseInfo\n */\n\n/**\n * @typedef {(() => void)} HtmxSettleTask\n */\n\n/**\n * @typedef {Object} HtmxSettleInfo\n * @property {HtmxSettleTask[]} tasks\n * @property {Element[]} elts\n * @property {string} [title]\n */\n\n/**\n * @see https://github.com/bigskysoftware/htmx-extensions/blob/main/README.md\n * @typedef {Object} HtmxExtension\n * @property {(api: any) => void} init\n * @property {(name: string, event: CustomEvent) => boolean} onEvent\n * @property {(text: string, xhr: XMLHttpRequest, elt: Element) => string} transformResponse\n * @property {(swapStyle: HtmxSwapStyle) => boolean} isInlineSwap\n * @property {(swapStyle: HtmxSwapStyle, target: Node, fragment: Node, settleInfo: HtmxSettleInfo) => boolean|Node[]} handleSwap\n * @property {(xhr: XMLHttpRequest, parameters: FormData, elt: Node) => *|string|null} encodeParameters\n * @property {() => string[]|null} getSelectors\n */\nexport default htmx\n", "import {initAll} from 'govuk-frontend';\nimport \"govuk-frontend/dist/govuk/all.mjs\";\nimport \"opg-sirius-header/sirius-header.js\";\nimport htmx from \"htmx.org/dist/htmx.esm\";\n\ndocument.body.className += ' js-enabled' + ('noModule' in HTMLScriptElement.prototype ? ' govuk-frontend-supported' : '');\ninitAll();\n\nwindow.htmx = htmx\nhtmx.logAll();\nhtmx.config.responseHandling = [{code:\".*\", swap: true}]"],
  "mappings": "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",
  "names": ["getBreakpoint", "name", "property", "value", "window", "getComputedStyle", "document", "documentElement", "getPropertyValue", "undefined", "setFocus", "$element", "options", "_options$onBeforeFocu", "isFocusable", "getAttribute", "setAttribute", "onFocus", "addEventListener", "onBlur", "once", "_options$onBlur", "call", "removeAttribute", "onBeforeFocus", "focus", "isInitialised", "$root", "moduleName", "HTMLElement", "hasAttribute", "isSupported", "$scope", "body", "classList", "contains", "isArray", "option", "Array", "isObject", "isScope", "Element", "Document", "formatErrorMessage", "Component", "message", "GOVUKFrontendError", "Error", "constructor", "args", "name", "SupportError", "$scope", "document", "body", "supportMessage", "HTMLScriptElement", "prototype", "ConfigError", "ElementError", "messageOrOptions", "message", "isObject", "component", "identifier", "element", "expectedType", "formatErrorMessage", "InitError", "componentOrMessage", "Component", "$root", "_$root", "constructor", "childConstructor", "moduleName", "InitError", "elementType", "ElementError", "element", "component", "identifier", "expectedType", "name", "checkSupport", "checkInitialised", "setAttribute", "isInitialised", "isSupported", "SupportError", "HTMLElement", "configOverride", "Symbol", "for", "ConfigurableComponent", "Component", "param", "config", "_config", "constructor", "$root", "childConstructor", "isObject", "defaults", "ConfigError", "formatErrorMessage", "datasetConfig", "normaliseDataset", "_$root", "dataset", "mergeConfigs", "normaliseString", "value", "property", "trimmedValue", "trim", "output", "outputType", "type", "includes", "length", "isFinite", "Number", "schema", "out", "entries", "Object", "properties", "entry", "namespace", "field", "toString", "extractConfigByNamespace", "normaliseOptions", "scopeOrOptions", "$scope", "document", "onError", "options", "isScope", "scope", "configObjects", "formattedConfigObject", "configObject", "key", "keys", "option", "override", "validateConfig", "validationErrors", "name", "conditions", "errors", "Array", "isArray", "required", "errorMessage", "every", "push", "newObject", "current", "keyParts", "split", "index", "I18n", "constructor", "translations", "config", "_config$locale", "locale", "document", "documentElement", "lang", "t", "lookupKey", "options", "Error", "translation", "count", "isObject", "translationPluralForm", "getPluralSuffix", "match", "replacePlaceholders", "translationString", "formatter", "Intl", "NumberFormat", "supportedLocalesOf", "length", "undefined", "replace", "placeholderWithBraces", "placeholderKey", "Object", "prototype", "hasOwnProperty", "call", "placeholderValue", "format", "hasIntlPluralRulesSupport", "Boolean", "window", "PluralRules", "Number", "isFinite", "preferredForm", "select", "console", "warn", "Accordion", "ConfigurableComponent", "constructor", "$root", "config", "i18n", "controlsClass", "showAllClass", "showAllTextClass", "sectionClass", "sectionExpandedClass", "sectionButtonClass", "sectionHeaderClass", "sectionHeadingClass", "sectionHeadingDividerClass", "sectionHeadingTextClass", "sectionHeadingTextFocusClass", "sectionShowHideToggleClass", "sectionShowHideToggleFocusClass", "sectionShowHideTextClass", "upChevronIconClass", "downChevronIconClass", "sectionSummaryClass", "sectionSummaryFocusClass", "sectionContentClass", "$sections", "$showAllButton", "$showAllIcon", "$showAllText", "I18n", "querySelectorAll", "length", "ElementError", "component", "identifier", "initControls", "initSectionHeaders", "updateShowAllButton", "areAllSectionsOpen", "document", "createElement", "setAttribute", "classList", "add", "appendChild", "$accordionControls", "insertBefore", "firstChild", "addEventListener", "onShowOrHideAllToggle", "event", "onBeforeMatch", "forEach", "$section", "i", "$header", "querySelector", "constructHeaderMarkup", "setExpanded", "isExpanded", "onSectionToggle", "setInitialState", "index", "$span", "$heading", "$summary", "$button", "id", "attr", "Array", "from", "attributes", "name", "value", "$headingText", "$headingTextFocus", "childNodes", "$child", "$showHideToggle", "$showHideToggleFocus", "$showHideText", "$showHideIcon", "getButtonPunctuationEl", "$summarySpan", "$summarySpanFocus", "remove", "removeChild", "$fragment", "target", "Element", "closest", "nowExpanded", "storeState", "expanded", "$content", "newButtonText", "t", "textContent", "ariaLabelParts", "push", "trim", "ariaLabelMessage", "join", "removeAttribute", "contains", "every", "toString", "toggle", "getIdentifier", "getAttribute", "rememberExpanded", "window", "sessionStorage", "setItem", "state", "getItem", "$punctuationEl", "moduleName", "defaults", "Object", "freeze", "hideAllSections", "hideSection", "hideSectionAriaLabel", "showAllSections", "showSection", "showSectionAriaLabel", "schema", "properties", "type", "DEBOUNCE_TIMEOUT_IN_SECONDS", "Button", "ConfigurableComponent", "constructor", "$root", "config", "debounceFormSubmitTimer", "addEventListener", "event", "handleKeyDown", "debounce", "$target", "target", "key", "HTMLElement", "getAttribute", "preventDefault", "click", "preventDoubleClick", "window", "setTimeout", "moduleName", "defaults", "Object", "freeze", "schema", "properties", "type", "closestAttributeValue", "$element", "attributeName", "$closestElementWithAttribute", "closest", "getAttribute", "CharacterCount", "ConfigurableComponent", "configOverride", "datasetConfig", "configOverrides", "maxlength", "undefined", "maxwords", "constructor", "$root", "config", "_ref", "_this$config$maxwords", "$textarea", "$visibleCountMessage", "$screenReaderCountMessage", "lastInputTimestamp", "lastInputValue", "valueChecker", "i18n", "maxLength", "querySelector", "HTMLTextAreaElement", "HTMLInputElement", "ElementError", "component", "element", "expectedType", "identifier", "errors", "validateConfig", "schema", "ConfigError", "formatErrorMessage", "I18n", "locale", "closestAttributeValue", "Infinity", "textareaDescriptionId", "id", "$textareaDescription", "document", "getElementById", "$errorMessage", "textContent", "match", "t", "count", "insertAdjacentElement", "createElement", "className", "setAttribute", "classList", "add", "removeAttribute", "bindChangeEvents", "window", "addEventListener", "updateCountMessage", "handleKeyUp", "handleFocus", "handleBlur", "updateVisibleCountMessage", "Date", "now", "setInterval", "updateIfValueChanged", "clearInterval", "value", "updateScreenReaderCountMessage", "isError", "toggle", "isOverThreshold", "getCountMessage", "text", "_text$match", "length", "remainingNumber", "countType", "formatCountMessage", "translationKeySuffix", "Math", "abs", "threshold", "currentLength", "moduleName", "defaults", "Object", "freeze", "charactersUnderLimit", "one", "other", "charactersAtLimit", "charactersOverLimit", "wordsUnderLimit", "wordsAtLimit", "wordsOverLimit", "textareaDescription", "properties", "type", "anyOf", "required", "errorMessage", "Checkboxes", "Component", "constructor", "$root", "$inputs", "querySelectorAll", "length", "ElementError", "component", "identifier", "forEach", "$input", "targetId", "getAttribute", "document", "getElementById", "setAttribute", "removeAttribute", "window", "addEventListener", "syncAllConditionalReveals", "event", "handleClick", "syncConditionalRevealWithInputState", "$target", "classList", "contains", "inputIsChecked", "checked", "toString", "toggle", "unCheckAllInputsExcept", "name", "$inputWithSameName", "form", "unCheckExclusiveInputs", "$exclusiveInput", "$clickedInput", "target", "HTMLInputElement", "type", "moduleName", "ErrorSummary", "ConfigurableComponent", "constructor", "$root", "config", "disableAutoFocus", "setFocus", "addEventListener", "event", "handleClick", "$target", "target", "focusTarget", "preventDefault", "HTMLAnchorElement", "inputId", "hash", "replace", "$input", "document", "getElementById", "$legendOrLabel", "getAssociatedLegendOrLabel", "scrollIntoView", "focus", "preventScroll", "_document$querySelect", "$fieldset", "closest", "$legends", "getElementsByTagName", "length", "$candidateLegend", "HTMLInputElement", "type", "legendTop", "getBoundingClientRect", "top", "inputRect", "height", "window", "innerHeight", "querySelector", "getAttribute", "moduleName", "defaults", "Object", "freeze", "schema", "properties", "ExitThisPage", "ConfigurableComponent", "constructor", "$root", "config", "i18n", "$button", "$skiplinkButton", "$updateSpan", "$indicatorContainer", "$overlay", "keypressCounter", "lastKeyWasModified", "timeoutTime", "keypressTimeoutId", "timeoutMessageId", "querySelector", "HTMLAnchorElement", "ElementError", "component", "element", "expectedType", "identifier", "I18n", "document", "buildIndicator", "initUpdateSpan", "initButtonClickHandler", "body", "dataset", "addEventListener", "handleKeypress", "bind", "govukFrontendExitThisPageKeypress", "window", "resetPage", "createElement", "setAttribute", "className", "appendChild", "handleClick", "i", "$indicator", "updateIndicator", "classList", "toggle", "querySelectorAll", "forEach", "index", "exitPage", "textContent", "add", "t", "location", "href", "event", "preventDefault", "key", "clearTimeout", "setKeypressTimer", "resetKeypressTimer", "shiftKey", "setTimeout", "remove", "moduleName", "defaults", "Object", "freeze", "activated", "timedOut", "pressTwoMoreTimes", "pressOneMoreTime", "schema", "properties", "type", "FileUpload", "ConfigurableComponent", "constructor", "$root", "config", "$input", "$button", "$status", "i18n", "id", "$announcements", "enteredAnotherElement", "querySelector", "ElementError", "component", "identifier", "type", "formatErrorMessage", "I18n", "locale", "closestAttributeValue", "$label", "findLabel", "setAttribute", "document", "createElement", "classList", "add", "ariaDescribedBy", "getAttribute", "className", "innerText", "t", "appendChild", "commaSpan", "containerSpan", "buttonSpan", "insertAdjacentText", "instructionSpan", "addEventListener", "onClick", "bind", "event", "preventDefault", "insertAdjacentElement", "onChange", "updateDisabledState", "observeDisabledState", "onDrop", "updateDropzoneVisibility", "disabled", "hideDraggingState", "target", "Node", "contains", "dataTransfer", "canDrop", "showDraggingState", "remove", "canFillInput", "files", "dispatchEvent", "CustomEvent", "matchesInputCapacity", "length", "items", "countFileItems", "types", "includes", "numberOfFiles", "multiple", "fileCount", "name", "count", "click", "MutationObserver", "mutationList", "mutation", "attributeName", "observe", "attributes", "toggle", "moduleName", "defaults", "Object", "freeze", "chooseFilesButton", "dropInstruction", "noFileChosen", "multipleFilesChosen", "one", "other", "enteredDropZone", "leftDropZone", "schema", "properties", "list", "result", "i", "kind", "Header", "Component", "constructor", "$root", "$menuButton", "$menu", "menuIsOpen", "mql", "querySelector", "classList", "add", "menuId", "getAttribute", "ElementError", "component", "identifier", "document", "getElementById", "element", "setupResponsiveChecks", "addEventListener", "handleMenuButtonClick", "breakpoint", "getBreakpoint", "value", "property", "window", "matchMedia", "checkMode", "addListener", "matches", "removeAttribute", "setAttribute", "toString", "moduleName", "NotificationBanner", "ConfigurableComponent", "constructor", "$root", "config", "getAttribute", "disableAutoFocus", "setFocus", "moduleName", "defaults", "Object", "freeze", "schema", "properties", "type", "PasswordInput", "ConfigurableComponent", "constructor", "$root", "config", "i18n", "$input", "$showHideButton", "$screenReaderStatusMessage", "querySelector", "HTMLInputElement", "ElementError", "component", "element", "expectedType", "identifier", "type", "HTMLButtonElement", "I18n", "locale", "closestAttributeValue", "removeAttribute", "document", "createElement", "className", "setAttribute", "insertAdjacentElement", "addEventListener", "toggle", "bind", "form", "hide", "window", "event", "persisted", "preventDefault", "show", "setType", "isHidden", "prefixButton", "prefixStatus", "innerText", "t", "moduleName", "defaults", "Object", "freeze", "showPassword", "hidePassword", "showPasswordAriaLabel", "hidePasswordAriaLabel", "passwordShownAnnouncement", "passwordHiddenAnnouncement", "schema", "properties", "Radios", "Component", "constructor", "$root", "$inputs", "querySelectorAll", "length", "ElementError", "component", "identifier", "forEach", "$input", "targetId", "getAttribute", "document", "getElementById", "setAttribute", "removeAttribute", "window", "addEventListener", "syncAllConditionalReveals", "event", "handleClick", "syncConditionalRevealWithInputState", "$target", "classList", "contains", "inputIsChecked", "checked", "toString", "toggle", "$clickedInput", "target", "HTMLInputElement", "type", "$allInputs", "$clickedInputForm", "form", "$clickedInputName", "name", "hasSameFormOwner", "moduleName", "ServiceNavigation", "Component", "constructor", "$root", "$menuButton", "$menu", "menuIsOpen", "mql", "querySelector", "menuId", "getAttribute", "ElementError", "component", "identifier", "document", "getElementById", "element", "setupResponsiveChecks", "addEventListener", "handleMenuButtonClick", "breakpoint", "getBreakpoint", "value", "property", "window", "matchMedia", "checkMode", "addListener", "matches", "removeAttribute", "setAttribute", "toString", "moduleName", "SkipLink", "Component", "constructor", "$root", "_this$$root$getAttrib", "hash", "href", "getAttribute", "origin", "window", "location", "pathname", "linkedElementId", "replace", "ElementError", "$linkedElement", "document", "getElementById", "component", "element", "identifier", "addEventListener", "setFocus", "onBeforeFocus", "classList", "add", "onBlur", "remove", "elementType", "HTMLAnchorElement", "moduleName", "Tabs", "Component", "constructor", "$root", "$tabs", "$tabList", "$tabListItems", "jsHiddenClass", "changingHash", "boundTabClick", "boundTabKeydown", "boundOnHashChange", "mql", "querySelectorAll", "length", "ElementError", "component", "identifier", "onTabClick", "bind", "onTabKeydown", "onHashChange", "querySelector", "setupResponsiveChecks", "breakpoint", "getBreakpoint", "value", "property", "window", "matchMedia", "addEventListener", "checkMode", "addListener", "_this$mql", "matches", "setup", "teardown", "_this$getTab", "setAttribute", "forEach", "$item", "$tab", "setAttributes", "hideTab", "$activeTab", "getTab", "location", "hash", "showTab", "removeAttribute", "removeEventListener", "unsetAttributes", "$tabWithHash", "$previousTab", "getCurrentTab", "focus", "unhighlightTab", "hidePanel", "highlightTab", "showPanel", "panelId", "replace", "$panel", "getPanel", "id", "classList", "add", "remove", "event", "$currentTab", "$nextTab", "currentTarget", "HTMLAnchorElement", "preventDefault", "createHistoryEntry", "key", "activatePreviousTab", "activateNextTab", "parentElement", "$nextTabListItem", "nextElementSibling", "$previousTabListItem", "previousElementSibling", "moduleName", "initAll", "scopeOrConfig", "config", "isObject", "options", "normaliseOptions", "isSupported", "SupportError", "scope", "ElementError", "element", "identifier", "error", "onError", "console", "log", "Accordion", "accordion", "Button", "button", "CharacterCount", "characterCount", "Checkboxes", "ErrorSummary", "errorSummary", "ExitThisPage", "exitThisPage", "FileUpload", "fileUpload", "Header", "NotificationBanner", "notificationBanner", "PasswordInput", "passwordInput", "Radios", "ServiceNavigation", "SkipLink", "Tabs", "forEach", "Component", "componentConfig", "createAll", "scopeOrOptions", "$elements", "_options$scope", "component", "querySelectorAll", "moduleName", "Array", "from", "map", "$element", "filter", "Boolean", "SiriusHeader", "prefix", "navLinks", "navElements", "navElement", "url", "title", "hide", "openNewTab", "htmx", "elt", "type", "verb", "str", "interval", "name", "qualifiedName", "parent", "global", "condition", "initialElement", "ancestor", "attributeName", "attributeValue", "disinherit", "inherit", "closestAttr", "e", "selector", "match", "resp", "fragment", "script", "newScript", "attr", "response", "responseWithNoHead", "startTag", "doc", "titleElement", "func", "o", "dataProp", "data", "arr", "returnArr", "i", "el", "rect", "elemTop", "elemBottom", "trigger", "obj1", "obj2", "key", "jString", "error", "test", "path", "url", "callback", "evt", "event", "eltOrSelector", "delay", "value", "clazz", "node", "child", "prefix", "suffix", "trimmedSelector", "parts", "chevronsCount", "offset", "char", "result", "unprocessedParts", "item", "standardSelector", "rootNode", "start", "results", "context", "arg1", "arg2", "arg3", "arg4", "eventArgs", "attrName", "attrTarget", "eltToInheritFrom", "attribute", "targetStr", "mergeTo", "mergeFrom", "swapStyle", "target", "extensions", "extension", "oobValue", "oobElement", "settleInfo", "targets", "oobElementClone", "beforeSwapDetails", "pantry", "preservedElt", "existingElement", "id", "parentNode", "newNode", "normalizedId", "normalizedTag", "parentElt", "oldNode", "newAttributes", "autofocus", "autoFocusedElt", "insertBefore", "string", "hash", "internalData", "handlerInfo", "element", "info", "newElt", "eltBeforeNewContent", "firstChild", "ext", "newElements", "j", "oobElts", "content", "swapSpec", "swapOptions", "settleResolve", "settleReject", "doSwap", "activeElt", "selectionInfo", "oobSelectValues", "oobSelectValue", "template", "newFragment", "newActiveElt", "focusOptions", "doSettle", "task", "anchorTarget", "shouldTransition", "settlePromise", "_resolve", "_reject", "innerDoSwap", "xhr", "header", "triggerBody", "triggers", "eventName", "detail", "eventNames", "tokens", "position", "startPosition", "startChar", "symbol", "token", "last", "paramName", "bracketCount", "conditionalSource", "conditionFunction", "explicitTrigger", "cache", "triggerSpecs", "initialLength", "every", "eventFilter", "triggerSpec", "from_arg", "handler", "spec", "nodeData", "rawAttribute", "btn", "link", "samePageAnchor", "source", "explicitCancel", "elementData", "eltsToListenOn", "eltToListenOn", "eventListener", "eventData", "lastValue", "load", "explicitAction", "observerOptions", "entries", "attributes", "elements", "iter", "boostedSelector", "extensionSelectors", "selectors", "s", "form", "code", "listener", "afterOnPosition", "nextChar", "elementsToInit", "toDo", "extensionsToIgnore", "msg", "eventResult", "kebabName", "kebabedEvent", "rootElt", "innerHTML", "title", "scroll", "historyCache", "newHistoryItem", "className", "clone", "tasks", "request", "details", "cached", "indicators", "ic", "disabledElts", "disabledElement", "disabled", "ele", "processed", "formData", "v", "values", "errors", "validate", "input", "receiver", "donor", "priorityFormData", "button", "includes", "descendant", "returnStr", "realValue", "prompt", "headers", "inputValues", "paramsValue", "newValues", "swapInfoOverride", "swapInfo", "split", "splitSpec", "scrollVal", "selectorVal", "showVal", "focusScrollVal", "filteredParameters", "encodedParameters", "first", "evalAsDefault", "evaluateValue", "varsValues", "toEval", "defaultVal", "expressionVars", "headerValue", "regexp", "resolvedTarget", "requestConfig", "sameHost", "obj", "array", "index", "prop", "etc", "confirmed", "resolve", "reject", "promise", "responseHandler", "select", "eltData", "submitter", "buttonPath", "buttonVerb", "confirmQuestion", "skipConfirmation", "syncElt", "syncStrategy", "queueStrategy", "abortable", "syncStrings", "endRequestLock", "promptQuestion", "promptResponse", "rawFormData", "allFormData", "filteredFormData", "requestAttrValues", "eltIsBoosted", "useUrlParams", "splitPath", "pathNoAnchor", "anchor", "finalPath", "responseInfo", "hierarchy", "disableElts", "secondaryTriggerElt", "parentEltInHierarchy", "params", "pathFromHeaders", "typeFromHeaders", "requestPath", "responsePath", "pushUrl", "replaceUrl", "elementIsBoosted", "saveType", "responseHandlingConfig", "status", "regExp", "responseHandlingElement", "titleElt", "responseInfoSelect", "redirectPath", "redirectSwapSpec", "shouldRefresh", "historyUpdate", "responseHandling", "shouldSwap", "isError", "ignoreTitle", "selectOverride", "swapOverride", "serverResponse", "selectOOB", "finalElt", "api", "text", "parameters", "extensionsToReturn", "extensionsForElement", "extensionName", "fn", "nonceAttribute", "indicator", "metaConfig", "body", "restoredElts", "originalPopstate", "htmx_esm_default", "initAll", "htmx_esm_default"]
}
